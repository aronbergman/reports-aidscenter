{"version":3,"sources":["components/diagrams/styles.module.scss","components/all-forms/slyles.module.scss","components/filters/styles.module.scss","components/Forms/testing/images/pride.jpeg","components/Forms/testing/images/no-pride.jpg","images/logo-white.svg","images/logo-black.svg","components/Header/styles.module.scss","components/all-forms/all-forms.js","services/auth-header.js","baseurl.js","services/user.service.js","redux/reducers/user.reducer.js","constants/api.constants.js","redux/thunks/user.thunks.js","components/Welcome/WelcomeCard.jsx","components/Welcome/WelcomeGrid.jsx","redux/reducers/video.reducer.js","components/Welcome/index.jsx","redux/thunks/video.thunks.js","hooks/useAuth.js","constants/roles.constants.js","constants/others.constants.js","redux/reducers/filter.reducer.js","services/form.service.js","redux/thunks/forms.js","redux/thunks/types.js","components/Forms/testing/TestingForm.jsx","services/auth.service.js","components/Forms/Login.jsx","components/Forms/Register.jsx","components/Header/Header.jsx","components/Layouts/Default.jsx","components/Profile.jsx","components/Board-user.jsx","components/Board-moderator.jsx","services/diagram.service.js","components/diagrams/pie.js","components/diagrams/bar.js","components/filters/filters.js","components/reports/testing/TestingReport.jsx","redux/thunks/diagrams.js","components/Board-admin.jsx","components/Layouts/Admin.jsx","components/Home.jsx","components/Forms/PreviewImageForMetadata/index.jsx","http-common.js","services/upload-files.js","components/Forms/VideoMetadataForm.jsx","App.jsx","components/Admin/AddVideoFromAdmin.jsx","components/Admin/ListVideoFromAdmin.jsx","serviceWorker.js","redux/reducers/app.reducer.js","redux/reducer.js","redux/store.js","index.js","components/Forms/testing/styles.module.scss"],"names":["module","exports","AllForms","className","styles","to","style","textDecoration","card","disabled","authHeader","user","JSON","parse","localStorage","getItem","accessToken","baseUrl","host","API_URL","axios","get","headers","catch","userSlice","createSlice","name","initialState","userData","isAuthenticated","role","reducers","fetchRole","state","action","payload","actions","API_VIDEO_FIRST_LIST","API_FETCH_OFFSET_VIDOES","API_CREATE_VIDEO","API_AUTH_SIGNIN","fetchLoginForm","a","email","password","post","then","response","data","setItem","stringify","id","roles","username","useStyles","makeStyles","root","maxWidth","media","height","WelcomeCard","props","classes","video","folder","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","variant","color","component","theme","createStyles","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","WelcomeGrid","Grid","container","videos","map","index","key","item","xs","sm","videoSlice","count","loading","single","setVideos","setFirstVideos","isLoading","setSingleVideo","connect","dispatch","fetchFirst","fetchOffset","fetchOffsetToStore","useEffect","onChange","page","pageSize","offset","limit","total","showTotal","range","defaultPageSize","defaultCurrent","useAuth","WrappedComponent","Authenticate","getUser","UserService","getAdminBoard","setRole","getModeratorBoard","getUserBoard","this","React","Component","e","filterSlice","usedDrugs","usedPrep","sexWorked","rangePeriod","city","findByCode","setTestingDrugUsed","setTestingPrepUsed","setRangePeriod","setTestingCity","setTestingSexWorked","baseurl","fields","filters","testing","FormService","type","message","Promise","resolve","error","toString","reject","findTesting","Option","Select","TabPane","Tabs","pastTests","filter","code","useState","expanded","setExpanded","now","setNow","submitting","setSubmitting","setSuccessful","useDispatch","history","useHistory","Form","useForm","form","initialValues","resetFields","onFinish","values","console","log","stateForm","Object","createOtherFields","length","format","moment","removeItem","push","success","CodeInput","mask","placeholder","size","onChangeCode","formatCharacters","validate","char","test","transform","toUpperCase","event","value","target","setFieldsValue","valueClean","replace","resetForm","onClick","window","location","reload","backgroundImage","pride","noPride","titleContainer","line","h1","required","layout","onValuesChange","getFieldsValue","tabs","defaultActiveKey","tab","Item","label","rules","i","showIcon","description","sort","b","Group","option","checked","htmlFor","showTime","TextArea","htmlType","Login","handleLogin","bind","onChangeEmail","onChangePassword","setState","preventDefault","validateAll","checkBtn","context","_errors","resMessage","src","alt","onSubmit","ref","c","validations","display","isEmail","vusername","vpassword","Register","handleRegister","onChangeUsername","successful","AuthService","register","Header","children","Default","currentUser","Chart","registerables","createData","keyValue","multiplicity","hash","v","valueParse","parseInt","match","Math","ceil","createMultiplicityValue","obj","forEach","res","keys","assign","find","labels","datasets","backgroundColor","datalabels","anchor","plugins","ChartDataLabels","options","dataset","borderColor","borderRadius","borderWidth","dataIndex","formatter","ctx","sum","reduce","previousValue","currentValue","toFixed","font","weight","legend","position","aspectRatio","cutoutPercentage","elements","fill","point","hoverRadius","radius","PieDiagram","chartContainer","useRef","chartInstance","setChartInstance","autoUpdate","setAutoUpdate","setMultiplicity","updateDataset","useCallback","update","current","newChartInstance","showSelectorWithRounding","Button","arrayType","rounding","itemsArrayType","split","aa","trim","includes","round","floor","singleValuesLabels","indexAxis","responsive","scaleShowValues","scales","y","ticks","autoSkip","fontSize","max","stepSize","top","left","right","bottom","align","BarDiagram","setRounding","RangePicker","DatePicker","periodType","setDrugUsed","used","setPrepUsed","setSexWorked","period","setCity","locale","groups","allowClear","width","optionFilterProp","filterOption","input","toLowerCase","indexOf","Panel","Collapse","TestingReport","selectorFiltersTesting","useSelector","setTesting","columnsForm","setColumnsForm","rangePeriodStart","rangePeriodEnd","DiagramService","findDiagram","columns","column","order","comments","undefined","header","dataSource","bordered","scroll","x","tableLayout","pagination","Content","Layout","Sider","setTab","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","onSelect","mode","defaultSelectedKeys","icon","UserOutlined","margin","setComponent","Admin","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","videoFolder","isJpgOrPng","isLt2M","PreviewImageForMetadata","changeNameFile","oldName","File","lastModified","handleChange","info","status","originFileObj","imageUrl","uploadButton","LoadingOutlined","PlusOutlined","marginTop","listType","showUploadList","transformFile","folderName","create","baseURL","onUploadProgress","setFolderName","formData","FormData","append","http","fileName","filename","originalname","onSuccess","labelCol","span","wrapperCol","tailLayout","dipatch","createVideo","createVideoThunks","progress","setProgress","onFill","propsVideoUpload","strokeWidth","showInfo","steps","customRequest","UploadService","upload","percent","loaded","UploadOutlined","fieldContext","App","list","setList","getFiles","href","url","logOut","showModeratorBoard","showAdminBoard","readyToRedirect","getCurrentUser","prevProps","prevState","snapshot","logout","logoWhite","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","exact","path","Profile","TestingForm","BoardUser","BoardModerator","AdminPanel","logoBlack","withRouter","Boolean","hostname","appSlice","files","metro","typeOfApplicant","setLoadedFiles","resetFiles","setMetroStation","setLoading","setOneUserData","combineReducers","app","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","enhancers","reduxBatch","Sentry","dsn","ReactDOM","render","Fragment","accounts","clickmap","webvisor","version","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,IAAM,oBAAoB,MAAQ,wB,oBCA1FD,EAAOC,QAAU,CAAC,YAAY,0BAA0B,KAAO,qBAAqB,KAAO,uB,oBCA3FD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,yB,oBCD7DD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCC3CD,EAAOC,QAAU,CAAC,OAAS,yB,4RCkCZC,EA9BE,WACb,OACI,yBAAKC,UAAWC,IAAO,cAEnB,0GAEA,kBAAC,IAAD,CAASC,GAAG,WAAWC,MAAO,CAAEC,eAAgB,SAC5C,yBAAKJ,UAAWC,IAAOI,MAAvB,mLALR,6HAYI,kBAAC,IAAD,CAASC,UAAQ,EAACJ,GAAG,UAAUC,MAAO,CAAEC,eAAgB,SACpD,yBAAKJ,UAAWC,IAAOI,MAAvB,6GAKJ,kBAAC,IAAD,CAASC,UAAQ,EAACJ,GAAG,YAAYC,MAAO,CAAEC,eAAgB,SACtD,yBAAKJ,UAAWC,IAAOI,MAAvB,6J,uMC1BD,SAASE,IACpB,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAE7C,OAAIJ,GAAQA,EAAKK,YACN,CAAC,iBAAkBL,EAAKK,aAExB,GCNf,IAOeC,EAPC,WAGC,MAAO,+BCClBC,EAAOD,IAEPE,EAAO,UAAMD,EAAN,cAuBE,M,gGApBX,WACI,OAAOE,IAAMC,IAAIF,EAAU,S,0BAG/B,WACI,OAAOC,IAAMC,IAAIF,EAAU,OAAQ,CAACG,QAASZ,Q,+BAGjD,WACI,OAAOU,IAAMC,IAAIF,EAAU,MAAO,CAACG,QAASZ,MACvCa,OAAM,WACH,OAAOH,IAAMC,IAAIF,EAAU,QAAS,CAACG,QAASZ,W,2BAI1D,WACI,OAAOU,IAAMC,IAAIF,EAAU,QAAS,CAACG,QAASZ,U,cCrBhDc,EAAYC,YAAY,CAC1BC,KAHuB,OAIvBC,aAAc,CACVC,SAAU,KACVC,gBAAiB,KACjBC,KAAM,MAEVC,SAAU,CACNC,UADM,SACIC,EAAOC,GACbD,EAAML,SAAWM,EAAOC,QAAQP,SAChCK,EAAMJ,gBAAkBK,EAAOC,QAAQN,gBACvCI,EAAMH,KAAOI,EAAOC,QAAQL,SAMpCE,EACAR,EAAUY,QADVJ,UAGWR,IAAf,QCtBMN,EAAOD,IAEPE,EAAO,UAAMD,EAAN,QAIAmB,IAFoB,UAAMlB,EAAN,WAEA,UAAMA,EAAN,sBACpBmB,GAAuB,UAAMnB,EAAN,iBAIvBoB,IAHwB,UAAMpB,EAAN,gBACJ,UAAMA,EAAN,eACJ,UAAMA,EAAN,iBACA,UAAMA,EAAN,kBAEhBqB,GAAe,UAAMrB,EAAN,gBCPfsB,GAAc,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,kBAEpBxB,IAAMyB,KAAKL,GAAiB,CAAEG,QAAOC,aACtCE,MAAK,SAAAC,GACF,GAAIA,EAASC,KAAKhC,YAUd,OARAF,aAAamC,QAAQ,OAAQrC,KAAKsC,UAAU,CACxClC,YAAa+B,EAASC,KAAKhC,YAC3B2B,MAAOI,EAASC,KAAKL,MACrBQ,GAAIJ,EAASC,KAAKG,GAClBC,MAAOL,EAASC,KAAKI,MACrBC,SAAUN,EAASC,KAAKK,YAGrBN,EAASC,SAdF,2CAAH,sD,gFCCrBM,GAAYC,aAAW,CACzBC,KAAM,CACFC,SAAU,KAEdC,MAAO,CACHC,OAAQ,OAIHC,GAAc,SAAAC,GACvB,IAAMC,EAAUR,KAChB,OACI,kBAAC,IAAD,CAAMjD,GAAE,iBAAYwD,EAAME,MAAMC,SAC5B,kBAACC,GAAA,EAAD,CAAM9D,UAAW2D,EAAQN,MACrB,kBAACU,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIhE,UAAW2D,EAAQJ,MACnBU,MAAK,8CAAyCP,EAAME,MAAMC,OAArD,gBACLK,MAAM,0BAEV,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACvDb,EAAME,MAAMM,MADjB,WAC2BR,EAAME,MAAMZ,SC1BzDG,GAAYC,cAAW,SAACoB,GAAD,OACzBC,aAAa,CACTpB,KAAM,CACFqB,SAAU,GAEdC,MAAO,CACHC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXR,MAAOE,EAAMO,QAAQC,KAAKC,gBAKzBC,GAAc,SAAAxB,GACvB,IAAMC,EAAUR,KAChB,OACI,yBAAKnD,UAAW2D,EAAQN,MACpB,kBAAC8B,GAAA,EAAD,CAAMC,WAAS,EAACP,QAAS,GACpBnB,EAAM2B,OAAOC,KAAI,SAAC1B,EAAO2B,GAAR,OAAkB,kBAACJ,GAAA,EAAD,CAAMK,IAAK5B,EAAMC,OAAS0B,EAAOE,MAAI,EAACC,GAAI,EAAGC,GAAI,GACjF,kBAAC,GAAD,CAAa/B,MAAOA,W,UCpBlCgC,GAAatE,YAAY,CAC3BC,KAHuB,QAIvBC,aAAc,CACV6D,OAAQ,KACRQ,MAAO,KACPC,SAAS,EACTC,OAAQ,MAEZnE,SAAU,CACNoE,UADM,SACIlE,EAAOC,GACbD,EAAMuD,OAAStD,EAAOC,QAAQqD,QAElCY,eAJM,SAISnE,EAAOC,GAClBD,EAAMuD,OAAStD,EAAOC,QAAQqD,OAC9BvD,EAAM+D,MAAQ9D,EAAOC,QAAQ6D,MAC7B/D,EAAMgE,SAAU,GAEpBI,UATM,SASIpE,EAAOC,GACbD,EAAMgE,QAAU/D,EAAOC,SAE3BmE,eAZM,SAYSrE,EAAOC,GAClBD,EAAMiE,OAAShE,EAAOC,QACtBF,EAAMgE,SAAU,MAKrB,GAKHF,GAAW3D,QAJX+D,GADG,GACHA,UACAC,GAFG,GAEHA,eACAC,GAHG,GAGHA,UAHG,GAIHC,eAGWP,GAAf,QCQeQ,aAXS,SAAAtE,GAAK,MAAK,CAC9BuD,OAAQvD,EAAM8B,MAAMyB,OACpBQ,MAAO/D,EAAM8B,MAAMiC,MACnBC,QAAShE,EAAM8B,MAAMkC,YAGE,SAAAO,GAAQ,MAAK,CACpCC,WAAY,kBAAMD,EC1BW,uCAAM,WAAMA,GAAN,eAAA9D,EAAA,6DACnC8D,EAASH,IAAU,IADgB,SAEZjF,IAAMyB,KAAKR,IAFC,cAE7BU,EAF6B,yBAG5ByD,EAASJ,GAAerD,EAASC,QAHL,2CAAN,wDD2B7B0D,YAAa,SAAC1D,GAAD,OAAUwD,ECrBO,SAAAxD,GAAI,8CAAI,WAAMwD,GAAN,eAAA9D,EAAA,sEACftB,IAAMyB,KAAKP,GAAyBU,GADrB,cAChCD,EADgC,yBAE/ByD,EAASL,GAAUpD,EAASC,QAFG,2CAAJ,sDDqBF2D,CAAmB3D,QAGxCuD,EAxCC,SAAA1C,GAEZ+C,qBAAU,WACD/C,EAAMoC,SAAYpC,EAAM2B,QACzB3B,EAAM4C,eAEX,CAAC5C,IASJ,OACIA,EAAM2B,OAAS,oCACX,kBAAC,GAAD,CAAaA,OAAQ3B,EAAM2B,SAC3B,kBAAC,KAAD,CACIqB,SAXe,SAACC,EAAMC,GAC9BlD,EAAM6C,YAAY,CACdM,OAAQF,EAAO,EACfG,MAAOF,KASHG,MAAOrD,EAAMmC,MACbmB,UAAW,SAACD,EAAOE,GAAR,gBAAqBA,EAAM,GAA3B,YAAiCA,EAAM,GAAvC,yBAAgDF,EAAhD,oCACXG,gBAAiB,GACjBC,eAAgB,KAElB,QEvBC,SAASC,GAAQC,EAAkB1F,GAAO,IAC/C2F,EAD8C,4MAGhDC,QAAU,kBAAM9G,KAAKC,MAAMC,aAAaC,QAAQ,UAHA,uDAKhD,WAAqB,IAAD,OAChB,OAAQe,GACJ,ICfK,QDgBD,OAAO6F,EAAYC,gBAAgB9E,MAAK,WAChC,EAAKe,MAAMgE,QAAQ,CACfjG,SAAU,EAAK8F,UACf7F,iBAAiB,EACjBC,KCpBX,aDuBCP,OAAM,WACJ,EAAKsC,MAAMgE,QAAQ,CACfhG,iBAAiB,EACjBC,KAAM,UAGlB,IC5BS,MD6BL,OAAO6F,EAAYG,oBAAoBhF,MAAK,WACpC,EAAKe,MAAMgE,QAAQ,CACfjG,SAAU,EAAK8F,UACf7F,iBAAiB,EACjBC,KCjCP,WDoCHP,OAAM,WACJ,EAAKsC,MAAMgE,QAAQ,CACfhG,iBAAiB,EACjBC,KAAM,UAGlB,ICzCI,OD0CA,OAAO6F,EAAYI,eAAejF,MAAK,WAC/B,EAAKe,MAAMgE,QAAQ,CACfjG,SAAU,EAAK8F,UACf7F,iBAAiB,EACjBC,KC9CZ,YDiDEP,OAAM,WACJ,EAAKsC,MAAMgE,QAAQ,CACfhG,iBAAiB,EACjBC,KAAM,UAGlB,QACIkG,KAAKnE,MAAMgE,QAAQ,CACfhG,iBAAiB,EACjBC,KAAM,sBApD0B,oBAyDhD,WACI,OACmC,OAA/BkG,KAAKnE,MAAMhC,gBAA2BmG,KAAKnE,MAAMhC,gBAC7C,kBAAC2F,EAAqBQ,KAAKnE,OAAY,kBAAC,IAAD,CAAUxD,GAAI,MAAS,SA5D1B,GACzB4H,IAAMC,WAyEjC,OAAO3B,aATU,SAAAtE,GAAK,MAAK,CACvBJ,gBAAiBI,EAAMtB,KAAKkB,gBAC5BC,KAAMG,EAAMtB,KAAKmB,SAGD,SAAA0E,GAAQ,MAAK,CAC7BqB,QAAS,SAAAM,GAAC,OAAI3B,GN3ECxD,EM2EgBmF,EN3EZ,uCAAI,WAAM3B,GAAN,SAAA9D,EAAA,sDAC3B8D,EAASxE,EAAUgB,IADQ,2CAAJ,wDAAJ,IAAAA,MM8EZuD,CAA+BkB,GElFnC,ICKDW,GAAc3G,YAAY,CAC5BC,KAHqB,SAIrBC,aAAc,CACV0G,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,YAAa,KACbC,KAAM,KACNC,WAAY,MAEhB3G,SAAU,CACN2G,WADM,SACKzG,EAAOC,GACdD,EAAMyG,WAAaxG,EAAOC,SAE9BwG,mBAJM,SAIa1G,EAAOC,GACtBD,EAAMoG,UAAYnG,EAAOC,SAE7ByG,mBAPM,SAOa3G,EAAOC,GACtBD,EAAMqG,SAAWpG,EAAOC,SAE5B0G,eAVM,SAUS5G,EAAOC,GAClBD,EAAMuG,YAActG,EAAOC,SAE/B2G,eAbM,SAaS7G,EAAOC,GAClBD,EAAMwG,KAAOvG,EAAOC,SAExB4G,oBAhBM,SAgBc9G,EAAOC,GACvBD,EAAMsG,UAAYrG,EAAOC,YAK9B,GAOHiG,GAAYhG,QANZsG,GADG,GACHA,WACAC,GAFG,GAEHA,mBACAC,GAHG,GAGHA,mBACAG,GAJG,GAIHA,oBACAF,GALG,GAKHA,eACAC,GANG,GAMHA,eAGWV,MAAf,QC1CMlH,GAAO8H,IACP7H,GAAO,UAAMD,GAAN,cAYE,GAVC,SAAC+H,GACb,OAAO7H,IAAMyB,KAAK1B,GAAU,UAArB,eACA8H,GACJ,CAAE3H,QAASZ,OAOH,GAJK,WAAmB,IAAlBwI,EAAiB,uDAAP,GAC3B,OAAO9H,IAAMyB,KAAK1B,GAAU,eAAgB+H,EAAS,CAAE5H,QAASZ,OCPvDyI,GAAU,SAACF,GAAD,OAAY,SAACzC,GAChC,OAAO4C,GAAoBH,GAAQnG,MAC/B,SAACC,GAUG,OATAyD,EAAS,CACL6C,KCXgB,qBDcpB7C,EAAS,CACL6C,KCRW,cDSXlH,QAASY,EAASC,KAAKsG,UAGpBC,QAAQC,aAEnB,SAACC,GACG,IAAMH,EACDG,EAAM1G,UACH0G,EAAM1G,SAASC,MACfyG,EAAM1G,SAASC,KAAKsG,SACxBG,EAAMH,SACNG,EAAMC,WAWV,OATAlD,EAAS,CACL6C,KC7Ba,kBDgCjB7C,EAAS,CACL6C,KC3BW,cD4BXlH,QAASmH,IAGNC,QAAQI,cAKdC,GAAc,SAACV,GAAD,OAAa,SAAC1C,GACrC,OAAO4C,GAAwBF,GAASpG,MACpC,SAACC,GAUG,OATAyD,EAAS,CACL6C,KC/CgB,qBDkDpB7C,EAAS,CACL6C,KC5CW,cD6CXlH,QAASY,EAASC,KAAKsG,UAGpBC,QAAQC,QAAQzG,MAE3B,SAAC0G,GACG,IAAMH,EACDG,EAAM1G,UACH0G,EAAM1G,SAASC,MACfyG,EAAM1G,SAASC,KAAKsG,SACxBG,EAAMH,SACNG,EAAMC,WAWV,OATAlD,EAAS,CACL6C,KCjEa,kBDoEjB7C,EAAS,CACL6C,KC/DW,cDgEXlH,QAASmH,IAGNC,QAAQI,c,8DE7CpBE,GAAUC,IAAVD,OACAE,GAAWC,IAAXD,QAuzBQxC,MAAQhB,aARC,SAACtE,GAAD,MAAY,CAChCgI,UAAWhI,EAAMiI,OAAOxB,eAGD,SAAClC,GAAD,MAAe,CACtCkC,WAAY,SAACyB,GAAD,OAAU3D,EAASkC,GAAWyB,QAGvB5D,EArzBH,SAAC,GAAiB,IAAhB0D,EAAe,EAAfA,UAClB,EAAkCG,oBAAS,GAA3C,mBAAQC,EAAR,KAAkBC,EAAlB,KACA,EAAwBF,oBAAS,GAAjC,mBAAQG,EAAR,KAAaC,EAAb,KACA,EAAsCJ,oBAAS,GAA/C,mBAAQK,EAAR,KAAoBC,EAApB,KACA,EAAsCN,oBAAS,GAA/C,mBAAoBO,GAApB,WACMnE,EAAWoE,cACXC,EAAUC,cAChB,EAAiBC,IAAKC,UAAdC,EAAR,oBACMxC,EAAO7H,KAAKC,MAAMC,aAAaC,QAAQ,SACzCmK,EAAgB,GAGpBtE,qBAAU,kBAAMqE,EAAKE,gBAAe,CAACF,EAAMC,EAAeT,IAEtD3J,aAAaC,QAAQ,kBACrBmK,EAAa,2BACNtK,KAAKC,MAAMC,aAAaC,QAAQ,kBAChCmK,IAIPpK,aAAaC,QAAQ,gBACrBmK,EAAa,aACT,gBAAiBtK,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9CmK,IAIX,IAsBME,EAAQ,uCAAG,WAAOC,GAAP,mBAAA3I,EAAA,6DACb4I,QAAQC,IAAI,SAAUF,GACtBC,QAAQC,IAAI,gBAAiB9C,GAEvB+C,EAAY,IAAIC,OAAO,CACzB,SAAUJ,EAAO,UACjB,WAAYA,EAAO,YACnB,QAASA,EAAO,SAChB,4BAA6BA,EAAO,6BACpC,uBAAwBA,EAAO,wBAC/B,oCAAqCA,EAAO,qCAC5C,gCAAiCA,EAAO,iCACxC,yBAA0BA,EAAO,0BACjC,kBAAmBA,EAAO,mBAAqBA,EAAO,mBAAmB3B,WAAa,KACtF,2BAA4B2B,EAAO,4BACnC,mBAAoBA,EAAO,oBAAsBA,EAAO,oBAAoB3B,WAAa,KACzF,mBAAoB2B,EAAO,oBAC3B,wCAAyCA,EAAO,yCAChD,mCAAoCA,EAAO,oCAC3C,uCAAwCA,EAAO,wCAC/C,6BAA8BA,EAAO,8BACrC,gBAAiBA,EAAO,iBACxB,0BAA2BA,EAAO,2BAClC,iCAAkCA,EAAO,kCACzC,iCAAkCA,EAAO,kCACzC,mBAAoBA,EAAO,oBAC3B,6BAA8BA,EAAO,8BACrC,oBAAqBA,EAAO,qBAC5B,2BAA4BA,EAAO,4BACnC,6BAA8BA,EAAO,8BACrC,yBAA0BA,EAAO,0BACjC,kCAAmCA,EAAO,mCAC1C,qBAAsBA,EAAO,sBAC7B,2BAA4BA,EAAO,4BACnC,0BAA2BA,EAAO,2BAClC,4CAA6CA,EAAO,6CAA+CA,EAAO,6CAA6C,GAAK,KAC5J,oCAAqCA,EAAO,qCAAuCA,EAAO,qCAAqC,GAAK,KACpI,wDAAyDA,EAAO,yDAA2DA,EAAO,yDAAyD,GAAK,KAChM,gBAAiBA,EAAO,iBACxB,wBAAyBA,EAAO,yBAChC,UAAW5C,EAAKpF,WAGdqI,EAAoB,WAAO,IAAD,wDA4F5B,OAzFI,UAAAL,EAAO,+BAAP,eAAgCM,UAAhC,UAA0CN,EAAO,+BAAjD,aAA0C,EAAgCM,QAC1EH,EAAU,sBAAwB,sBAAKH,EAAO,yBAAZ,CAAqCA,EAAO,0BAA0B3B,YACrG,UAAI2B,EAAO,+BAAX,aAAI,EAAgCM,QACvCH,EAAU,sBAAwBH,EAAO,wBAAwB3B,YAC9D,UAAI2B,EAAO,+BAAX,aAAI,EAAgCM,QACvCH,EAAU,sBAAwB,CAAEH,EAAO,yBAA0B3B,WAErE8B,EAAU,sBAAwB,MAItC,UAAIH,EAAO,wBAAX,aAAI,EAAyBM,QACzBH,EAAU,eAAiBH,EAAO,iBAAiB,IAChD,UAAIA,EAAO,wBAAX,aAAI,EAAyBM,QAChCH,EAAU,eAAiBH,EAAO,iBAElCG,EAAU,eAAiB,MAI/B,UAAIH,EAAO,4CAAX,aAAI,EAA6CM,QAC7CH,EAAU,mCAAqCH,EAAO,qCAAqC,IACxF,UAAIA,EAAO,4CAAX,aAAI,EAA6CM,QACpDH,EAAU,mCAAqCH,EAAO,qCAEtDG,EAAU,mCAAqC,MAI/C,UAAAH,EAAO,+BAAP,eAAgCM,UAAhC,UAA0CN,EAAO,+BAAjD,aAA0C,EAAgCM,QAC1EH,EAAU,sBAAwB,sBAAKH,EAAO,yBAAZ,CAAqCA,EAAO,0BAA0B3B,YACrG,UAAI2B,EAAO,+BAAX,aAAI,EAAgCM,QACvCH,EAAU,sBAAwBH,EAAO,wBAAwB3B,YAC9D,UAAI2B,EAAO,+BAAX,aAAI,EAAgCM,QACvCH,EAAU,sBAAwB,CAAEH,EAAO,yBAA0B3B,WAErE8B,EAAU,sBAAwB,MAIlC,UAAAH,EAAO,0BAAP,eAA2BM,UAA3B,UAAqCN,EAAO,0BAA5C,aAAqC,EAA2BM,QAChEH,EAAU,iBAAmB,sBAAKH,EAAO,oBAAZ,CAAgCA,EAAO,qBAAqB3B,YACtF,UAAI2B,EAAO,0BAAX,aAAI,EAA2BM,QAClCH,EAAU,iBAAmBH,EAAO,mBAAmB3B,YACpD,UAAI2B,EAAO,0BAAX,aAAI,EAA2BM,QAClCH,EAAU,iBAAmB,CAAEH,EAAO,oBAAqB3B,WAE3D8B,EAAU,iBAAmB,MAI7B,UAAAH,EAAO,0BAAP,eAA2BM,UAA3B,UAAqCN,EAAO,0BAA5C,aAAqC,EAA2BM,QAChEH,EAAU,iBAAmB,sBAAKH,EAAO,oBAAZ,CAAgCA,EAAO,qBAAqB3B,YACtF,UAAI2B,EAAO,0BAAX,aAAI,EAA2BM,QAClCH,EAAU,iBAAmBH,EAAO,mBAAmB3B,YACpD,UAAI2B,EAAO,0BAAX,aAAI,EAA2BM,QAClCH,EAAU,iBAAmB,CAAEH,EAAO,oBAAqB3B,WAE3D8B,EAAU,iBAAmB,MAI7B,UAAAH,EAAO,6CAAP,eAA8CM,UAA9C,UAAwDN,EAAO,6CAA/D,aAAwD,EAA8CM,QACtGH,EAAU,oCAAsC,CAAEH,EAAO,sCAAuCA,EAAO,uCAAwC3B,YAC5I,UAAI2B,EAAO,6CAAX,aAAI,EAA8CM,QACrDH,EAAU,oCAAsCH,EAAO,sCAAsC3B,YAC1F,UAAI2B,EAAO,6CAAX,aAAI,EAA8CM,QACrDH,EAAU,oCAAsC,CAAEH,EAAO,uCAAwC3B,WAEjG8B,EAAU,oCAAsC,MAIhD,UAAAH,EAAO,gCAAP,eAAiCM,UAAjC,UAA2CN,EAAO,gCAAlD,aAA2C,EAAiCM,QAC5EH,EAAU,uBAAyB,CAAEH,EAAO,yBAA0BA,EAAO,0BAA2B3B,YACrG,UAAI2B,EAAO,gCAAX,aAAI,EAAiCM,QACxCH,EAAU,uBAAyBH,EAAO,yBAAyB3B,YAChE,UAAI2B,EAAO,gCAAX,aAAI,EAAiCM,QACxCH,EAAU,uBAAyB,CAAEH,EAAO,0BAA2B3B,WAEvE8B,EAAU,uBAAyB,KAGnCH,EAAM,KACNG,EAAU,WAAaH,EAAM,KAASO,OAAO,qBAE7CJ,EAAU,WAAaK,MAASD,OAAO,qBAGpCJ,GAvIE,SA0IQE,IA1IR,OA0IPzC,EA1IO,OA4IbyB,GAAc,GACdlE,EAAS2C,GAAQF,IACZnG,MAAK,WACF4H,GAAc,GACdC,GAAc,GACd7J,aAAagL,WAAW,gBACxBb,EAAKE,cACLN,EAAQkB,KAAK,UACbzC,IAAQ0C,QAAQ,oJAEnBzK,OAAM,WACHoJ,GAAc,MAvJT,2CAAH,sDAgKd,SAASsB,EAAUpI,GACf,OAAO,kBAAC,IAAD,eACHqI,KAAK,qBACLC,YAAY,sFACZC,KAAK,MACAvI,EAJF,CAKHgD,SAAWwF,EACXC,iBAAmB,CACf,EAAK,CACDC,SADC,SACQC,GACL,MAAO,oDAAsBC,KAAKD,IAEtCE,UAJC,SAISF,GACN,OAAOA,EAAKG,oBAOhC,IAaMN,EAAe,SAACO,GAClB,IAAMC,EAAQD,EAAME,OAAOD,MAC3B5B,EAAK8B,eAAe,CAChB,SAAUF,IAEd,IAAMG,EAAaH,EAAMI,QAAQ,UAAW,IAClB,KAAtBD,EAAWrB,QACXnF,EAASoD,GAAY,CACjBO,KAAM6C,KACNlK,MAAK,SAACE,GACNwD,EAASkC,GAAW1F,EAAKA,OACzBiI,EAAK8B,eAAe,CAChB,SAAUF,QAM1B,OACI,yBAAK1M,UAAYC,KAAOmF,WAEpB,yBAAKpF,UAAYC,KAAO8M,UAAYC,QA5O1B,WAMd,OALA7B,QAAQC,IAAI,aACZzK,aAAagL,WAAW,gBACxBZ,EAAgB,GAChB5B,IAAQ0C,QAAQ,4GAChBoB,OAAOC,SAASC,SACTrC,EAAKE,gBAsOR,6EAEA,yBAAKhL,UAAYC,KAAOgE,MACnB9D,MAAQ+J,EAAW,CAACkD,gBAAgB,OAAD,OAAUC,KAAV,MAAuB,CAACD,gBAAgB,OAAD,OAAUE,KAAV,QAG/E,yBAAKtN,UAAYC,KAAOsN,gBACpB,yBAAKvN,UAAYC,KAAOuN,OACxB,wBAAIxN,UAAYC,KAAOwN,IAAvB,qKACA,uBAAGzN,UAAYC,KAAOyN,UAAtB,wGAGJ,kBAAC,IAAD,CACIC,OAAS,WACT7C,KAAOA,EACPC,cAAgBA,EAChB6C,eAnPe,SAAC1C,GAEpBA,EAAM,MAAYA,EAAM,OAI5BvK,aAAamC,QAAQ,eAAgBrC,KAAKsC,UAAU+H,EAAK+C,mBAErD3C,EAAO,kBACPvK,aAAamC,QAAQ,aAAcrC,KAAKsC,UAAUmI,EAAO,qBA2OrDD,SAAWA,GAGX,yBAAKjL,UAAYC,KAAO6N,MACpB,kBAAC,IAAD,CAAM7B,KAAK,QAAQ8B,iBAAmB7D,EAAWxD,SAhFjE,SAAkBlB,GACd2E,EAAoB,MAAR3E,GACZ2F,QAAQC,IAAI,WAAYlB,KA+ER,kBAACN,GAAD,CAASoE,IAAI,qEAAcxI,IAAI,MAC/B,kBAACoE,GAAD,CAASoE,IAAI,qEAAcxI,IAAI,QAIvC,6BACI,kBAAC,IAAKyI,KAAN,CAAW1M,KAAK,SACL2M,MAAM,6mBACNC,MAAQ,CACJ,CACIT,UAAU,EACVvE,QAAS,iLAIxB,kBAAC2C,EAAD,OAGFhC,GAAa,6BACTA,EAAUxE,KAAI,SAAA8I,GAAC,OAAIA,EAAE,0BACnB,kBAAC,IAAD,CAAOjF,QAAUiF,EAAE,yBAA2BlF,KAAK,OAAOmF,UAAQ,EAACC,YAC/D,6BAAO5C,IAAO0C,EAAE,YAAY3C,OAAO,oBAAnC,IAA2D2C,EAAE,kBAC7D,kCAASA,EAAE,iBAAX,WACNtE,EAAU0B,OAAS,GAAK,6BACxB1B,EAAU0B,OAAS,EAAI,YAAI1B,GAAWyE,MAAK,SAAUhM,EAAGiM,GACtD,OAAIA,EAAE,WAAajM,EAAE,YACT,EAERiM,EAAE,WAAajM,EAAE,WACV,GAEH,KACT+C,KAAI,SAAA8I,GAAC,OACJ,kBAAC,IAAD,KAAO1C,IAAO0C,EAAE,WAAY,uBAAuB3C,OAAO,wBAC5D,uBAAGtL,MAAO,CAACmE,MAAM,SAAjB,qMAMR4F,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,uBAAuB2M,MAAM,2KACzC,kBAAC,IAASO,MAAV,KAlGQ,CACxB,CAACP,MAAO,mFAAmBxB,MAAO,oFAClC,CAACwB,MAAO,mFAAmBxB,MAAO,oFAClC,CAACwB,MAAO,qGAAsBxB,MAAO,sGACrC,CAACwB,MAAO,uCAAUxB,MAAO,wCACzB,CAACwB,MAAO,mDAAYxB,MAAO,oDAC3B,CAACwB,MAAO,mDAAYxB,MAAO,oDAC3B,CAACwB,MAAO,sJAA+BxB,MAAO,uJAC9C,CAACwB,MAAO,0IAA6BxB,MAAO,2IAC5C,CAACwB,MAAO,oGAAqBxB,MAAO,qGACpC,CAACwB,MAAO,yIAA4BxB,MAAO,2IAyFDpH,KAAI,SAAAoJ,GAAM,OAAI,kBAAC,IAAD,CAChChC,MAAQgC,EAAOhC,OAAUgC,EAAOR,YAG5C,kBAAC,IAAKD,KAAN,CAAW1M,KAAK,wBACZ,kBAAC,IAAD,CAAOyK,YAAY,2CAIzB9B,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,WAAW2M,MAAM,0CACpD,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,QAAb,8CACA,kBAAC,IAAD,CAAOA,MAAM,UAAb,gDAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,QAAQ2M,MAAM,kEACjD,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,kDAAb,oDAINxC,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,gBAAgB2M,MAAM,2RAClC,kBAAC,IAAD,CAAOlC,YAAY,gDAEvB,kBAAC,IAAKiC,KAAN,CAAW1M,KAAK,gBAAgB2M,MAAM,yCAClC,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,6CAK1BxC,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,oCACL2M,MAAM,4ZACb,kBAAC,IAAD,CAAOlC,YAAY,sIAEvB,kBAAC,IAAKiC,KAAN,CAAW1M,KAAK,oCAAoC2M,MAAM,sBACtD,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,0BAK1BxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,4BACd2M,MAAM,+OAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,uBACd2M,MAAM,2YAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,8GAAb,8GACA,kBAAC,IAAD,CAAOA,MAAM,wHAAb,wHACA,kBAAC,IAAD,CAAOA,MAAM,uJAAb,uJACA,kBAAC,IAAD,CAAOA,MAAM,wHAAb,wHACA,kBAAC,IAAD,CAAOA,MAAM,8CAAb,gDAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,oCACd2M,MAAM,iVAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,gCACd2M,MAAM,6VAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,yBACd2M,MAAM,iTAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,kBACL2M,MAAM,8VAC3B,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,qGAAhB,qGACA,kBAAC,IAAD,CAAUA,MAAM,mFAAhB,mFACA,kBAAC,IAAD,CAAUA,MAAM,mFAAhB,mFACA,kBAAC,IAAD,CAAUA,MAAM,uEAAhB,yEAINxC,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,uBACL2M,MAAM,4kBACb,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,gGAAhB,gGACA,kBAAC,IAAD,CAAUA,MAAM,4FAAhB,4FACA,kBAAC,IAAD,CAAUA,MAAM,6OAAhB,6OAGA,kBAAC,IAAD,CAAUA,MAAM,4GAAhB,4GACA,kBAAC,IAAD,CAAUA,MAAM,kPAAhB,kPAEA,kBAAC,IAAD,CAAUA,MAAM,8JAAhB,8JACA,kBAAC,IAAD,CAAUA,MAAM,oNAAhB,oNAEA,kBAAC,IAAD,CAAUA,MAAM,uNAAhB,uNAEA,kBAAC,IAAD,CAAUA,MAAM,2IAAhB,2IACA,kBAAC,IAAD,CAAUA,MAAM,iIAAhB,iIACA,kBAAC,IAAD,CAAUA,MAAM,sEAAhB,wEAGR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,wBACZ,kBAAC,IAAD,CAAOyK,YAAY,2CAIzB9B,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,2BACd2M,MAAM,2MAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GACF,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,mBAAmB2M,MAAM,iRACrC,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,8CAAhB,8CACA,kBAAC,IAAD,CAAUA,MAAM,8CAAhB,8CACA,kBAAC,IAAD,CAAUA,MAAM,4EAAhB,4EACA,kBAAC,IAAD,CAAUA,MAAM,yCAAhB,2CAINxC,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,kBACL2M,MAAM,4UACb,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,6EAAhB,6EACA,kBAAC,IAAD,CAAUA,MAAM,wCAAhB,wCACA,kBAAC,IAAD,CAAUA,MAAM,wCAAhB,wCACA,kBAAC,IAAD,CAAUA,MAAM,0DAAhB,0DACA,kBAAC,IAAD,CAAUA,MAAM,yEAAhB,yEACA,kBAAC,IAAD,CAAUA,MAAM,oDAAhB,oDACA,kBAAC,IAAD,CAAUA,MAAM,0DAAhB,0DACA,kBAAC,IAAD,CAAUA,MAAM,4EAAhB,4EACA,kBAAC,IAAD,CAAUA,MAAM,8CAAhB,gDAGR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,mBACZ,kBAAC,IAAD,CAAOyK,YAAY,2CAIzB9B,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,mBACd2M,MAAM,0MAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,wCACd2M,MAAM,skBAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,uDAAb,uDACA,kBAAC,IAAD,CAAOA,MAAM,mEAAb,mEACA,kBAAC,IAAD,CAAOA,MAAM,mEAAb,mEACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,mCACd2M,MAAM,8YAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,uCACd2M,MAAM,ibAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,kBACL2M,MAAM,uaACb,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,sBAAhB,sBACA,kBAAC,IAAD,CAAUA,MAAM,iIAAhB,mIAGR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,mBACZ,kBAAC,IAAD,CAAOyK,YAAY,2CAIzB9B,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,6BACd2M,MAAM,6NAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,gBACd2M,MAAM,qPAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,0BACd2M,MAAM,mOAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,oEAAb,oEACA,kBAAC,IAAD,CAAOA,MAAM,0EAAb,0EACA,kBAAC,IAAD,CAAOA,MAAM,2EAAb,2EACA,kBAAC,IAAD,CAAOA,MAAM,qJAAb,qJACA,kBAAC,IAAD,CAAOA,MAAM,2DAAb,6DAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,iCACd2M,MAAM,oJAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,4GAAb,4GACA,kBAAC,IAAD,CAAOA,MAAM,4GAAb,4GACA,kBAAC,IAAD,CAAOA,MAAM,iIAAb,mIAKNxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,iCACd2M,MAAM,6GAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,qCACL2M,MAAM,2kBACb,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,mIAAb,mIACA,kBAAC,IAAD,CAAOA,MAAM,6HAAb,6HACA,kBAAC,IAAD,CAAOA,MAAM,yFAAb,2FAGR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,sCACZ,kBAAC,IAAD,CAAOyK,YAAY,2CAIzB9B,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,mBACd2M,MAAM,gGAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,wWAAb,wWAGA,kBAAC,IAAD,CACIA,MAAM,wYADV,wYAGA,kBAAC,IAAD,CACIA,MAAM,0XADV,0XAGA,kBAAC,IAAD,CACIA,MAAM,6eADV,6eAIA,kBAAC,IAAD,CAAOA,MAAM,qTAAb,qTAGA,kBAAC,IAAD,CAAOA,MAAM,mMAAb,mMACA,kBAAC,IAAD,CAAOA,MAAM,wQAAb,0QAMNxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,6BACd2M,MAAM,2eAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,+FAAb,+FACA,kBAAC,IAAD,CAAOA,MAAM,kKAAb,kKACA,kBAAC,IAAD,CACIA,MAAM,weADV,weAGA,kBAAC,IAAD,CACIA,MAAM,mmBADV,mmBAIA,kBAAC,IAAD,CAAOA,MAAM,gIAAb,gIACA,kBAAC,IAAD,CAAOA,MAAM,8IAAb,gJAKNxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,oBACd2M,MAAM,qIAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,6GAAb,6GACA,kBAAC,IAAD,CAAOA,MAAM,yTAAb,yTAGA,kBAAC,IAAD,CAAOA,MAAM,6EAAb,6EACA,kBAAC,IAAD,CAAOA,MAAM,sNAAb,sNAEA,kBAAC,IAAD,CAAOA,MAAM,6LAAb,6LACA,kBAAC,IAAD,CAAOA,MAAM,0JAAb,0JACA,kBAAC,IAAD,CAAOA,MAAM,uEAAb,yEAKNxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,2BACd2M,MAAM,2RAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAKNxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,6BACd2M,MAAM,uOAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gIAAb,gIACA,kBAAC,IAAD,CAAOA,MAAM,kWAAb,kWAGA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,yBACd2M,MAAM,0UAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gIAAb,gIACA,kBAAC,IAAD,CAAOA,MAAM,kWAAb,kWAGA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAKNxC,GAAY,6BACV,kBAAC,IAAK+D,KAAN,CAAW1M,KAAK,wBACL2M,MAAM,4GACb,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,WAAb,WACA,kBAAC,IAAD,CAAOA,MAAM,kEAAb,kEACA,kBAAC,IAAD,CAAOA,MAAM,mUAAb,qUAKR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,yBACZ,kBAAC,IAAD,CAAOyK,YAAY,2CAKzB9B,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,kCACd2M,MAAM,0FAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,gSAAb,gSAGA,kBAAC,IAAD,CAAOA,MAAM,iGAAb,iGACA,kBAAC,IAAD,CAAOA,MAAM,mMAAb,qMAIR,kBAAC,IAAKuB,KAAN,CAAWP,UAAQ,EAACnM,KAAK,qBACd2M,MAAM,0HACb,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,kFAAb,kFACA,kBAAC,IAAD,CAAOA,MAAM,kFAAb,oFAKNxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,2BACd2M,MAAM,yJAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,kFAAb,kFACA,kBAAC,IAAD,CAAOA,MAAM,kFAAb,oFAINxC,GAAY,kBAAC,IAAK+D,KAAN,CAAWP,UAAQ,EAACnM,KAAK,0BACd2M,MAAM,kJAC3B,kBAAC,IAAMO,MAAP,KACI,kBAAC,IAAD,CAAO/B,MAAM,kFAAb,kFACA,kBAAC,IAAD,CAAOA,MAAM,kFAAb,oFAKR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,4CACL2M,MAAM,wSACb,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,gBAAhB,kBAIR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,oCAAoC2M,MAAM,qOACtD,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,gBAAhB,kBAIR,kBAAC,IAAKuB,KAAN,CAAW1M,KAAK,wDACL2M,MAAM,qSACb,kBAAC,IAASO,MAAV,KACI,kBAAC,IAAD,CAAU/B,MAAM,gBAAhB,kBAIR,kBAAC,IAAKuB,KAAN,CACI1M,KAAK,gBAAgB2M,MAAM,oSAC3BC,MAAQ,CAAE,CAACT,UAAU,EAAMvE,QAAS,iCAEpC,kBAAC,IAAD,KACI,kBAACO,GAAD,CAAQgD,MAAM,6EAAd,6EACA,kBAAChD,GAAD,CAAQgD,MAAM,uHAAd,yHAIR,6BACI,kBAAC,IAAD,CAAQiC,QAAUvE,EAAM1D,SAAW,kBAAM2D,GAAQD,MADrD,eAC+E,2BAAOwE,QAAQ,IAAf,uPAO1ExE,GAAO,oCACJ,kBAAC,IAAK6D,KAAN,CAAWE,MAAQ,CACf,CACIT,UAAU,EACVvE,QAAS,gLAEb5H,KAAK,OAAO2M,MAAK,kEACjB,kBAAC,IAAD,CAAYW,UAAQ,EAACpD,OAAS,uBAM1C,kBAAC,IAAKwC,KAAN,CAAW1M,KAAK,wBAAwB2M,MAAM,+IAC1C,kBAAC,IAAMY,SAAP,CAAgB9C,YAAY,wEAG9B1B,EAAa,aAAe,kBAAC,IAAK2D,KAAN,KAC1B,kBAAC,IAAD,CAAQc,SAAS,SAAS7F,KAAK,WAA/B,+FNn0BA,Q,0COCdnI,GAAOD,IACPE,GAAO,UAAMD,GAAN,cAmCE,O,sFAjBb,WACEJ,aAAagL,WAAW,U,sBAG1B,SAASzI,EAAUV,EAAOC,GACxB,OAAOxB,IAAMyB,KAAK1B,GAAU,SAAU,CACpCkC,WACAV,QACAC,e,4BAIJ,WACE,OAAOhC,KAAKC,MAAMC,aAAaC,QAAQ,a,qEC1BrC8M,GAAW,SAAAhB,GACb,IAAKA,EACD,OACI,yBAAK1M,UAAU,qBAAqB2B,KAAK,SAAzC,uJAyJGqN,G,kDAjJX,WAAYtL,GAAQ,IAAD,8BACf,cAAMA,IACDuL,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKpN,MAAQ,CACTU,MAAO,GACPC,SAAU,GACVqD,SAAS,EACTqD,QAAS,IAVE,E,iDAcnB,SAAcnB,GACVH,KAAKwH,SAAS,CACV7M,MAAOwF,EAAE2E,OAAOD,U,8BAIxB,SAAiB1E,GACbH,KAAKwH,SAAS,CACV5M,SAAUuF,EAAE2E,OAAOD,U,yBAI3B,SAAY1E,GAAI,IAAD,OACXA,EAAEsH,iBAEFzH,KAAKwH,SAAS,CACVlG,QAAS,GACTrD,SAAS,IAGb+B,KAAKiD,KAAKyE,cAEmC,IAAzC1H,KAAK2H,SAASC,QAAQC,QAAQlE,OAC9BlJ,GAAe,CAACE,MAAOqF,KAAK/F,MAAMU,MAAOC,SAAUoF,KAAK/F,MAAMW,WAAWE,MACrE,SAACqF,GACOA,EAAE/E,MAAMuI,SACR,EAAK9H,MAAMgH,QAAQkB,KAAK,UACxBqB,OAAOC,SAASC,aAGxB,SAAA7D,GACI,IAAMqG,EACDrG,EAAM1G,UACH0G,EAAM1G,SAASC,MACfyG,EAAM1G,SAASC,KAAKsG,SACxBG,EAAMH,SACNG,EAAMC,WAEV,EAAK8F,SAAS,CACVvJ,SAAS,EACTqD,QAASwG,OAKrB9H,KAAKwH,SAAS,CACVvJ,SAAS,M,oBAKrB,WAAU,IAAD,OACL,OACI,yBAAK9F,UAAU,aACX,yBACIA,UAAU,sBACV4P,IAAI,yDACJC,IAAI,gBAGR,yBAAK7P,UAAU,uBAMX,wBAAIA,UAAU,yBAAd,iFAEA,kBAAC,KAAD,CACI8P,SAAWjI,KAAKoH,YAChBc,IAAM,SAAAC,GACF,EAAKlF,KAAOkF,IAIhB,yBAAKhQ,UAAU,cACX,2BAAO4O,QAAQ,SAAf,0DACA,kBAAC,KAAD,CACI1F,KAAK,OACLlJ,UAAU,eACVuB,KAAK,QACLmL,MAAQ7E,KAAK/F,MAAMU,MACnBkE,SAAWmB,KAAKsH,cAChBc,YAAc,CAAEvC,OAIxB,yBAAK1N,UAAU,cACX,2BAAO4O,QAAQ,YAAf,wCACA,kBAAC,KAAD,CACI1F,KAAK,WACLlJ,UAAU,eACVuB,KAAK,WACLmL,MAAQ7E,KAAK/F,MAAMW,SACnBiE,SAAWmB,KAAKuH,iBAChBa,YAAc,CAAEvC,OAIxB,yBAAK1N,UAAU,cACX,4BACIA,UAAU,4BACVM,SAAWuH,KAAK/F,MAAMgE,SAEpB+B,KAAK/F,MAAMgE,SACT,0BAAM9F,UAAU,qCAEpB,kEAIN6H,KAAK/F,MAAMqH,SACT,yBAAKnJ,UAAU,cACX,yBAAKA,UAAU,qBAAqB2B,KAAK,SACnCkG,KAAK/F,MAAMqH,UAIzB,kBAAC,KAAD,CACIhJ,MAAQ,CAAC+P,QAAS,QAClBH,IAAM,SAAAC,GACF,EAAKR,SAAWQ,Y,GAxI5BjI,a,UCXd2F,GAAW,SAAAhB,GACb,IAAKA,EACD,OACI,yBAAK1M,UAAU,qBAAqB2B,KAAK,SAAzC,uJAONa,GAAQ,SAAAkK,GACV,IAAKyD,mBAAQzD,GACT,OACI,yBAAK1M,UAAU,qBAAqB2B,KAAK,SAAzC,kHAONyO,GAAY,SAAA1D,GACd,GAAIA,EAAMlB,OAAS,GAAKkB,EAAMlB,OAAS,GACnC,OACI,yBAAKxL,UAAU,qBAAqB2B,KAAK,SAAzC,+HAON0O,GAAY,SAAA3D,GACd,GAAIA,EAAMlB,OAAS,GAAKkB,EAAMlB,OAAS,GACnC,OACI,yBAAKxL,UAAU,qBAAqB2B,KAAK,SAAzC,+HAOS2O,G,kDACjB,WAAY5M,GAAQ,IAAD,8BACf,cAAMA,IACD6M,eAAiB,EAAKA,eAAerB,KAApB,gBACtB,EAAKsB,iBAAmB,EAAKA,iBAAiBtB,KAAtB,gBACxB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKpN,MAAQ,CACToB,SAAU,GACVV,MAAO,GACPC,SAAU,GACVgO,YAAY,EACZtH,QAAS,IAZE,E,oDAgBnB,SAAiBnB,GACbH,KAAKwH,SAAS,CACVnM,SAAU8E,EAAE2E,OAAOD,U,2BAI3B,SAAc1E,GACVH,KAAKwH,SAAS,CACV7M,MAAOwF,EAAE2E,OAAOD,U,8BAIxB,SAAiB1E,GACbH,KAAKwH,SAAS,CACV5M,SAAUuF,EAAE2E,OAAOD,U,4BAI3B,SAAe1E,GAAI,IAAD,OACdA,EAAEsH,iBAEFzH,KAAKwH,SAAS,CACVlG,QAAS,GACTsH,YAAY,IAGhB5I,KAAKiD,KAAKyE,cAEmC,IAAzC1H,KAAK2H,SAASC,QAAQC,QAAQlE,QAC9BkF,GAAYC,SACR9I,KAAK/F,MAAMoB,SACX2E,KAAK/F,MAAMU,MACXqF,KAAK/F,MAAMW,UACbE,MACE,SAAAC,GACI,EAAKyM,SAAS,CACVlG,QAASvG,EAASC,KAAKsG,QACvBsH,YAAY,OAGpB,SAAAnH,GACI,IAAMqG,EACDrG,EAAM1G,UACH0G,EAAM1G,SAASC,MACfyG,EAAM1G,SAASC,KAAKsG,SACxBG,EAAMH,SACNG,EAAMC,WAEV,EAAK8F,SAAS,CACVoB,YAAY,EACZtH,QAASwG,S,oBAO7B,WAAU,IAAD,OAGL,OADAxE,QAAQC,IAAIvD,KAAK/F,OAEb,yBAAK9B,UAAU,aACX,yBAAKA,UAAU,uBACX,yBACI4P,IAAI,8CACJC,IAAI,cACJ7P,UAAU,qBAGd,kBAAC,KAAD,CACI8P,SAAUjI,KAAK0I,eACfR,IAAK,SAAAC,GACD,EAAKlF,KAAOkF,KAGdnI,KAAK/F,MAAM2O,YACT,6BACI,yBAAKzQ,UAAU,cACX,2BAAO4O,QAAQ,YAAf,YACA,kBAAC,KAAD,CACI1F,KAAK,OACLlJ,UAAU,eACVuB,KAAK,WACLmL,MAAO7E,KAAK/F,MAAMoB,SAClBwD,SAAUmB,KAAK2I,iBACfP,YAAa,CAACvC,GAAU0C,OAIhC,yBAAKpQ,UAAU,cACX,2BAAO4O,QAAQ,SAAf,SACA,kBAAC,KAAD,CACI1F,KAAK,OACLlJ,UAAU,eACVuB,KAAK,QACLmL,MAAO7E,KAAK/F,MAAMU,MAClBkE,SAAUmB,KAAKsH,cACfc,YAAa,CAACvC,GAAUlL,OAIhC,yBAAKxC,UAAU,cACX,2BAAO4O,QAAQ,YAAf,YACA,kBAAC,KAAD,CACI1F,KAAK,WACLlJ,UAAU,eACVuB,KAAK,WACLmL,MAAO7E,KAAK/F,MAAMW,SAClBiE,SAAUmB,KAAKuH,iBACfa,YAAa,CAACvC,GAAU2C,OAKhC,yBAAKrQ,UAAU,cACX,4BAAQA,UAAU,6BAAlB,wEAKX6H,KAAK/F,MAAMqH,SACR,yBAAKnJ,UAAU,cACX,yBACIA,UACI6H,KAAK/F,MAAM2O,WACL,sBACA,qBAEV9O,KAAK,SAEJkG,KAAK/F,MAAMqH,UAIxB,kBAAC,KAAD,CACIhJ,MAAO,CAAE+P,QAAS,QAClBH,IAAK,SAAAC,GACD,EAAKR,SAAWQ,Y,GA1JVjI,a,qBCrCvB6I,GARA,SAAAlN,GACX,OACI,yBAAK1D,UAAW2D,KAAQiN,QACnBlN,EAAMmN,WCIJC,GARC,SAAApN,GACZ,OACI,yBAAK1D,UAAU,aACV0D,EAAMmN,WCmBJzJ,OAlBC,WAEZ,IAAM2J,EAActQ,KAAKC,MAAMC,aAAaC,QAAQ,SAEpD,OACI,6BACI,kBAAC,GAAD,KACI,uFAEJ,kBAAC,GAAD,KACI,2BAAG,yCAAH,KAA4BmQ,EAAYvO,OACxC,gFACA,mHZhBI,QagBL4E,OAZI,WACf,OAAQ,6BACA,kBAAC,GAAD,KACI,sEAEJ,kBAAC,GAAD,mBbTQ,QcaLA,OAXI,WAEf,OACI,4BAAQpH,UAAU,aACd,0DdPa,O,kDeGnBe,GAAO8H,IACP7H,GAAO,UAAMD,GAAN,iBAME,GAJK,WAAgB,IAAfmI,EAAc,uDAAP,GACxB,OAAOjI,IAAMyB,KAAK1B,GAASkI,EAAM,CAAE/H,QAASZ,O,wCCFhDyQ,KAAML,SAAN,MAAAK,KAAK,YAAaC,OAElB,IAAMC,GAAa,SAACrO,EAAMsO,EAAUC,GAEhC,IAYMC,EAAOxO,EAAKyC,KAAI,SAAAgM,GAAC,OAZS,SAAC5E,GAC7B,IAAM6E,EAAa7E,GAAS8E,SAAS9E,EAAM+E,MAAM,QACjD,OAAQL,GACJ,IAAK,IACD,OAAoC,EAA5BM,KAAKC,KAAKJ,EAAa,GACnC,IAAK,KACD,OAAqC,GAA7BG,KAAKC,KAAKJ,EAAa,IACnC,QACI,OAAO7E,GAIQkF,CAAwBN,EAAEH,OAC/CU,EAAM,GAEZR,EAAKS,SAAQ,SAAAR,GAAC,OAAKO,EAAIP,GAAkBO,EAAIP,KAAjBO,EAAIP,GAAK,KACrC,IAAMS,EAAMzG,OAAO0G,KAAKH,GAAKvM,KAAI,SAAAgM,GAAC,MAAI,CAAChG,OAAO2G,OAAO,GAAIpP,EAAKqP,MAAK,SAAAlC,GAAC,OAAIA,EAAEmB,IAAaG,MAAKO,EAAIP,OAC3F/C,MAAK,SAAChM,EAAGiM,GAAJ,OAAUA,EAAE,GAAKjM,EAAE,MAK7B,MAAO,CACH2G,KAAM,WACNrG,KAAM,CACFsP,OANOJ,EAAIzM,KAAI,SAAA8I,GAAC,OAAIA,EAAE,GAAG+C,MAOzBiB,SAAU,CACN,CACIlE,MAAO,aACPrL,KATGkP,EAAIzM,KAAI,SAAA8I,GAAC,OAAIA,EAAE,MAUlBiE,gBAAiB,CACb,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,WAAY,CACRC,OAAQ,UAKxBC,QAAS,CAACC,MACVC,QAAS,CACLF,QAAS,CACLhP,OAAQ,IACR8O,WAAY,CACRD,gBAAiB,SAAU5C,GACvB,OAAOA,EAAQkD,QAAQN,iBAE3BO,YAAa,QACbC,aAAc,GACdC,YAAa,EACbxO,MAAO,QACP4L,QAAS,SAAUT,GACf,IAAIkD,EAAUlD,EAAQkD,QAClB9M,EAAQ8M,EAAQ9P,KAAK2I,OAEzB,OADYmH,EAAQ9P,KAAK4M,EAAQsD,WACV,IAARlN,GAEnBmN,UAAW,SAAUtG,EAAOuG,GACxB,IAAIC,EAAMD,EAAIN,QAAQ9P,KAAKsQ,QAAO,SAACC,EAAeC,GAAhB,OAAiCD,EAAgBC,KAEnF,MAAM,GAAN,QAAmB,IAAR3G,EAAcwG,GAAKI,QAAQ,GAAK,MAE/CC,KAAM,CACFC,OAAQ,QAEZ5O,QAAS,GAEb6O,OAAQ,CACJC,SAAU,SAKlBC,YAAa,EACbC,iBAAkB,GAClBjG,OAAQ,CACJ/I,QAAS,IAEbiP,SAAU,CACNrG,KAAM,CACFsG,MAAM,GAEVC,MAAO,CACHC,YAAa,EACbC,OAAQ,OA8DbC,GAvDI,SAAC,GAA+B,IAA7BrR,EAA4B,EAA5BA,KAAMqB,EAAsB,EAAtBA,MAAOiN,EAAe,EAAfA,SAEzBgD,EAAiBC,iBAAO,MAC9B,EAA0CnK,mBAAS,MAAnD,mBAAOoK,EAAP,KAAsBC,EAAtB,KACA,EAAoCrK,oBAAS,GAA7C,mBAAOsK,EAAP,KAAmBC,EAAnB,KACA,EAAwCvK,mBAAS,KAAjD,mBAAOmH,EAAP,KAAqBqD,EAArB,KAeMC,EAAgBC,uBAAY,WAC9BN,EAAcxR,KAAOqO,GAAWrO,EAAMsO,EAAUC,GAAcvO,KAC9DwR,EAAcO,YAclB,OAXAnO,qBAAU,WACN,GAAI0N,GAAkBA,EAAeU,SAAWhS,IAASwR,EAAe,CACpE,IAAMS,EAAmB,IAAI9D,KAAMmD,EAAeU,QAAS3D,GAAWrO,EAAMsO,EAAUC,IACtFkD,EAAiBQ,MAEtB,CAACX,EAAgBE,EAAexR,EAAMsO,EAAUC,IAEnD3K,qBAAU,WACN4N,GAAiBE,GAAcG,MAChC,CAAC7R,EAAM0R,EAAYnD,EAAciD,EAAeK,IAG/C,yBAAK1U,UAAWC,KAAOmF,WACnB,wBAAIpF,UAAWC,KAAOiE,OAAQA,GA/BL,WAC7B,OAAQiN,GACJ,IAAK,cACD,OAAO,EACX,QACI,OAAO,GA4BV4D,IAA8B,kBAAC,IAAMtG,MAAP,CAAa/B,MAAO0E,EAAc1K,SAxB3C,SAACsB,GAC3ByM,EAAgBzM,EAAE2E,OAAOD,SAwBjB,kBAAC,IAAMsI,OAAP,CAActI,MAAM,KAApB,yFACA,kBAAC,IAAMsI,OAAP,CAActI,MAAM,KAApB,oDACA,kBAAC,IAAMsI,OAAP,CAActI,MAAM,MAApB,sDANR,eASI,kBAAC,IAAD,CAAUiC,QAAS4F,EAAY7N,SAAU,kBAAM8N,GAAeD,KAA9D,0KAEEA,GAAc,4BAAQvH,QAAS0H,GAAjB,oDAEhB,4BAAQ3E,IAAKoE,MCtJzBnD,KAAML,SAAN,MAAAK,KAAK,YAAaC,OAElB,IAAMC,GAAa,SAACrO,EAAMsO,EAAU8D,EAAW/L,EAAMgM,GAEjD,IAkBInD,EAFAV,EAAO,GACP8D,EAAiB,GAGjBtD,EAAM,GAEV,GAAIoD,EAAW,CACX5D,EAAOxO,EAAKyC,KAAI,SAAAgM,GAAC,OAAIA,EAAEH,MACvB,IAAK,IAAI/C,EAAI,EAAGA,GAAKiD,EAAK7F,OAAQ4C,IAAK,CACnC,GAAIiD,EAAKjD,GACKiD,EAAKjD,GAAGgH,MAAM,KACtB9P,KAAI,SAAA+P,GAAE,OAAIF,EAAevJ,KAAKyJ,EAAGC,WAI3CH,EAAerD,SAAQ,SAAAR,GAAC,OAAKO,EAAIP,GAAkBO,EAAIP,KAAjBO,EAAIP,GAAK,KAC/CS,EAAMzG,OAAO0G,KAAKH,GAAKvM,KAAI,SAAAgM,GAAC,MAAI,CAAChG,OAAO2G,OAAO,GAAIpP,EAAKqP,MAAK,SAAAlC,GACzD,GAAIA,EAAEmB,IAAanB,EAAEmB,GAAUoE,SAASjE,GAEpC,OADAtB,EAAEmB,GAAYG,EACPtB,EAAEmB,GAAUoE,SAASjE,OAE/BO,EAAIP,OACJ/C,MAAK,SAAChM,EAAGiM,GAAJ,OAAUA,EAAE,GAAKjM,EAAE,WAI7B8O,EAAOxO,EAAKyC,KAAI,SAAAgM,GAAC,OA1CW,SAAC5E,GAC7B,IAAM6E,EAAa7E,GAAS8E,SAAS9E,EAAM+E,MAAM,QAEjD,GAAiB,oCAAbN,EACA,OAAQ+D,GACJ,IAAK,IACD,OAAqC,EAA7BxD,KAAK8D,MAAMjE,EAAa,GACpC,IAAK,IACD,OAAoC,EAA5BG,KAAKC,KAAKJ,EAAa,GACnC,IAAK,KACD,OAAqC,EAA7BG,KAAK+D,MAAMlE,EAAa,GAG5C,OAAO7E,EA6BckF,CAAwBN,EAAEH,QAE1CW,SAAQ,SAAAR,GAAC,OAAKO,EAAIP,GAAkBO,EAAIP,KAAjBO,EAAIP,GAAK,KACrCS,EAAMzG,OAAO0G,KAAKH,GAAKvM,KAAI,SAAAgM,GAAC,MAAI,CAAChG,OAAO2G,OAAO,GAAIpP,EAAKqP,MAAK,SAAAlC,GAAC,OAAIA,EAAEmB,IAAaG,MAAKO,EAAIP,OACrF/C,MAAK,SAAChM,EAAGiM,GAAJ,OAAUA,EAAE,GAAKjM,EAAE,MAGjC,IAAM4P,EAASJ,EAAIhI,QAAO,SAAAqE,GAAC,OAAIA,EAAE,GAAK,KAAG9I,KAAI,SAAA8I,GACzC,OAAOA,EAAE,GAAG+C,MAGVuE,EAAqB3D,EAAIhI,QAAO,SAAAqE,GAAC,OAAa,IAATA,EAAE,MAAU9I,KAAI,SAAA8I,GACvD,OAAOA,EAAE,GAAG+C,MAKhB,MAAO,CACHjI,KAAM,MACNrG,KAAM,CACFsP,SACAC,SAAU,CACN,CACIlE,MAAO,aACPrL,KATGkP,EAAIhI,QAAO,SAAAqE,GAAC,OAAIA,EAAE,GAAK,KAAG9I,KAAI,SAAA8I,GAAC,OAAIA,EAAE,MAUxCiE,gBAAiB,CACb,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,WAAY,CACRC,OAAQ,SAIpBmD,mBAAoBA,GAExBlD,QAAS,CAACC,MACVC,QAAS,CACLiD,UAAWzM,EAAO,IAAM,IACxB0M,YAAY,EACZpD,QAAS,CACLqD,iBAAiB,EACjBC,OAAQ,CACJC,EAAG7M,EAAO,GAAK,CACX8M,MAAO,CACHC,UAAU,EACVC,SAAU,GACVC,IAAK,KACLC,SAAU,GAEdxR,QAAS,CAAEyR,IAAK,GAAIC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,KAGvDhT,OAAQ,IACRiQ,QAAQ,EAERnB,WAAY,CACRmE,MAAO,MACP5P,OAAQ,KAGhB+M,iBAAkB,GAClBjG,OAAQ,CACJ/I,QAAS,IAEbiP,SAAU,CACNrG,KAAM,CACFsG,MAAM,GAEVC,MAAO,CACHC,YAAa,EACbC,OAAQ,OAiEbyC,GA1DI,SAAC,GAAgD,IAA9C7T,EAA6C,EAA7CA,KAAMqB,EAAuC,EAAvCA,MAAOiN,EAAgC,EAAhCA,SAAU8D,EAAsB,EAAtBA,UAAW/L,EAAW,EAAXA,KAE9CiL,EAAiBC,iBAAO,MAC9B,EAA0CnK,mBAAS,MAAnD,mBAAOoK,EAAP,KAAsBC,EAAtB,KACA,EAAoCrK,oBAAS,GAA7C,mBAAOsK,EAAP,KAAmBC,EAAnB,KACA,EAAgCvK,mBAAS,KAAzC,mBAAOiL,EAAP,KAAiByB,EAAjB,KAeMjC,EAAgB,WAClBL,EAAcxR,KAAOqO,GAAWrO,EAAMsO,EAAU8D,EAAW/L,EAAMgM,GAAUrS,KAC3EwR,EAAcO,UAclB,OAXAnO,qBAAU,WACN,GAAI0N,GAAkBA,EAAeU,SAAWhS,IAASwR,EAAe,CACpE,IAAMS,EAAmB,IAAI9D,KAAMmD,EAAeU,QAAS3D,GAAWrO,EAAMsO,EAAU8D,EAAW/L,EAAMgM,IACvGZ,EAAiBQ,MAEtB,CAACX,EAAgBtR,IAEpB4D,qBAAU,WACN4N,GAAiBE,GAAcG,MAChC,CAAC7R,EAAM0R,EAAYW,IAGlB,yBAAKlV,UAAWC,KAAOmF,WACnB,wBAAIpF,UAAWC,KAAOiE,OAAQA,GACf,oCAAbiN,GACF,gSAjCyB,WAC7B,OAAQA,GACJ,IAAK,kCACD,OAAO,EACX,QACI,OAAO,GA8BV4D,IAA8B,kBAAC,IAAMtG,MAAP,CAAa/B,MAAOwI,EAAUxO,SA1B3C,SAACsB,GACvB2O,EAAY3O,EAAE2E,OAAOD,SA0Bb,kBAAC,IAAMsI,OAAP,CAActI,MAAM,KAApB,0IACA,kBAAC,IAAMsI,OAAP,CAActI,MAAM,KAApB,gGACA,kBAAC,IAAMsI,OAAP,CAActI,MAAM,MAApB,iGARR,eAWI,kBAAC,IAAD,CAAUiC,QAAS4F,EAAY7N,SAAU,kBAAM8N,GAAeD,KAA9D,0KAEEA,GAAc,4BAAQvH,QAAS0H,GAAjB,oDAEhB,4BAAQ3E,IAAKoE,IACZE,GAAiBA,EAAcxR,KAAK6S,mBAAmBpQ,KAAI,SAAA8I,GAAC,OAAI,kBAAC,IAAD,6BAAqBA,Q,4DCvK1F1E,GAAWC,IAAXD,OACAkN,GAAgBC,IAAhBD,YA+EOxQ,gBAfS,SAACtE,GAAD,MAAY,CAChCgV,WAAYhV,EAAMiI,OAAO+M,WACzB5O,UAAWpG,EAAMiI,OAAO7B,UACxBE,UAAWtG,EAAMiI,OAAO3B,UACxBD,SAAUrG,EAAMiI,OAAO5B,aAGA,SAAC9B,GAAD,MAAe,CACtC0Q,YAAa,SAACC,GAAD,OAAU3Q,EAASmC,GAAmBwO,KACnDC,YAAa,SAACD,GAAD,OAAU3Q,EAASoC,GAAmBuO,KACnDE,aAAc,SAACF,GAAD,OAAU3Q,EAASuC,GAAoBoO,KACrDtO,eAAgB,SAACyO,GAAD,OAAY9Q,EAASqC,GAAeyO,KACpDC,QAAS,SAAC9O,GAAD,OAAUjC,EAASsC,GAAeL,QAGhClC,EA5EC,SAAC,GAUO,IATHgC,EASE,EATFA,UACAD,EAQE,EARFA,SACAD,EAOE,EAPFA,UACA4O,EAME,EANFA,WACAC,EAKE,EALFA,YACAE,EAIE,EAJFA,YACAC,EAGE,EAHFA,aACAxO,EAEE,EAFFA,eACA0O,EACE,EADFA,QAqBjB,OACI,yBAAKpX,UAAWC,KAAO8I,SACH,QAAf+N,GAAwB,kBAAC,KAAD,CAAgBO,OAAQA,MAC7C,kBAACT,GAAD,CAAa/H,UAAQ,EAACnI,SAXN,SAACyQ,GACzBzO,EAAeyO,IAU8C1L,OAnClD,yBAqCP,yBAAKzL,UAAWC,KAAOqX,QACnB,kBAAC,IAAD,CAAU5Q,SAxBG,WACrBqQ,GAAa7O,KAuBL,cACA,kBAAC,IAAD,CAAUxB,SAtBG,WACrBuQ,GAAa9O,KAqBL,aACA,kBAAC,IAAD,CAAUzB,SApBI,WACtBwQ,GAAc9O,KAmBN,gBAGJ,kBAAC,IAAD,CACImP,YAAU,EACVpX,MAAO,CAAEqX,MAAO,KAChBxL,YAAY,+FACZyL,iBAAiB,WACjB/Q,SApBS,SAAC4B,GAClB8O,EAAQ9O,IAoBAoP,aAAc,SAACC,EAAOjJ,GAAR,OACVA,EAAOmC,SAAS+G,cAAcC,QAAQF,EAAMC,gBAAkB,IAGlE,kBAAC,GAAD,CAAQlL,MAAM,UAAd,wCACA,kBAAC,GAAD,CAAQA,MAAM,MAAd,yFACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,8FClERoL,GAAUC,KAAVD,MACAlO,GAAYC,IAAZD,QA6GOoO,GA3GO,WAClB,IAAM3R,EAAWoE,cACXwN,EAAyBC,aAAY,SAACpW,GAAD,OAAWA,EAAMiI,UAC5D,EAA8BE,mBAAS,MAAvC,mBAAOjB,EAAP,KAAgBmP,EAAhB,KACA,EAAsClO,mBAAS,MAA/C,mBAAOmO,EAAP,KAAoBC,EAApB,KACMtP,EAAU,CACZuP,iBAAkBL,EAAuB5P,aAAe4P,EAAuB5P,YAAY,GAAGoD,OAAO,qBAAqBlC,WAC1HgP,eAAgBN,EAAuB5P,aAAe4P,EAAuB5P,YAAY,GAAGoD,OAAO,qBAAqBlC,WACxHrB,UAAW+P,EAAuB/P,UAClCC,SAAU8P,EAAuB9P,SACjCC,UAAW6P,EAAuB7P,UAClCE,KAAM2P,EAAuB3P,MAGjC7B,qBAAU,WACNJ,EAASoD,GAAYV,IAAUpG,MAAK,SAACE,GACjCsV,EAAWtV,EAAKA,SAGpBwD,EC9BmB,SAAC0C,GAAD,OAAa,SAAC1C,GACrC,OAAOmS,GAA2BzP,GAASpG,MACvC,SAACC,GAUG,OATAyD,EAAS,CACL6C,KfWe,oBeRnB7C,EAAS,CACL6C,KfJW,ceKXlH,QAASY,EAASC,KAAKsG,UAGpBC,QAAQC,QAAQzG,MAE3B,SAAC0G,GACG,IAAMH,EACDG,EAAM1G,UACH0G,EAAM1G,SAASC,MACfyG,EAAM1G,SAASC,KAAKsG,SACxBG,EAAMH,SACNG,EAAMC,WAWV,OATAlD,EAAS,CACL6C,KfTY,iBeYhB7C,EAAS,CACL6C,KfvBW,cewBXlH,QAASmH,IAGNC,QAAQI,aDDViP,CAAY,CAAEvP,KAAM,aAAcvG,MAAK,SAACE,GAC7CwV,EAAexV,EAAKA,WAGzB,CAACoV,IAEJ,IAAMS,EAAUN,GAAeA,EAAY9S,KAAI,SAAAqT,GAAM,MAAK,CACtDzU,MAAOyU,EAAOzU,MACd6O,UAAW4F,EAAO3O,KAClBxE,IAAKmT,EAAO3O,KACZ4O,MAAOD,EAAOC,MACdpB,MAAO,QAENjJ,MAAK,SAAChM,EAAGiM,GAAJ,OAAUjM,EAAEqW,MAAQpK,EAAEoK,SAE1BC,EAAW7P,GAAWA,EAAQe,QAAO,SAAAqE,GAAC,OAAMA,EAAE,0BAA4BA,EAAE,iBAAoB,CAClG,wBAAyBA,EAAE,yBAC3B,gBAAiBA,EAAE,iBACnB,UAAWA,EAAE,iBACb0K,KAEJ,OACI,6BACI,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAM/K,iBAAiB,KACnB,kBAAC,GAAD,CAASC,IAAI,6HAAyBxI,IAAI,KAErC4S,GAAeA,EAAY9S,KAAI,SAAAqT,GAC5B,MAAoB,QAAhBA,EAAOzP,KACA,kBAAC,GAAD,CACHhF,MAAOyU,EAAOzU,MACdiN,SAAUwH,EAAO3O,KACjBnH,KAAMmG,IAEH2P,EAAOzP,MAAQyP,EAAOzP,KAAKqM,SAAS,OACpC,kBAAC,GAAD,CACHrR,MAAOyU,EAAOzU,MACdiN,SAAUwH,EAAO3O,KACjBd,KAAMyP,EAAOzP,KAAKqM,SAAS,KAC3B1S,KAAMmG,EACNiM,UAAWmD,EAAYlG,MAAK,SAAA9D,GAAC,OAAIA,EAAEpE,OAAS2O,EAAO3O,QAAxC,YAEQ,UAAhB2O,EAAOzP,KACP,kBAAC,KAAD,KACH,kBAAC4O,GAAD,CAAOiB,OAAO,iHAAuBvT,IAAI,KAC7C,kBAAC,KAAD,CAAOwT,WACHH,EAAUH,QAAS,CACnB,CACIxU,MAAO,8IACP6O,UAAW,wBACXvN,IAAK,yBAET,CACItB,MAAO,qEACP6O,UAAW,gBACXvN,IAAK,iBAET,CACItB,MAAO,2BACP6O,UAAW,UACXvN,IAAK,qBAlBV,MA2Bf,kBAAC,GAAD,CAASwI,IAAI,6EAAiBxI,IAAI,KAC9B,kBAAC,KAAD,CACIyT,UAAQ,EACRtL,OAAO,OACP1B,KAAK,QACLiN,OAAQ,CAAEC,EAAG,qBAAsBpD,EAAG,QACtC2C,QAASA,EACTM,WAAYhQ,EACZoQ,YAAY,OACZC,YAAU,EACVhD,IAAI,OACJG,OAAO,oBEzGvB8C,GAAmBC,KAAnBD,QAASE,GAAUD,KAAVC,MAwDFpS,OAvDI,WACf,MAAsB6C,mBAAS,KAA/B,mBAAO+D,EAAP,KAAYyL,EAAZ,KAiBA,OACI,kBAAC,KAAD,KACI,kBAACD,GAAD,CACIE,WAAW,KACXC,eAAe,IACfC,aAAc,SAAAC,GACV1O,QAAQC,IAAIyO,IAEhBC,WAAY,SAACC,EAAW7Q,GACpBiC,QAAQC,IAAI2O,EAAW7Q,KAG3B,kBAAC,KAAD,CAAM8Q,SA3BG,SAAChS,GAClByR,EAAOzR,EAAExC,MA0B6BhB,MAAM,OAAOyV,KAAK,SAASC,oBAAqB,CAAClM,IAI3E,kBAAC,KAAKC,KAAN,CAAWzI,IAAI,IAAI2U,KAAM,kBAACC,GAAA,EAAD,OAAzB,sEAGA,kBAAC,KAAKnM,KAAN,CAAWzI,IAAI,KAAf,8GAQR,kBAAC,KAAD,KAEI,kBAAC8T,GAAD,CAASnZ,MAAO,CAAEka,OAAQ,gBAxCjB,SAACrM,GACnB,OAAQA,GACJ,IAAK,IACD,OAAO,kBAAC,GAAD,MACX,IAAK,IACD,MAAO,slBACX,QACI,MAAO,IAkCDsM,CAAatM,QrBzDb,SsBGdwL,ICeQpS,IAZF,WACX,OAAQ,6BACF,kBAAC,GAAD,KACE,8CAEF,kBAAC,GAAD,mBvBTY,QsBCKmS,KAAlBC,OAAOF,GAAWC,KAAXD,QAyCCiB,GAvCD,SAAA7W,GAMV,OACI,kBAAC,KAAD,KACI,kBAAC,GAAD,CACIgW,WAAW,KACXC,eAAe,IACfC,aAAc,SAAAC,GACV1O,QAAQC,IAAIyO,IAEhBC,WAAY,SAACC,EAAW7Q,GACpBiC,QAAQC,IAAI2O,EAAW7Q,KAG3B,yBAAKlJ,UAAU,SACf,kBAAC,KAAD,CAAMwE,MAAM,OAAOyV,KAAK,SAASD,SAjBnB,SAAAhS,GACtBtE,EAAMgH,QAAQkB,KAAd,iBAA6B5D,EAAExC,QAiBnB,kBAAC,KAAKyI,KAAN,CAAWzI,IAAI,aAAf,mFAGA,kBAAC,KAAKyI,KAAN,CAAWzI,IAAI,cAAf,uEAGA,kBAAC,KAAKyI,KAAN,CAAWzI,IAAI,KAAf,SAGA,kBAAC,KAAKyI,KAAN,CAAWzI,IAAI,KAAf,WAKR,kBAAC,GAAD,KAAU9B,EAAMmN,Y,wDElC5B,SAAS2J,GAAUC,EAAKC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAcN,GAGzB,SAASO,GAAaC,EAAMC,GACxB,IAAMC,EAA2B,eAAdF,EAAK/R,MAAuC,cAAd+R,EAAK/R,KACjDiS,GACDhS,IAAQG,MAAM,qCAKlB,IAAM8R,EAASH,EAAKhP,KAAO,KAAO,KAAO,EAIzC,OAHKmP,GACDjS,IAAQG,MAAM,gCAEX6R,GAAcC,EAGlB,IAAMC,GAAb,4MACIvZ,MAAQ,CACJgE,SAAS,GAFjB,EAKIwV,eAAiB,SAACL,EAAMC,GACpB,IAAMK,EAAUN,EAAK1Z,KAAK6T,MAAM,KAEhC,OADAjK,QAAQC,IAAImQ,GACL,IAAIC,KAAK,CAACP,GAAOC,EAAc,IAAMK,EAAQ,GAAI,CACpDrS,KAAM+R,EAAK/R,KACXuS,aAAcR,EAAKQ,gBAV/B,EAcIC,aAAe,SAAAC,GACc,cAArBA,EAAKV,KAAKW,OAIW,SAArBD,EAAKV,KAAKW,QAEVpB,GAAUmB,EAAKV,KAAKY,eAAe,SAAAC,GAAQ,OACvC,EAAKzM,SAAS,CACVyM,WACAhW,SAAS,OARjB,EAAKuJ,SAAS,CAAEvJ,SAAS,KAhBrC,4CA8BI,WAAU,IAAD,OACL,EAA8B+B,KAAK/F,MAA3BgE,EAAR,EAAQA,QAASgW,EAAjB,EAAiBA,SACXC,EACF,6BACKjW,EAAU,kBAACkW,GAAA,EAAD,MAAqB,kBAACC,GAAA,EAAD,MAChC,yBAAK9b,MAAO,CAAE+b,UAAW,IAAzB,2DAGR,OACI,kBAAC,KAAD,CACI3a,KAAK,UACL4a,SAAS,eACTnc,UAAU,kBACVoc,gBAAgB,EAChBra,OAAO,2CACPiZ,aAAcA,GACdqB,cAAe,SAAArU,GAAC,OAAI,EAAKsT,eAAetT,EAAG,EAAKtE,MAAM4Y,aACtD5V,SAAUmB,KAAK6T,cAEdI,EAAW,yBAAKlM,IAAKkM,EAAUjM,IAAI,UAAU1P,MAAO,CAAEqX,MAAO,UAAcuE,OAjD5F,GAA6CjU,IAAMC,WCxBpC9G,OAAMsb,OAAO,CACxBC,QAAS,wBACTrb,QAAS,CACL,eAAgB,sBCyBT,O,sFA3BX,SAAO8Z,EAAMwB,EAAkBC,GAC3B,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ5B,EAAKA,MAE7B6B,GAAKpa,KAAK,oBAAqBia,EAAU,CACrCxb,QAAS,CACL,eAAgB,uBAEpBsb,qBACD9Z,MAAK,SAAAE,GACJ,IAAMka,EAAWla,EAAKA,KAAK,GAAGma,SAAS5H,MAAM,KACvC6H,EAAepa,EAAKA,KAAK,GAAGoa,aAAa7H,MAAM,KAErDsH,EAAc,CAAEK,SAAUA,EAAS,GAAIE,aAAcA,EAAa,KAClEhC,EAAKiC,iB,sBAIb,WACI,OAAOJ,GAAK5b,IAAI,kB,MCdlByM,GAAS,CACXwP,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAGRE,GAAa,CACfD,WAAY,CACRxW,OAAQ,EACRuW,KAAM,KAqHChX,gBARS,SAAAtE,GAAK,MAAK,CAC9BA,MAAOA,MAGgB,SAAAyb,GAAO,MAAK,CACnCC,YAAa,SAAA3a,GAAI,OAAI0a,E7B1HQ,SAAA1a,GAAI,6BAAI,4BAAAN,EAAA,sEACdtB,IAAMyB,KAAKN,GAAkBS,EAAM,CAAE1B,QAASZ,MADhC,cAC/BqC,EAD+B,yBAE9BA,EAASC,MAFqB,2C6B0HR4a,CAAkB5a,QAGpCuD,EAjHW,SAAA1C,GAGtB,MAAekH,IAAKC,UAAbC,EAAP,oBACA,EAAgCb,mBAAS,GAAzC,mBAAOyT,EAAP,KAAiBC,EAAjB,KACA,EAAoC1T,mBAAS,GAA7C,mBAAOqS,EAAP,KAAmBI,EAAnB,KAcAjW,qBAAU,kBAAMmX,OAChB,IAAMA,EAAS,WACX9S,EAAK8B,eAAe,CAChB1I,MAAOoY,EAAWW,aAClBpZ,OAAQyY,EAAWS,SACnBzO,YAAa,MASfuP,EAAmB,CACrBH,SAAU,CAAEI,YAAa,EAAGC,UAAU,EAAOC,MAAO,IACpDzc,KAAM,OACNJ,QAAS,CACL,eAAgB,uBAEpB8c,cAXW,SAAAjW,GACXmD,QAAQC,IAAI,WAAYpD,GACxBkW,GAAcC,OAAOnW,GAAG,SAAAyE,GAAK,OAAIoR,EAAiBnX,SAAS+F,KAAQiQ,IAUnEhW,SAPqB,SAOZiV,GACL,IAAMyC,GAAYzC,EAAK0C,OAAS1C,EAAK5U,MAAS,KAAKuM,QAAQ,IACvDqI,EAAK0C,QAAU1C,EAAK5U,QAAO4W,EAAYS,KAInD,OACI,kBAAC,IAAD,iBAAUzQ,GAAV,CAAkB7C,KAAMA,EAAMvJ,KAAK,gBAAgB0J,SAxCtC,SAACC,GACdA,EAAOrH,OAASH,EAAM4Y,WACtB5Y,EAAM8Z,YAAN,2BACOtS,GADP,IAEIrH,OAAQyY,EAAWS,eAqCnB,kBAAC,IAAK9O,KAAN,CACI1M,KAAK,QACL2M,MAAM,iHAEN,kBAAC,KAAW2P,EACR,kBAAC,IAAD,CAAQ1D,KAAM,kBAACmE,GAAA,EAAD,OAAd,oBAEHZ,EAAW,EAAI,kBAAC,KAAD,CAAUU,QAASV,IAAc,MAErD,kBAAC,IAAKzP,KAAN,CACI1M,KAAK,SACL2M,MAAM,yFACTqQ,aAAa,UACV,kBAAC,IAAD,OAEJ,kBAAC,IAAKtQ,KAAN,CACI1M,KAAK,QACL2M,MAAM,wFACNC,MAAO,CACH,CACIT,UAAU,KAIlB,kBAAC,IAAD,OAEJ,kBAAC,IAAKO,KAAN,CACI1M,KAAK,cACL2M,MAAM,8FACNC,MAAO,CACH,CACIT,UAAU,KAIlB,kBAAC,IAAMoB,SAAP,SAGDwN,GAAc,kBAAC,IAAKrO,KAAN,CAAWC,MAAM,uEAC9B,kBAAC,GAAD,CAAyBoO,WAAYA,EAAWS,YAGpD,kBAAC,IAAK9O,KAASqP,GACX,kBAAC,IAAD,CAAQpU,KAAK,UAAU6F,SAAS,UAAhC,yFAGA,kBAAC,IAAD,CAAQA,SAAS,SAAS/B,QA/EtB,WACZlC,EAAKE,gBA8EG,iHAGA,kBAAC,IAAD,CAAQ9B,KAAK,OAAO6F,SAAS,SAAS/B,QAAS4Q,GAA/C,iFC9FVY,ICVSpX,IAVW,SAAA1D,GAEtB,OACI,kBAAC,GAAD,CAAOgH,QAAShH,EAAMgH,SAClB,gKACA,kBAAC,GAAD,S7BXS,S8B+BNtD,IAzBW,SAAA1D,GACtB,MAAuBuG,mBAAS,MAAhC,mBAAOwU,EAAP,KAAaC,EAAb,KAMA,OAJAjY,qBAAU,WACNyX,GAAcS,WAAWhc,MAAK,SAACE,GAAD,OAAU6b,EAAQ7b,EAAKA,WACtD,IAGC,kBAAC,GAAD,CAAO6H,QAAShH,EAAMgH,SAClB,2CACA,yBAAK1K,UAAU,QACX,yBAAKA,UAAU,eAAf,wEACA,wBAAIA,UAAU,+BACTye,GACDA,EAAKnZ,KAAI,SAAC2V,EAAM1V,GAAP,OACL,wBAAIvF,UAAU,kBAAkBwF,IAAKD,GACjC,uBAAGqZ,KAAM3D,EAAK4D,KAAM5D,EAAK1Z,KAAzB,uO9BtBP,S,kD4B2BjB,WAAYmC,GAAQ,IAAD,8BACf,cAAMA,IACDob,OAAS,EAAKA,OAAO5P,KAAZ,gBAEd,EAAKpN,MAAQ,CACTid,oBAAoB,EACpBC,gBAAgB,EAChBjO,iBAAa+H,EACbmG,gBAAiB,MARN,E,qDAYnB,WACI,IAAMxd,EAAWhB,KAAKC,MAAMC,aAAaC,QAAQ,SACjDuK,QAAQC,IAAI,WAAY3J,GACxB,IAAMjB,EAAOkQ,GAAYwO,iBAErB1e,GACAqH,KAAKwH,SAAS,CACV0B,YAAaL,GAAYwO,iBACzBH,mBAAoBve,EAAKyC,MAAMsS,SAAS,kBACxCyJ,eAAgBxe,EAAKyC,MAAMsS,SAAS,kB,gCAKhD,SAAmB4J,EAAWC,EAAWC,GACH,OAA9BD,EAAUH,iBACVpX,KAAKwH,SAAS,CACV4P,gBAAiB,S,oBAK7B,WACIvO,GAAY4O,W,oBAGhB,WACI,MAA0DzX,KAAK/F,MAAxDiP,EAAP,EAAOA,YAAagO,EAApB,EAAoBA,mBAAoBC,EAAxC,EAAwCA,eAExC,OACI,kBAAC,IAAD,KACI,6BACG,yBAAKhf,UAAU,+CACd,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAME,GAAK,IAAMF,UAAU,gBACvB,yBAAKA,UAAU,OAAOG,MAAQ,CAACiN,gBAAgB,OAAD,OAAUmS,KAAV,SAElD,4BAAQvf,UAAU,iBAAiBkJ,KAAK,SAASsW,iBAAe,WACxDC,iBAAe,0BAA0BC,gBAAc,yBACvDC,gBAAc,QAAQC,aAAW,qBACrC,0BAAM5f,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BgD,GAAG,0BAMzC,wBAAIhD,UAAU,mCACR+e,GACE,wBAAI/e,UAAU,YACV,kBAAC,IAAD,CAAME,GAAK,OAASF,UAAU,YAA9B,oBAMNgf,GACE,wBAAIhf,UAAU,YACV,kBAAC,IAAD,CAAME,GAAK,SAAWF,UAAU,YAAhC,yCAcN+Q,GACE,wBAAI/Q,UAAU,YACV,kBAAC,IAAD,CAAME,GAAK,SAAWF,UAAU,YAAhC,yCAMN+Q,EACF,yBAAK/Q,UAAU,sBACX,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAK,WAAaF,UAAU,YAAa+Q,EAAY7N,WAE/D,wBAAIlD,UAAU,YACV,uBAAG4e,KAAK,SAAS5e,UAAU,WACxBgN,QAAUnF,KAAKiX,QADlB,oCAKR,yBAAK9e,UAAU,sBACX,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAK,SAAWF,UAAU,YAAhC,mCAKJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAK,YAAcF,UAAU,YAAnC,aAYhB6H,KAAK/F,MAAMmd,gBACL,kBAAC,IAAD,CAAU/e,GAAK2H,KAAK/F,MAAMmd,kBAC1B,KAGV,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAO,CAAE,IAAK,SAAYvb,UAAYyK,KACnD,kBAAC,IAAD,CAAO6Q,OAAK,EAACC,KAAK,SAASvb,UAAYyK,KACvC,kBAAC,IAAD,CAAO6Q,OAAK,EAACC,KAAK,YAAYvb,UAAY+L,KAC1C,kBAAC,IAAD,CAAOuP,OAAK,EAACC,KAAK,WAAWvb,UAAYwb,KACzC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASvb,UAAYxE,IACvC,kBAAC,IAAD,CAAO8f,OAAK,EAACC,KAAK,WAAWvb,UAAYyb,KACzC,kBAAC,IAAD,CAAOF,KAAK,QAAQvb,UAAY0b,KAChC,kBAAC,IAAD,CAAOH,KAAK,OAAOvb,UAAY2b,KAC/B,kBAAC,IAAD,CAAOJ,KAAK,SAASvb,UAAY4b,OAIzC,yBAAKngB,UAAU,UACX,yBAAKA,UAAU,OAAOG,MAAQ,CAACiN,gBAAgB,OAAD,OAAUgT,KAAV,c,GAhJhDrY,cA+JHsY,eAAWja,aART,SAAAtE,GAAK,MAAK,MAIP,SAAAuE,GAAQ,MAAK,KAIPD,CAA+BoY,KG7KrC8B,QACW,cAA7BrT,OAAOC,SAASqT,UAEe,UAA7BtT,OAAOC,SAASqT,UAEhBtT,OAAOC,SAASqT,SAAS9O,MACvB,2D,aCbA+O,GAAWlf,YAAY,CACzBC,KAHqB,MAIrBC,aAAc,CACV6c,QAAQ,EACR9B,OAAQ,CACJkE,MAAO,GACPC,MAAO,GACPC,gBAAiB,MAErBngB,KAAM,MAEVoB,SAAU,CACNgf,eADM,SACS9e,EAAOC,GAClBD,EAAMya,OAAOkE,MAAb,sBACO3e,EAAMya,OAAOkE,OADpB,YAEO1e,EAAOC,WAGlB6e,WAPM,SAOK/e,EAAOE,GACdF,EAAMya,OAAOkE,MAAQ,IAEzBK,gBAVM,SAUUhf,EAAOC,GACnBD,EAAMya,OAAOmE,MAAQ3e,EAAOC,SAEhC+e,WAbM,SAaKjf,EAAOC,GACdD,EAAMuc,O/B9BG,U+B8BMtc,EAAOC,SAE1Bgf,eAhBM,SAgBSlf,EAAOC,GAClBD,EAAMtB,KAAOuB,EAAOC,QACpBF,EAAMuc,QAAS,MAKpB,GAMHmC,GAASve,QAEEue,IARR,GACHI,eADG,GAEHC,WAFG,GAGHC,gBAHG,GAIHC,WAJG,GAKHC,eAGWR,GAAf,SCzCeS,gBAAgB,CAC3BC,OACA1gB,OAEAuJ,Y,+BCHEoX,GAAU,sBAAOC,eAAP,CAA+BC,OAShCC,GAPDC,YAAe,CACzBC,QAASC,GACTN,cACAO,UAAUC,EACVC,UAAW,CAACC,iBCCZC,IAAY,CAACC,IAAK,8EAGtBC,IAASC,OACL,kBAAC,IAAMC,SAAP,KAEU,kBAAC,gBAAD,CAAeC,SAAU,CAAC,UAAWzP,QAAS,CAAC0P,UAAU,EAAMC,UAAU,GAAOC,QAAQ,MAE9F,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUhB,MAAOA,IACb,kBAAC,GAAD,SAIZiB,SAASC,eAAe,SJuGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhgB,MAAK,SAAAigB,GACJA,EAAaC,gBAEdzhB,OAAM,SAAAkI,GACL6B,QAAQ7B,MAAMA,EAAMH,a,mBKxI5BtJ,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,eAAe,6BAA6B,sBAAsB,oCAAoC,mBAAmB,iCAAiC,MAAQ,sBAAsB,eAAiB,+BAA+B,SAAW,yBAAyB,KAAO,qBAAqB,GAAK,mBAAmB,UAAY,6B","file":"static/js/main.47292b1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3BziL\",\"pie\":\"styles_pie__2SD_O\",\"title\":\"styles_title___y4nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-forms\":\"slyles_all-forms__1Uiq4\",\"link\":\"slyles_link__35xrf\",\"card\":\"slyles_card__1pu6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"styles_filters__1HMjR\",\"groups\":\"styles_groups__Orx8P\"};","module.exports = __webpack_public_path__ + \"static/media/pride.b8f79617.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/no-pride.0bdbc73e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.bff383bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.cae10ea2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"styles_Header__2KoFd\"};","import React from \"react\";\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport styles from './slyles.module.scss'\n\nconst AllForms = () => {\n    return (\n        <div className={styles[\"all-forms\"]}>\n\n            <h2>Формы и опросы</h2>\n\n            <NavLink to=\"/testing\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    🔬 Опрос тестируемых «СПИД.ЦЕНТР»\n                </div>\n            </NavLink>\n\n            Находятся в разработке\n\n            <NavLink disabled to=\"/groups\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    👥 Группы поддержки\n                </div>\n            </NavLink>\n\n            <NavLink disabled to=\"/hot-line\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    📞 Горячая линия «СПИД.ЦЕНТР»\n                </div>\n            </NavLink>\n\n        </div>\n    );\n};\n\nexport default AllForms;\n","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        return {'x-access-token': user.accessToken};\n    } else {\n        return {};\n    }\n}\n","const baseUrl = () => {\n    switch (process.env.NODE_ENV) {\n        case \"development\": return 'http://localhost:5101'\n        default: return 'https://reports.spid.center'\n    }\n}\n\nexport default baseUrl;","import axios from 'axios';\nimport authHeader from './auth-header';\nimport baseUrl from '../baseurl';\n\nconst host = baseUrl()\n\nconst API_URL = `${host}/api/test/`;\n\nclass UserService {\n    getPublicContent() {\n        return axios.get(API_URL + 'all');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL + 'user', {headers: authHeader()});\n    }\n\n    getModeratorBoard() {\n        return axios.get(API_URL + 'mod', {headers: authHeader()})\n            .catch(() => {\n                return axios.get(API_URL + 'admin', {headers: authHeader()});\n            });\n    }\n\n    getAdminBoard() {\n        return axios.get(API_URL + 'admin', {headers: authHeader()});\n    }\n}\n\nexport default new UserService();\n","import {createSlice} from '@reduxjs/toolkit'\n\nconst TODOS_REDUCER_NAME = 'user'\n\nconst userSlice = createSlice({\n    name: TODOS_REDUCER_NAME,\n    initialState: {\n        userData: null,\n        isAuthenticated: null,\n        role: null\n    },\n    reducers: {\n        fetchRole(state, action) {\n            state.userData = action.payload.userData\n            state.isAuthenticated = action.payload.isAuthenticated\n            state.role = action.payload.role\n        },\n    }\n})\n\nexport const {\n    fetchRole,\n} = userSlice.actions\n\nexport default userSlice.reducer\n","import baseUrl from \"../baseurl\";\n\nconst host = baseUrl()\n\nconst API_URL = `${host}/api`;\n\nexport const API_FETCH_LOAD_FILES = `${API_URL}/upload`\n\nexport const API_VIDEO_FIRST_LIST = `${API_URL}/video/first-list`\nexport const API_FETCH_OFFSET_VIDOES = `${API_URL}/video/offset`\nexport const API_FETCH_UP_VIDEO_COUNT = `${API_URL}/video/count`\nexport const API_FETCH_VOTE_VIDEO = `${API_URL}/video/vote`\nexport const API_UPLOAD_VIDEO = `${API_URL}/upload/video`\nexport const API_CREATE_VIDEO = `${API_URL}/video/create`\n\nexport const API_AUTH_SIGNIN = `${API_URL}/auth/signin`","import { fetchRole } from \"../reducers/user.reducer\";\nimport axios from \"axios\";\nimport { API_AUTH_SIGNIN } from \"../../constants/api.constants\";\n\nexport const setRole = data => async dispatch => {\n    dispatch(fetchRole(data))\n}\n\nexport const fetchLoginForm = async ({ email, password }) => {\n\n   return axios.post(API_AUTH_SIGNIN, { email, password })\n        .then(response => {\n            if (response.data.accessToken) {\n\n                localStorage.setItem(\"user\", JSON.stringify({\n                    accessToken: response.data.accessToken,\n                    email: response.data.email,\n                    id: response.data.id,\n                    roles: response.data.roles,\n                    username: response.data.username\n                }));\n\n                return response.data;\n            }\n        });\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nexport const WelcomeCard = props => {\n    const classes = useStyles();\n    return (\n        <Link to={`/video/${props.video.folder}`}>\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <CardMedia\n                        className={classes.media}\n                        image={`http://localhost:5001/public/videos/${props.video.folder}/preview.jpg`}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {props.video.title} – {props.video.id}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Link>\n    );\n}\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { WelcomeCard } from \"./WelcomeCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nexport const WelcomeGrid = props => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {props.videos.map((video, index) => <Grid key={video.folder + index} item xs={6} sm={3}>\n                    <WelcomeCard video={video}/>\n                </Grid>)}\n            </Grid>\n        </div>\n    );\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst VIDEO_REDUCER_NAME = 'video'\n\nconst videoSlice = createSlice({\n    name: VIDEO_REDUCER_NAME,\n    initialState: {\n        videos: null,\n        count: null,\n        loading: false,\n        single: null\n    },\n    reducers: {\n        setVideos(state, action) {\n            state.videos = action.payload.videos\n        },\n        setFirstVideos(state, action) {\n            state.videos = action.payload.videos\n            state.count = action.payload.count\n            state.loading = false\n        },\n        isLoading(state, action) {\n            state.loading = action.payload\n        },\n        setSingleVideo(state, action) {\n            state.single = action.payload\n            state.loading = false\n        }\n    }\n})\n\nexport const {\n    setVideos,\n    setFirstVideos,\n    isLoading,\n    setSingleVideo\n} = videoSlice.actions\n\nexport default videoSlice.reducer\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux'\nimport { WelcomeGrid } from './WelcomeGrid'\nimport { Pagination } from \"antd\";\nimport { fetchFirstToStore, fetchOffsetToStore } from \"../../redux/thunks/video.thunks\";\n\nconst Welcome = props => {\n\n    useEffect(() => {\n        if (!props.loading && !props.videos) {\n            props.fetchFirst()\n        }\n    }, [props])\n\n    const onChangePagination = (page, pageSize) => {\n        props.fetchOffset({\n            offset: page - 1,\n            limit: pageSize\n        })\n    }\n\n    return (\n        props.videos ? <>\n            <WelcomeGrid videos={props.videos}/>\n            <Pagination\n                onChange={onChangePagination}\n                total={props.count}\n                showTotal={(total, range) => `${range[0]}-${range[1]} из ${total} видео`}\n                defaultPageSize={10}\n                defaultCurrent={1}\n            />\n        </> : null\n    );\n}\n\nconst mapStateToProps = state => ({\n    videos: state.video.videos,\n    count: state.video.count,\n    loading: state.video.loading\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchFirst: () => dispatch(fetchFirstToStore()),\n    fetchOffset: (data) => dispatch(fetchOffsetToStore(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome)","import axios from 'axios'\nimport {\n    API_CREATE_VIDEO,\n    API_FETCH_OFFSET_VIDOES,\n    API_FETCH_UP_VIDEO_COUNT,\n    API_VIDEO_FIRST_LIST,\n    API_FETCH_VOTE_VIDEO\n} from \"../../constants/api.constants\";\nimport authHeader from \"../../services/auth-header\";\nimport { setVideos, setFirstVideos, isLoading, setSingleVideo } from \"../reducers/video.reducer\";\n\nexport const createVideoThunks = data => async () => {\n    const response = await axios.post(API_CREATE_VIDEO, data, { headers: authHeader() })\n    return response.data;\n}\n\nexport const fetchFirstToStore = () => async dispatch => {\n    dispatch(isLoading(true));\n    const response = await axios.post(API_VIDEO_FIRST_LIST)\n    return dispatch(setFirstVideos(response.data));\n}\n\nexport const fetchOffsetToStore = data => async dispatch => {\n    const response = await axios.post(API_FETCH_OFFSET_VIDOES, data)\n    return dispatch(setVideos(response.data));\n}\n\nexport const fetchUpVideoCount = data => async dispatch => {\n    dispatch(isLoading(true));\n    const response = await axios.post(API_FETCH_UP_VIDEO_COUNT, data)\n    dispatch(setSingleVideo(response.data))\n\n}\n\nexport const fetchVoteVideo = data => async dispatch => {\n    const response = await axios.post(API_FETCH_VOTE_VIDEO, data)\n    console.log(data)\n    return dispatch(setVideos(response.data.video))\n}","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport { ADMIN, MODERATOR, USER } from \"../constants/roles.constants\";\nimport { connect } from \"react-redux\";\nimport { setRole } from \"../redux/thunks/user.thunks\";\nimport Welcome from \"../components/Welcome\";\n\nexport default function useAuth(WrappedComponent, role) {\n    class Authenticate extends React.Component {\n\n        getUser = () => JSON.parse(localStorage.getItem('user'));\n\n        componentDidMount() {\n            switch (role) {\n                case ADMIN:\n                    return UserService.getAdminBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: ADMIN\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case MODERATOR:\n                    return UserService.getModeratorBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: MODERATOR\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case USER:\n                    return UserService.getUserBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: USER\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                default:\n                    this.props.setRole({\n                        isAuthenticated: false,\n                        role: 'Role not found'\n                    })\n            }\n        }\n\n        render() {\n            return (\n                this.props.isAuthenticated !== null ? this.props.isAuthenticated ?\n                    <WrappedComponent {...this.props} /> : <Redirect to={'/'}/> : null\n            );\n        }\n    }\n\n    const mapState = state => ({\n        isAuthenticated: state.user.isAuthenticated,\n        role: state.user.role\n    })\n\n    const mapDuspatch = dispatch => ({\n        setRole: e => dispatch(setRole(e))\n    })\n\n    return connect(mapState, mapDuspatch)(Authenticate)\n}\n\n","export const ADMIN = 'admin'\nexport const MODERATOR = 'mod'\nexport const USER = 'user'","export const START = 'start'\nexport const FINISH = 'finish'","import { createSlice } from '@reduxjs/toolkit'\nimport { START } from \"../../constants/others.constants\";\n\nconst APP_REDUCER_NAME = 'filter'\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: {\n        usedDrugs: false,\n        usedPrep: false,\n        sexWorked: false,\n        rangePeriod: null,\n        city: null,\n        findByCode: null\n    },\n    reducers: {\n        findByCode(state, action) {\n            state.findByCode = action.payload\n        },\n        setTestingDrugUsed(state, action) {\n            state.usedDrugs = action.payload\n        },\n        setTestingPrepUsed(state, action) {\n            state.usedPrep = action.payload\n        },\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        setTestingSexWorked(state, action) {\n            state.sexWorked = action.payload\n        },\n    }\n})\n\nexport const {\n    findByCode,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked,\n    setRangePeriod,\n    setTestingCity\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/form/`;\n\nconst testing = (fields) => {\n    return axios.post(API_URL + \"testing\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst findTesting = (filters = {}) => {\n    return axios.post(API_URL + \"find/testing\", filters, { headers: authHeader() });\n};\n\nexport default {\n    testing,\n    findTesting\n};\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    SET_MESSAGE,\n} from \"./types\";\nimport FormService from \"./../../services/form.service\";\n\nexport const testing = (fields) => (dispatch) => {\n    return FormService.testing(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve();\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findTesting = (filters) => (dispatch) => {\n    return FormService.findTesting(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_ROLE = \"FETCH_ROLE\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const TESTING_SET_DRUG_USED = \"TESTING_SET_DRUG_USED\"\nexport const TESTING_SET_SEX_WORKED = \"TESTING_SET_SEX_WORKED\"\nexport const TESTING_SET_PREP_USED = \"TESTING_SET_PREP_USED\"\nexport const TESTING_SET_RANGE_PERIOD = \"TESTING_SET_RANGE_PERIOD\"\nexport const TESTING_CITY = \"TESTING_CITY\"\nexport const TESTING_FIND_BY_CODE = \"TESTING_FIND_BY_CODE\";\n\nexport const DIAGRAM_FAIL = \"DIAGRAM_FAIL\";\nexport const DIAGRAM_SUCCESS = \"DIAGRAM_SUCCESS\";\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport MaskedInput from 'antd-mask-input'\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport moment from 'moment'\nimport {\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    Radio,\n    DatePicker,\n    Tabs,\n    Switch,\n    Select,\n    message,\n    Tag,\n    Alert\n} from 'antd';\nimport { ADMIN, MODERATOR, USER } from \"../../../constants/roles.constants\";\nimport useAuth from \"../../../hooks/useAuth\";\n// import { findByCode } from \"../../../actions/filter-testing\";\n// import { findTesting, testing } from \"../../../actions/forms\";\nimport { findByCode } from \"../../../redux/reducers/filter.reducer\";\nimport { findTesting, testing } from \"../../../redux/thunks/forms\";\nimport pride from './images/pride.jpeg'\nimport noPride from './images/no-pride.jpg'\nimport styles from './styles.module.scss'\n\nconst {Option} = Select;\nconst {TabPane} = Tabs;\n\nconst TestingForm = ({pastTests}) => {\n    const [ expanded, setExpanded ] = useState(true)\n    const [ now, setNow ] = useState(true)\n    const [ submitting, setSubmitting ] = useState(false)\n    const [ successful, setSuccessful ] = useState(false);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [ form ] = Form.useForm();\n    const city = JSON.parse(localStorage.getItem(\"user\"))\n    let initialValues = {}\n\n\n    useEffect(() => form.resetFields(), [form, initialValues, submitting]);\n\n    if (localStorage.getItem('TESTING_FORM')) {\n        initialValues = {\n            ...JSON.parse(localStorage.getItem('TESTING_FORM')),\n            ...initialValues\n        }\n    }\n\n    if (localStorage.getItem('CONSULTANT')) {\n        initialValues = {\n            \"42_consultant\": JSON.parse(localStorage.getItem('CONSULTANT')),\n            ...initialValues\n        }\n    }\n\n    const resetForm = () => {\n        console.log('resetForm')\n        localStorage.removeItem(\"TESTING_FORM\")\n        initialValues = {}\n        message.success('Поля формы сброшены')\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFormLayoutChange = (values) => {\n\n        if (values[\"date\"] || values[\"time\"]) {\n            return\n        }\n\n        localStorage.setItem(\"TESTING_FORM\", JSON.stringify(form.getFieldsValue()))\n\n        if (values['42_consultant']) {\n            localStorage.setItem(\"CONSULTANT\", JSON.stringify(values['42_consultant']))\n        }\n    };\n\n    const onFinish = async (values) => {\n        console.log('values', values)\n        console.log('city.username', city)\n\n        const stateForm = new Object({\n            \"1_code\": values[\"1_code\"],\n            \"3_gender\": values[\"3_gender\"],\n            \"4_age\": values[\"4_age\"],\n            \"7_constant_sexual_partner\": values[\"7_constant_sexual_partner\"],\n            \"8_sex_using_a_condom\": values[\"8_sex_using_a_condom\"],\n            \"9_condom_for_sex_with_a_permanent\": values[\"9_condom_for_sex_with_a_permanent\"],\n            \"10_condom_for_sex_with_a_club\": values[\"10_condom_for_sex_with_a_club\"],\n            \"11_condom_for_last_sex\": values[\"11_condom_for_last_sex\"],\n            \"12_using_condom\": values[\"12_using_condom\"] ? values[\"12_using_condom\"].toString() : null,\n            \"14_now_there_is_a_condom\": values[\"14_now_there_is_a_condom\"],\n            \"15_with_whom_sex\": values[\"15_with_whom_sex\"] ? values[\"15_with_whom_sex\"].toString() : null,\n            \"17_drugs_for_sex\": values[\"17_drugs_for_sex\"],\n            \"18_drugs_or_money_in_exchange_for_sex\": values[\"18_drugs_or_money_in_exchange_for_sex\"],\n            \"19_sexually_transmitted_diseases\": values[\"19_sexually_transmitted_diseases\"],\n            \"20_med_sexually_transmitted_diseases\": values[\"20_med_sexually_transmitted_diseases\"],\n            \"22_diagnosed_with_syphilis\": values[\"22_diagnosed_with_syphilis\"],\n            \"23_hiv_tested\": values[\"23_hiv_tested\"],\n            \"24_how_often_hiv_tested\": values[\"24_how_often_hiv_tested\"],\n            \"25_do_you_know_your_hiv_status\": values[\"25_do_you_know_your_hiv_status\"],\n            \"26_you_are_a_citizen_of_russia\": values[\"26_you_are_a_citizen_of_russia\"],\n            \"28_you_education\": values[\"28_you_education\"],\n            \"29_the_nature_of_your_work\": values[\"29_the_nature_of_your_work\"],\n            \"30_marital_status\": values[\"30_marital_status\"],\n            \"31_you_are_a_listen_PrEP\": values[\"31_you_are_a_listen_PrEP\"],\n            \"32_you_are_a_interest_PrEP\": values[\"32_you_are_a_interest_PrEP\"],\n            \"33_you_are_a_used_PrEP\": values[\"33_you_are_a_used_PrEP\"],\n            \"35_you_have_started_taking_prep\": values[\"35_you_have_started_taking_prep\"],\n            \"36_hiv_test_result\": values[\"36_hiv_test_result\"],\n            \"37_hepatitis_test_result\": values[\"37_hepatitis_test_result\"],\n            \"38_syphilis_test_result\": values[\"38_syphilis_test_result\"],\n            \"39_consulting_on_regular_testing_provided\": values[\"39_consulting_on_regular_testing_provided\"] ? values[\"39_consulting_on_regular_testing_provided\"][0] : null,\n            \"40_prevention_counseling_provided\": values[\"40_prevention_counseling_provided\"] ? values[\"40_prevention_counseling_provided\"][0] : null,\n            \"41_provided_counseling_on_receiving_treatment_for_hiv\": values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"] ? values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"][0] : null,\n            \"42_consultant\": values[\"42_consultant\"],\n            \"45_consultant_comment\": values[\"45_consultant_comment\"],\n            \"46_city\": city.username,\n        })\n\n        const createOtherFields = () => {\n\n            // \"2_how_did_you_know\": [...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"]],\n            if (values[\"2_1_how_did_you_know\"]?.length && values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [ ...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"] ].toString()\n            } else if (values[\"2_1_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = values[\"2_1_how_did_you_know\"].toString()\n            } else if (values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [ values[\"2_2_how_did_you_know\"] ].toString()\n            } else {\n                stateForm[\"2_how_did_you_know\"] = null\n            }\n\n            // \"5_first_sex\": [...values[\"5_1_first_sex\"], values[\"5_2_first_sex\"]],\n            if (values[\"5_2_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_2_first_sex\"][0]\n            } else if (values[\"5_1_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_1_first_sex\"]\n            } else {\n                stateForm[\"5_first_sex\"] = null\n            }\n\n            // \"6_sexual_partners_from_6_months\": [...values[\"6_1_sexual_partners_from_6_months\"], values[\"6_2_sexual_partners_from_6_months\"]],\n            if (values[\"6_2_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_2_sexual_partners_from_6_months\"][0]\n            } else if (values[\"6_1_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_1_sexual_partners_from_6_months\"]\n            } else {\n                stateForm[\"6_sexual_partners_from_6_months\"] = null\n            }\n\n            // \"13_no_using_condom\": [...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"]],\n            if (values[\"13_1_no_using_condom\"]?.length && values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [ ...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"] ].toString()\n            } else if (values[\"13_1_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = values[\"13_1_no_using_condom\"].toString()\n            } else if (values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [ values[\"13_2_no_using_condom\"] ].toString()\n            } else {\n                stateForm[\"13_no_using_condom\"] = null\n            }\n\n            // \"16_used_drugs\": [...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"]],\n            if (values[\"16_1_used_drugs\"]?.length && values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [ ...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"] ].toString()\n            } else if (values[\"16_1_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = values[\"16_1_used_drugs\"].toString()\n            } else if (values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [ values[\"16_2_used_drugs\"] ].toString()\n            } else {\n                stateForm[\"16_used_drugs\"] = null\n            }\n\n            // \"21_used_drugs\": [...values[\"21_1_used_drugs\"], values[\"21_2_used_drugs\"]],\n            if (values[\"21_1_used_drugs\"]?.length && values[\"21_2_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = [ ...values[\"21_1_used_drugs\"], values[\"21_2_used_drugs\"] ].toString()\n            } else if (values[\"21_1_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = values[\"21_1_used_drugs\"].toString()\n            } else if (values[\"21_2_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = [ values[\"21_2_used_drugs\"] ].toString()\n            } else {\n                stateForm[\"21_used_drugs\"] = null\n            }\n\n            // \"27_registration_on_the_territory\": [...values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"]],\n            if (values[\"27_1_registration_on_the_territory\"]?.length && values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [ values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"] ].toString()\n            } else if (values[\"27_1_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = values[\"27_1_registration_on_the_territory\"].toString()\n            } else if (values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [ values[\"27_2_registration_on_the_territory\"] ].toString()\n            } else {\n                stateForm[\"27_registration_on_the_territory\"] = null\n            }\n\n            // \"34_for_prep_you_use\": [...values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"]],\n            if (values[\"34_1_for_prep_you_use\"]?.length && values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [ values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"] ].toString()\n            } else if (values[\"34_1_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = values[\"34_1_for_prep_you_use\"].toString()\n            } else if (values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [ values[\"34_2_for_prep_you_use\"] ].toString()\n            } else {\n                stateForm[\"34_for_prep_you_use\"] = null\n            }\n\n            if (values[\"date\"]) {\n                stateForm[\"43_date\"] = values[\"date\"].format(\"M/D/YYYY HH:mm:ss\")\n            } else {\n                stateForm[\"43_date\"] = moment().format(\"M/D/YYYY HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n\n        setSubmitting(true)\n        dispatch(testing(fields))\n            .then(() => {\n                setSubmitting(false)\n                setSuccessful(true);\n                localStorage.removeItem(\"TESTING_FORM\")\n                form.resetFields()\n                history.push('/forms')\n                message.success('Форма успешно сохранена 👌')\n            })\n            .catch(() => {\n                setSuccessful(false);\n            });\n    }\n\n    function callback(key) {\n        setExpanded(key === \"1\")\n        console.log('expanded', expanded)\n    }\n\n    function CodeInput(props) {\n        return <MaskedInput\n            mask=\"W/WW/WW/11.11.1111\"\n            placeholder=\"П/ИИ/ММ/ДД.ДД.ДДДД\"\n            size=\"18\"\n            { ...props }\n            onChange={ onChangeCode }\n            formatCharacters={ {\n                'W': {\n                    validate(char) {\n                        return /^[?!,.а-яА-ЯёЁ\\s]+$/.test(char)\n                    },\n                    transform(char) {\n                        return char.toUpperCase()\n                    }\n                }\n            } }\n        />\n    }\n\n    const optionsWithDisabled = [\n        {label: 'Аутрич в клубах', value: 'Аутрич в клубах'},\n        {label: 'Экраны в клубах', value: 'Экраны в клубах'},\n        {label: 'Соцсети/сайт фонда', value: 'Соцсети/сайт фонда'},\n        {label: 'Хорнет', value: 'Хорнет'},\n        {label: 'Телеграм', value: 'Телеграм'},\n        {label: 'Знакомые', value: 'Знакомые'},\n        {label: 'Контекстная реклама в Гугле', value: 'Контекстная реклама в Гугле'},\n        {label: 'Видео-реклама в Инстаграм', value: 'Видео-реклама в Инстаграм'},\n        {label: 'Поисковые системы', value: 'Поисковые системы'},\n        {label: 'Тестировался здесь ранее', value: 'Тестировался здесь ранее'},\n    ];\n\n    const onChangeCode = (event) => {\n        const value = event.target.value\n        form.setFieldsValue({\n            \"1_code\": value\n        });\n        const valueClean = value.replace(/[. /_]/g, '')\n        if (valueClean.length === 13) {\n            dispatch(findTesting({\n                code: valueClean\n            })).then((data) => {\n                dispatch(findByCode(data.data))\n                form.setFieldsValue({\n                    \"1_code\": value\n                });\n            })\n        }\n    }\n\n    return (\n        <div className={ styles.container }>\n\n            <div className={ styles.resetForm } onClick={ resetForm }>Сбросить поля</div>\n\n            <div className={ styles.image }\n                 style={ expanded ? {backgroundImage: `url(${ pride })`} : {backgroundImage: `url(${ noPride })`} }\n            />\n\n            <div className={ styles.titleContainer }>\n                <div className={ styles.line }/>\n                <h1 className={ styles.h1 }>Опрос тестируемых «СПИД.ЦЕНТР»</h1>\n                <p className={ styles.required }>* Обязательные поля</p>\n            </div>\n\n            <Form\n                layout={ 'vertical' }\n                form={ form }\n                initialValues={ initialValues }\n                onValuesChange={ onFormLayoutChange }\n                onFinish={ onFinish }\n            >\n\n                <div className={ styles.tabs }>\n                    <Tabs size=\"large\" defaultActiveKey={ expanded } onChange={ callback }>\n                        <TabPane tab=\"Расширенный\" key=\"1\"/>\n                        <TabPane tab=\"Сокращенный\" key=\"0\"/>\n                    </Tabs>\n                </div>\n\n                <div>\n                    <Form.Item name=\"1_code\"\n                               label=\"Уникальный идентификационный код (УИК) респондента (пол, 2 буквы имени, 2 буквы имени матери, дата рождения): П/ИИ/ММ/ДД.ДД.ДДДД\"\n                               rules={ [\n                                   {\n                                       required: true,\n                                       message: 'Поле обязательно для заполнения',\n                                   },\n                               ] }\n                    >\n                        <CodeInput/>\n                    </Form.Item>\n\n                    { pastTests && <div>\n                        { pastTests.map(i => i[\"45_consultant_comment\"] &&\n                            <Alert message={ i[\"45_consultant_comment\"] } type=\"info\" showIcon description={\n                                <div>{ moment(i[\"43_date\"]).format('DD.MM.YYYY HH:mm') } { i[\"42_consultant\"] &&\n                                <span>({ i[\"42_consultant\"] })</span> }</div> }/>) }\n                        { pastTests.length > 0 && <br/> }\n                        { pastTests.length > 0 ? [...pastTests].sort(function (a, b) {\n                            if (b[\"43_date\"] < a[\"43_date\"]) {\n                                return -1;\n                            }\n                            if (b[\"43_date\"] > a[\"43_date\"]) {\n                                return 1;\n                            }\n                            return -1;\n                        }).map(i =>\n                            <Tag>{ moment(i[\"43_date\"], 'MM/DD/YYYY HH:mm:ss').format('DD.MM.YYYY HH:mm') }</Tag>)\n                        : <i style={{color:\"gray\"}}>тестирований с этим кодом не найдено</i>\n                        }\n                    </div> }\n\n                </div>\n\n                { expanded && <div>\n                    <Form.Item name=\"2_1_how_did_you_know\" label=\"Откуда вы узнали о тестировании?\">\n                        <Checkbox.Group>\n                            { optionsWithDisabled.map(option => <Checkbox\n                                value={ option.value }>{ option.label }</Checkbox>) }\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"2_2_how_did_you_know\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div> }\n\n                { expanded && <Form.Item required name=\"3_gender\" label=\"Ваш пол?\">\n                    <Radio.Group>\n                        <Radio value=\"Male\">Мужчина</Radio>\n                        <Radio value=\"Famale\">Женщина</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"4_age\" label=\"Ваш возраст?\">\n                    <Radio.Group>\n                        <Radio value=\"18-19 лет\">18-19 лет</Radio>\n                        <Radio value=\"20-29 лет\">20-29 лет</Radio>\n                        <Radio value=\"30-39 лет\">30-39 лет</Radio>\n                        <Radio value=\"40-49 лет\">40-49 лет</Radio>\n                        <Radio value=\"50 и старше\">50 и старше</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <div>\n                    <Form.Item name=\"5_1_first_sex\" label=\"В каком возрасте у вас был первый сексуальный контакт?\">\n                        <Input placeholder=\"Возраст\"/>\n                    </Form.Item>\n                    <Form.Item name=\"5_2_first_sex\" label=\"Не было\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Не было\"/>\n                        </Checkbox.Group>\n                    </Form.Item>\n                </div> }\n\n                { expanded && <div>\n                    <Form.Item name=\"6_1_sexual_partners_from_6_months\"\n                               label=\"Были ли у вас сексуальные партнеры за последние 6 месяцев (если да, укажите число)?\">\n                        <Input placeholder=\"Укажите число партнеров\"/>\n                    </Form.Item>\n                    <Form.Item name=\"6_2_sexual_partners_from_6_months\" label=\"Нет\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Нет\"/>\n                        </Checkbox.Group>\n                    </Form.Item>\n                </div> }\n\n                { expanded && <Form.Item required name=\"7_constant_sexual_partner\"\n                                         label=\"Есть ли у вас постоянный сексуальный партнер?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"8_sex_using_a_condom\"\n                                         label=\"Как часто вы занимались сексом в последние 6 месяцев, используя презерватив?\">\n                    <Radio.Group>\n                        <Radio value=\"Всегда / почти всегда\">Всегда / почти всегда</Radio>\n                        <Radio value=\"В большинстве случаев\">В большинстве случаев</Radio>\n                        <Radio value=\"Примерно в половине случаев\">Примерно в половине случаев</Radio>\n                        <Radio value=\"В меньшинстве случаев\">В меньшинстве случаев</Radio>\n                        <Radio value=\"Никогда\">Никогда</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"9_condom_for_sex_with_a_permanent\"\n                                         label=\"Используете ли вы презерватив при сексе с постоянным партнером?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"10_condom_for_sex_with_a_club\"\n                                         label=\"Используете ли вы презерватив при сексе со случайными партнерами?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"11_condom_for_last_sex\"\n                                         label=\"Вы пользовались презервативом во время последнего секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item name=\"12_using_condom\"\n                                         label=\"Используете ли вы презервативы при (возможны несколько вариантов):\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Вагинальном сексе\">Вагинальном сексе</Checkbox>\n                        <Checkbox value=\"Оральном сексе\">Оральном сексе</Checkbox>\n                        <Checkbox value=\"Анальном сексе\">Анальном сексе</Checkbox>\n                        <Checkbox value=\"Не использую\">Не использую</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item> }\n\n                { expanded && <div>\n                    <Form.Item name=\"13_1_no_using_condom\"\n                               label=\"Почему вы не использовали презерватив со своим последним сексуальным партнером(возможны несколько вариантов)?\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Я использовал его\">Я использовал его</Checkbox>\n                            <Checkbox value=\"У меня его не было\">У меня его не было</Checkbox>\n                            <Checkbox value=\"Я был в алкогольном/наркотическом опьянении\">Я был в\n                                алкогольном/наркотическом\n                                опьянении</Checkbox>\n                            <Checkbox value=\"Они слишком дорогие\">Они слишком дорогие</Checkbox>\n                            <Checkbox value=\"Партнер не хотел пользоваться презервативом\">Партнер не хотел пользоваться\n                                презервативом</Checkbox>\n                            <Checkbox value=\"Мы были готовы зачать ребенка\">Мы были готовы зачать ребенка</Checkbox>\n                            <Checkbox value=\"Я не люблю пользоваться презервативами\">Я не люблю пользоваться\n                                презервативами</Checkbox>\n                            <Checkbox value=\"Мне кажется, в этом не было необходимости\">Мне кажется, в этом не было\n                                необходимости</Checkbox>\n                            <Checkbox value=\"Я доверяю своему партнеру\">Я доверяю своему партнеру</Checkbox>\n                            <Checkbox value=\"Я просто не думал об этом\">Я просто не думал об этом</Checkbox>\n                            <Checkbox value=\"Я использую PrEP\">Я использую PrEP</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"13_2_no_using_condom\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div> }\n\n                { expanded && <Form.Item required name=\"14_now_there_is_a_condom\"\n                                         label=\"У тебя сейчас есть презерватив с собой?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded &&\n                <Form.Item name=\"15_with_whom_sex\" label=\"С кем у вас были половые контакты последние 6 месяцев?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Мужчины\">Мужчины</Checkbox>\n                        <Checkbox value=\"Женщины\">Женщины</Checkbox>\n                        <Checkbox value=\"Трансгендеры\">Трансгендеры</Checkbox>\n                        <Checkbox value=\"Не было\">Не было</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item> }\n\n                { expanded && <div>\n                    <Form.Item name=\"16_1_used_drugs\"\n                               label=\"Вы употребляли наркотики в последние 12 месяцев (если да, то какие)?\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Не употреблял\">Не употреблял</Checkbox>\n                            <Checkbox value=\"Героин\">Героин</Checkbox>\n                            <Checkbox value=\"Кокаин\">Кокаин</Checkbox>\n                            <Checkbox value=\"Марихуана\">Марихуана</Checkbox>\n                            <Checkbox value=\"МДМА (экстази)\">МДМА (экстази)</Checkbox>\n                            <Checkbox value=\"Мефедрон\">Мефедрон</Checkbox>\n                            <Checkbox value=\"Амфетамин\">Амфетамин</Checkbox>\n                            <Checkbox value=\"Метамфетамин\">Метамфетамин</Checkbox>\n                            <Checkbox value=\"Бутират\">Бутират</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"16_2_used_drugs\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div> }\n\n                { expanded && <Form.Item required name=\"17_drugs_for_sex\"\n                                         label=\"Используете ли вы наркотики для секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"18_drugs_or_money_in_exchange_for_sex\"\n                                         label=\"Приходилось ли вам получать или давать деньги или наркотики в обмен на сексуальные услуги в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, я давал\">Да, я давал</Radio>\n                        <Radio value=\"Да, я получал\">Да, я получал</Radio>\n                        <Radio value=\"И то и другое\">И то и другое</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"19_sexually_transmitted_diseases\"\n                                         label=\"Были ли у вас заболевания, передающиеся половым путем, за последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"20_med_sexually_transmitted_diseases\"\n                                         label=\"Обращались ли вы за медицинской консультацией по поводу ИППП в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <div>\n                    <Form.Item name=\"21_1_used_drugs\"\n                               label=\"Диагностировали у вас есть хронические формы гепатита? (если да, укажите форму: A, B, C, D, E)\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Нет\">Нет</Checkbox>\n                            <Checkbox value=\"Я не знаю об этой болезни\">Я не знаю об этой болезни</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"21_2_used_drugs\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div> }\n\n                { expanded && <Form.Item required name=\"22_diagnosed_with_syphilis\"\n                                         label=\"Был ли у вас ранее диагностирован сифилис?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"23_hiv_tested\"\n                                         label=\"Вы когда-нибудь проходили тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"24_how_often_hiv_tested\"\n                                         label=\"Как часто вы проходите тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Раз в 3 месяца\">Раз в 3 месяца</Radio>\n                        <Radio value=\"Раз в 6 месяцев\">Раз в 6 месяцев</Radio>\n                        <Radio value=\"Раз в 12 месяцев\">Раз в 12 месяцев</Radio>\n                        <Radio value=\"Менее одного раза в 12 месяцев\">Менее одного раза в 12 месяцев</Radio>\n                        <Radio value=\"Первый раз\">Первый раз</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"25_do_you_know_your_hiv_status\"\n                                         label=\"Знаете ли вы свой ВИЧ-статус?\">\n                    <Radio.Group>\n                        <Radio value=\"Я ВИЧ-положительный\">Я ВИЧ-положительный</Radio>\n                        <Radio value=\"Я ВИЧ-отрицательный\">Я ВИЧ-отрицательный</Radio>\n                        <Radio value=\"Я не знаю свой ВИЧ-статус\">Я не знаю свой ВИЧ-статус</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n\n                { expanded && <Form.Item required name=\"26_you_are_a_citizen_of_russia\"\n                                         label=\"Вы гражданин России?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <div>\n                    <Form.Item name=\"27_1_registration_on_the_territory\"\n                               label=\"У вас есть регистрация на территории Московской области? (если есть регистрация другого региона, укажите, какого)\">\n                        <Radio.Group>\n                            <Radio value=\"Постоянная регистрация\">Постоянная регистрация</Radio>\n                            <Radio value=\"Временная регистрация\">Временная регистрация</Radio>\n                            <Radio value=\"Нет регистрации\">Нет регистрации</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item name=\"27_2_registration_on_the_territory\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div> }\n\n                { expanded && <Form.Item required name=\"28_you_education\"\n                                         label=\"Ваше образование?\">\n                    <Radio.Group>\n                        <Radio value=\"Не получил базового среднего образования (не закончил 8-9 классы школы)\">Не\n                            получил базового\n                            среднего образования (не закончил 8-9 классы школы)</Radio>\n                        <Radio\n                            value=\"Неполное среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)\">Неполное\n                            среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)</Radio>\n                        <Radio\n                            value=\"Общее среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)\">Общее\n                            среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)</Radio>\n                        <Radio\n                            value=\"Среднее специальное (окончил техникум / колледж / колледж со средним специальным образованием)\">Среднее\n                            специальное (окончил техникум / колледж / колледж со средним специальным\n                            образованием)</Radio>\n                        <Radio value=\"Неполное высшее образование (закончил 2-4 года университета)\">Неполное высшее\n                            образование\n                            (закончил 2-4 года университета)</Radio>\n                        <Radio value=\"Высшее (получил диплом университета)\">Высшее (получил диплом университета)</Radio>\n                        <Radio value=\"Академическая степень (кандидат наук, доктор наук)\">Академическая степень\n                            (кандидат наук,\n                            доктор наук)</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"29_the_nature_of_your_work\"\n                                         label=\"Какое из следующих определений лучше всего описывает характер вашей работы на данный момент?\">\n                    <Radio.Group>\n                        <Radio value=\"Полная занятость\">Полная занятость</Radio>\n                        <Radio value=\"Частичная/неполная занятость\">Частичная/неполная занятость</Radio>\n                        <Radio\n                            value=\"Полная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Полная\n                            занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности</Radio>\n                        <Radio\n                            value=\"Случайный заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Случайный\n                            заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной\n                            деятельности</Radio>\n                        <Radio value=\"Безработный (ищу работу)\">Безработный (ищу работу)</Radio>\n                        <Radio value=\"Я не работаю и не ищу работу\">Я не работаю и не ищу работу</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n\n                { expanded && <Form.Item required name=\"30_marital_status\"\n                                         label=\"Ваше семейное положение?\">\n                    <Radio.Group>\n                        <Radio value=\"Никогда не был женат\">Никогда не был женат</Radio>\n                        <Radio value=\"Я живу вместе с партнером, но отношения не зарегистрированы\">Я живу вместе с\n                            партнером, но\n                            отношения не зарегистрированы</Radio>\n                        <Radio value=\"Женат/замужем\">Женат/замужем</Radio>\n                        <Radio value=\"Женат/замужем, живу отдельно от партнера\">Женат/замужем, живу отдельно от\n                            партнера</Radio>\n                        <Radio value=\"В разводе живу отдельно от партнера\">В разводе живу отдельно от партнера</Radio>\n                        <Radio value=\"В разводе, но живу с партнером\">В разводе, но живу с партнером</Radio>\n                        <Radio value=\"Вдовец/вдова\">Вдовец/вдова</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n\n                { expanded && <Form.Item required name=\"31_you_are_a_listen_PrEP\"\n                                         label=\"Вы уже слышали о доконтактной профилактике (PrEP) до этого?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n\n                { expanded && <Form.Item required name=\"32_you_are_a_interest_PrEP\"\n                                         label=\"Вы были бы заинтересованы в использовании PrEP?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"33_you_are_a_used_PrEP\"\n                                         label=\"Вы когда-нибудь уже использовали доконтактную профилактику (PrEP)?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n\n                { expanded && <div>\n                    <Form.Item name=\"34_1_for_prep_you_use\"\n                               label=\"Для PrEP вы используете:\">\n                        <Radio.Group>\n                            <Radio value=\"Truvada\">Truvada</Radio>\n                            <Radio value=\"Дженерики Truvada\">Дженерики Truvada</Radio>\n                            <Radio value=\"Двухкомпонентную схему (тенофавир и ламивудин/эмтрицитабин)\">Двухкомпонентную\n                                схему\n                                (тенофавир и ламивудин/эмтрицитабин)</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item name=\"34_2_for_prep_you_use\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div> }\n\n\n                { expanded && <Form.Item required name=\"35_you_have_started_taking_prep\"\n                                         label=\"Вы начали прием PrEP:\">\n                    <Radio.Group>\n                        <Radio value=\"После прохождения теста на ВИЧ и консультации с врачом\">После прохождения теста на\n                            ВИЧ и\n                            консультации с врачом</Radio>\n                        <Radio value=\"После теста на ВИЧ\">После теста на ВИЧ</Radio>\n                        <Radio value=\"Без каких-либо тестов и консультаций\">Без каких-либо тестов и консультаций</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                <Form.Item required name=\"36_hiv_test_result\"\n                           label=\"Результат теста на ВИЧ:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n\n                { expanded && <Form.Item required name=\"37_hepatitis_test_result\"\n                                         label=\"Результат теста на Гепатит С:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n                { expanded && <Form.Item required name=\"38_syphilis_test_result\"\n                                         label=\"Результат теста на Сифилис:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item> }\n\n\n                <Form.Item name=\"39_consulting_on_regular_testing_provided\"\n                           label=\"Оказано консультирование по регулярному тестированию\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"40_prevention_counseling_provided\" label=\"Оказано консультирование по профилактике\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"41_provided_counseling_on_receiving_treatment_for_hiv\"\n                           label=\"Оказано консультирование по получению лечения для ВИЧ+\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"42_consultant\" label=\"Консультант (выбор запоминается для следующих опросов)\"\n                    rules={ [ {required: true, message: 'Please select your country!'} ] }\n                >\n                    <Select>\n                        <Option value=\"Майя Демидова\">Майя Демидова</Option>\n                        <Option value=\"Владислав Вишневский\">Владислав Вишневский</Option>\n                    </Select>\n                </Form.Item>\n\n                <div>\n                    <Switch checked={ now } onChange={ () => setNow(!now) }/>&nbsp;&nbsp;&nbsp;<label htmlFor=\"\">Сохраняю\n                    во\n                    время\n                    тестирования (текущее время)</label>\n                </div>\n\n                {\n                    !now && <>\n                        <Form.Item rules={ [\n                            {\n                                required: true,\n                                message: 'Поле обязательно для заполнения',\n                            },\n                        ] } name=\"date\" label={ `Дата и Время` }>\n                            <DatePicker showTime format={ 'DD.MM.YYYY HH:mm' }/>\n                        </Form.Item>\n\n                    </>\n                }\n\n                <Form.Item name=\"45_consultant_comment\" label=\"Комментарий консультанта\">\n                    <Input.TextArea placeholder=\"Комментарий\"/>\n                </Form.Item>\n\n                { submitting ? \"Loading...\" : <Form.Item>\n                    <Button htmlType=\"submit\" type=\"primary\">Сохранить опрос</Button>\n                </Form.Item> }\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default useAuth(connect(mapStateToProps, mapDispatchToProps)(TestingForm), USER);\n","import axios from \"axios\";\nimport baseUrl from \"./../baseurl\";\n\nconst host = baseUrl()\nconst API_URL = `${host}/api/auth/`;\n\nclass AuthService {\n  // login(email, password) {\n  //   return axios\n  //     .post(API_URL + \"signin\", {\n  //       email,\n  //       password\n  //     })\n  //     .then(response => {\n  //       if (response.data.accessToken) {\n  //         localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //       }\n  //\n  //       return response.data;\n  //     });\n  // }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from 'react-redux'\n\nimport AuthService from \"../../services/auth.service\";\nimport { fetchLoginForm } from \"../../redux/thunks/user.thunks\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Обязательно для заполнения\n            </div>\n        );\n    }\n};\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            fetchLoginForm({email: this.state.email, password: this.state.password}).then(\n                (e) => {\n                    if (e.roles.length) {\n                        this.props.history.push(\"/forms\");\n                        window.location.reload();\n                    }\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <img\n                    className=\"card-container__img\"\n                    src=\"https://year18.spid.center/img/illustration-footer.jpg\"\n                    alt=\"profile-img\"\n                />\n\n                <div className=\"card card-container\">\n                    {/*<img*/}\n                    {/*  src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"*/}\n                    {/*  alt=\"profile-img\"*/}\n                    {/*  className=\"profile-img-card\"*/}\n                    {/*/>*/}\n                    <h5 className=\"card-container__title\">Авторизация в CRM</h5>\n\n                    <Form\n                        onSubmit={ this.handleLogin }\n                        ref={ c => {\n                            this.form = c;\n                        } }\n                    >\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Сотрудник</label>\n                            <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={ this.state.email }\n                                onChange={ this.onChangeEmail }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Пароль</label>\n                            <Input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={ this.state.password }\n                                onChange={ this.onChangePassword }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button\n                                className=\"btn btn-primary btn-block\"\n                                disabled={ this.state.loading }\n                            >\n                                { this.state.loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\n                                ) }\n                                <span>Войти</span>\n                            </button>\n                        </div>\n\n                        { this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    { this.state.message }\n                                </div>\n                            </div>\n                        ) }\n                        <CheckButton\n                            style={ {display: \"none\"} }\n                            ref={ c => {\n                                this.checkBtn = c;\n                            } }\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../../services/auth.service\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Обязательно для заполнения\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Введите корректный email\n            </div>\n        );\n    }\n};\n\nconst vusername = value => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Введите от 3 до 20 символов\n            </div>\n        );\n    }\n};\n\nconst vpassword = value => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Введите от 6 до 40 символов\n            </div>\n        );\n    }\n};\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            successful: false,\n            message: \"\"\n        };\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.register(\n                this.state.username,\n                this.state.email,\n                this.state.password\n            ).then(\n                response => {\n                    this.setState({\n                        message: response.data.message,\n                        successful: true\n                    });\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage\n                    });\n                }\n            );\n        }\n    }\n\n    render() {\n\n        console.log(this.state)\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n\n                    <Form\n                        onSubmit={this.handleRegister}\n                        ref={c => {\n                            this.form = c;\n                        }}\n                    >\n                        {!this.state.successful && (\n                            <div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">username</label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChangeUsername}\n                                        validations={[required, vusername]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">email</label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.onChangeEmail}\n                                        validations={[required, email]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">password</label>\n                                    <Input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChangePassword}\n                                        validations={[required, vpassword]}\n                                    />\n                                </div>\n\n\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-primary btn-block\">Регистрация</button>\n                                </div>\n                            </div>\n                        )}\n\n                        {this.state.message && (\n                            <div className=\"form-group\">\n                                <div\n                                    className={\n                                        this.state.successful\n                                            ? \"alert alert-success\"\n                                            : \"alert alert-danger\"\n                                    }\n                                    role=\"alert\"\n                                >\n                                    {this.state.message}\n                                </div>\n                            </div>\n                        )}\n                        <CheckButton\n                            style={{ display: \"none\" }}\n                            ref={c => {\n                                this.checkBtn = c;\n                            }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport classes from './styles.module.scss'\n\nconst Header = props => {\n    return (\n        <div className={classes.Header}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Default = props => {\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default Default;\n","import React from \"react\";\nimport {USER} from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport Header from \"./Header/Header\";\nimport Default from \"./Layouts/Default\";\n\nconst Profile = () => {\n\n    const currentUser = JSON.parse(localStorage.getItem('user'))\n\n    return (\n        <div>\n            <Header>\n                <h2>Настройки</h2>\n            </Header>\n            <Default>\n                <p><strong>Email</strong>: {currentUser.email}</p>\n                <p> Сменить email</p>\n                <p> Сменить пароль</p>\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(Profile, USER);","import React from \"react\";\nimport useAuth from \"../hooks/useAuth\";\nimport {USER} from \"../constants/roles.constants\";\nimport Default from \"./Layouts/Default\";\nimport Header from \"./Header/Header\";\n\nconst AdminPanel = () => {\n    return (<div>\n            <Header>\n                <h2>User page (uploaded video and upload)</h2>\n            </Header>\n            <Default>\n                Content\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(AdminPanel, USER)","import React from \"react\";\nimport useAuth from \"../hooks/useAuth\";\nimport {MODERATOR} from \"../constants/roles.constants\";\n\nconst AdminPanel = () => {\n\n    return (\n        <header className=\"jumbotron\">\n            <h3>\n                MODERATOR BOARD, YEEES!\n            </h3>\n        </header>\n    );\n}\n\nexport default useAuth(AdminPanel, MODERATOR);","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/diagrams`;\n\nconst findDiagram = (type = {}) => {\n    return axios.post(API_URL, type, { headers: authHeader() });\n};\n\nexport default {\n    findDiagram\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport styles from \"./styles.module.scss\";\nimport { Checkbox, Radio } from \"antd\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, multiplicity) => {\n\n    const createMultiplicityValue = (value) => {\n        const valueParse = value && parseInt(value.match(/\\d+/))\n        switch (multiplicity) {\n            case \"5\":\n                return (Math.ceil(valueParse / 5) * 5);\n            case \"10\":\n                return (Math.ceil(valueParse / 10) * 10);\n            default:\n                return value;\n        }\n    }\n\n    const hash = data.map(v => createMultiplicityValue(v[keyValue]))\n    const obj = {};\n\n    hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n    const res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n        .sort((a, b) => b[1] - a[1]);\n\n    const labels = res.map(i => i[0][keyValue])\n    const dataValues = res.map(i => i[1])\n\n    return {\n        type: 'doughnut',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ]\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            plugins: {\n                height: 400,\n                datalabels: {\n                    backgroundColor: function (context) {\n                        return context.dataset.backgroundColor;\n                    },\n                    borderColor: 'white',\n                    borderRadius: 25,\n                    borderWidth: 2,\n                    color: 'white',\n                    display: function (context) {\n                        var dataset = context.dataset;\n                        var count = dataset.data.length;\n                        var value = dataset.data[context.dataIndex];\n                        return value > count * 1.5;\n                    },\n                    formatter: function (value, ctx) {\n                        let sum = ctx.dataset.data.reduce((previousValue, currentValue) => previousValue + currentValue);\n                        // return `${(value * 100 / sum).toFixed(2) + \"%\"} \\n(${value})`;\n                        return `${(value * 100 / sum).toFixed(2) + \"%\"}`;\n                    },\n                    font: {\n                        weight: 'bold'\n                    },\n                    padding: 6,\n                },\n                legend: {\n                    position: 'left',\n                },\n            },\n\n            // Core options\n            aspectRatio: 6 / 2,\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst PieDiagram = ({ data, title, keyValue }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [multiplicity, setMultiplicity] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '5_first_sex':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetMultiplicity = (e) => {\n        setMultiplicity(e.target.value);\n    };\n\n    const updateDataset = useCallback(() => {\n        chartInstance.data = createData(data, keyValue, multiplicity).data\n        chartInstance.update();\n    });\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, multiplicity));\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer, chartInstance, data, keyValue, multiplicity]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n    }, [data, autoUpdate, multiplicity, chartInstance, updateDataset])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n\n            {showSelectorWithRounding() && <Radio.Group value={multiplicity} onChange={handleSetMultiplicity}>\n                <Radio.Button value=\"0\">Без группировки</Radio.Button>\n                <Radio.Button value=\"5\">+ до кратн. 5</Radio.Button>\n                <Radio.Button value=\"10\">+ до кратн. 10</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n        </div>\n    );\n};\n\nexport default PieDiagram;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport styles from \"./styles.module.scss\";\nimport { Checkbox, Radio, Tag } from \"antd\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, arrayType, type, rounding) => {\n\n    const createMultiplicityValue = (value) => {\n        const valueParse = value && parseInt(value.match(/\\d+/))\n\n        if (keyValue === '6_sexual_partners_from_6_months') {\n            switch (rounding) {\n                case \"0\":\n                    return (Math.round(valueParse / 5) * 5);\n                case \"1\":\n                    return (Math.ceil(valueParse / 5) * 5);\n                case \"-1\":\n                    return (Math.floor(valueParse / 5) * 5);\n            }\n        }\n        return value\n    }\n\n    let hash = []\n    let itemsArrayType = []\n    let res\n\n    let obj = {};\n\n    if (arrayType) {\n        hash = data.map(v => v[keyValue])\n        for (let i = 0; i <= hash.length; i++) {\n            if (hash[i]) {\n                const a = hash[i].split(\",\")\n                a.map(aa => itemsArrayType.push(aa.trim()))\n            }\n        }\n\n        itemsArrayType.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => {\n            if (c[keyValue] && c[keyValue].includes(v)) {\n                c[keyValue] = v\n                return c[keyValue].includes(v)\n            }\n        })), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n\n\n    } else {\n        hash = data.map(v => createMultiplicityValue(v[keyValue]))\n\n        hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n    }\n\n    const labels = res.filter(i => i[1] > 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const singleValuesLabels = res.filter(i => i[1] === 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const dataValues = res.filter(i => i[1] > 1).map(i => i[1])\n\n    return {\n        type: 'bar',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ],\n            singleValuesLabels: singleValuesLabels\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            indexAxis: type ? \"x\" : \"y\",\n            responsive: true,\n            plugins: {\n                scaleShowValues: true,\n                scales: {\n                    y: type ? {} : {\n                        ticks: {\n                            autoSkip: false,\n                            fontSize: 10,\n                            max: 1003,\n                            stepSize: 1,\n                        },\n                        padding: { top: 30, left: 0, right: 0, bottom: 0 }\n                    },\n                },\n                height: 400,\n                legend: false,\n                // tooltip: { callbacks: { footer: footer } },\n                datalabels: {\n                    align: \"end\",\n                    offset: 10\n                }\n            },\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst BarDiagram = ({ data, title, keyValue, arrayType, type }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [rounding, setRounding] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '6_sexual_partners_from_6_months':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetRounding = (e) => {\n        setRounding(e.target.value);\n    };\n\n    const updateDataset = () => {\n        chartInstance.data = createData(data, keyValue, arrayType, type, rounding).data\n        chartInstance.update();\n    };\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, arrayType, type, rounding));\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer, data]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n    }, [data, autoUpdate, rounding])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n            {(keyValue === '6_sexual_partners_from_6_months') &&\n            <p>округление до ближайшего числа, кратного 5 (0 = 0, 1, 2, а 5 = 3, 4, 5, 6, 7)</p>}\n\n            {showSelectorWithRounding() && <Radio.Group value={rounding} onChange={handleSetRounding}>\n                <Radio.Button value=\"0\">округление до ближайшего</Radio.Button>\n                <Radio.Button value=\"1\">в бОльшую сторону</Radio.Button>\n                <Radio.Button value=\"-1\">в меньшую сторону</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n            {chartInstance && chartInstance.data.singleValuesLabels.map(i => <Tag>1️⃣&nbsp;&nbsp;{i}</Tag>)}\n        </div>\n    );\n};\n\nexport default BarDiagram;\n","import React from 'react';\nimport { ConfigProvider, DatePicker, Checkbox, Select } from 'antd';\nimport 'moment/locale/ru';\nimport locale from 'antd/lib/locale/ru_RU';\nimport { connect } from \"react-redux\";\nimport {\n    setRangePeriod, setTestingCity,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked\n} from \"../../redux/reducers/filter.reducer\";\n// import {\n//     setTestingDrugUsed,\n//     setTestingPrepUsed,\n//     setRangePeriod,\n//     setTestingCity,\n//     setTestingSexWorked\n// } from \"../../actions/filter-testing\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY HH:mm:ss';\n\nconst Filters = ({\n                     sexWorked,\n                     usedPrep,\n                     usedDrugs,\n                     periodType,\n                     setDrugUsed,\n                     setPrepUsed,\n                     setSexWorked,\n                     setRangePeriod,\n                     setCity\n                 }) => {\n\n    const onChangeDrugUsed = () => {\n        setDrugUsed(!usedDrugs)\n    }\n    const onChangePrepUsed = () => {\n        setPrepUsed(!usedPrep)\n    }\n    const onChangeSexWorked = () => {\n        setSexWorked(!sexWorked)\n    }\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    return (\n        <div className={styles.filters}>\n            {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                <RangePicker showTime onChange={onChangeRangePeriod} format={dateFormat}/>\n            </ConfigProvider>}\n            <div className={styles.groups}>\n                <Checkbox onChange={onChangeDrugUsed}>Used drugs</Checkbox>\n                <Checkbox onChange={onChangePrepUsed}>Used PrEP</Checkbox>\n                <Checkbox onChange={onChangeSexWorked}>Sex workers</Checkbox>\n            </div>\n\n            <Select\n                allowClear\n                style={{ width: 200 }}\n                placeholder=\"Фильтр по филиалу\"\n                optionFilterProp=\"children\"\n                onChange={onChangeCity}\n                filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n            >\n                <Option value=\"moscow\">Москва</Option>\n                <Option value=\"nn\">Нижний Новгород</Option>\n                <Option value=\"spb\">Санкт-Петербург</Option>\n            </Select>\n\n            {/*накинуть фильтр по возрасту*/}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    periodType: state.filter.periodType,\n    usedDrugs: state.filter.usedDrugs,\n    sexWorked: state.filter.sexWorked,\n    usedPrep: state.filter.usedPrep,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setDrugUsed: (used) => dispatch(setTestingDrugUsed(used)),\n    setPrepUsed: (used) => dispatch(setTestingPrepUsed(used)),\n    setSexWorked: (used) => dispatch(setTestingSexWorked(used)),\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\n","import React, { useEffect, useState } from 'react';\nimport { Collapse, Table, Tabs } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findTesting } from \"../../../redux/thunks/forms\";\n// import { findDiagram } from \"../../../actions/diagrams\";\n// import { findTesting } from \"../../../actions/forms\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport Filters from \"../../filters/filters\";\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst TestingReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filter);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('M/D/YYYY HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('M/D/YYYY HH:mm:ss').toString(),\n        usedDrugs: selectorFiltersTesting.usedDrugs,\n        usedPrep: selectorFiltersTesting.usedPrep,\n        sexWorked: selectorFiltersTesting.sexWorked,\n        city: selectorFiltersTesting.city\n    }\n\n    useEffect(() => {\n        dispatch(findTesting(filters)).then((data) => {\n            setTesting(data.data)\n        })\n\n        dispatch(findDiagram({ type: \"testing\" })).then((data) => {\n            setColumnsForm(data.data)\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: 400,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <Filters/>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                            <Table dataSource={\n                                comments} columns={[\n                                {\n                                    title: 'Комментарий консультанта',\n                                    dataIndex: '45_consultant_comment',\n                                    key: '45_consultant_comment',\n                                },\n                                {\n                                    title: 'Консультант',\n                                    dataIndex: '42_consultant',\n                                    key: '42_consultant',\n                                },\n                                {\n                                    title: 'Дата',\n                                    dataIndex: '43_date',\n                                    key: '43_date',\n                                }\n                            ]}/>\n                            </Panel>\n                        </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        pagination\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default TestingReport;\n","import DiagramService from \"../../services/diagram.service\";\nimport { DIAGRAM_FAIL, DIAGRAM_SUCCESS, SET_MESSAGE } from \"./types\";\n\nexport const findDiagram = (filters) => (dispatch) => {\n    return DiagramService.findDiagram(filters).then(\n        (response) => {\n            dispatch({\n                type: DIAGRAM_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: DIAGRAM_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { ADMIN } from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport UserService from \"../services/user.service\";\nimport TestingReport from \"./reports/testing/TestingReport\";\n\nconst { Content, Sider } = Layout;\nconst BoardAdmin = () => {\n    const [tab, setTab] = useState(\"1\");\n\n    const setActiveTab = (e) => {\n        setTab(e.key)\n    }\n\n    const setComponent = (tab) => {\n       switch (tab) {\n           case \"1\":\n               return <TestingReport/>\n           case \"2\":\n               return \"Индивидуальная формулировка выборки показателей отчета (добавлять/удалять стату с хитрой совмещенной выборкой)\"\n           default:\n               return \"\"\n       }\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <Menu onSelect={setActiveTab} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[tab]}>\n                    {/*<Menu.Item key=\"1\" icon={<VideoCameraOutlined/>}>*/}\n                    {/*    Диаграммы*/}\n                    {/*</Menu.Item>*/}\n                    <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                        Тестируемые\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" >\n                       Индивидуальный отч.\n                    </Menu.Item>\n                    {/*<Menu.Item key=\"4\" icon={<UserOutlined/>}>*/}\n                    {/*    nav 4*/}\n                    {/*</Menu.Item>*/}\n                </Menu>\n            </Sider>\n            <Layout>\n                {/*<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}/>*/}\n                <Content style={{ margin: '24px 16px 0' }}>\n                    {setComponent(tab)}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nexport default useAuth(BoardAdmin, ADMIN);","import React from 'react';\nimport {Layout, Menu} from 'antd';\n\nconst {Sider, Content} = Layout;\n\nconst Admin = props => {\n\n    const menuSelectHandler = e => {\n        props.history.push(`/admin/${e.key}`)\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <div className=\"logo\"/>\n                <Menu theme=\"dark\" mode=\"inline\" onSelect={menuSelectHandler} >\n                    <Menu.Item key=\"add-video\">\n                        Добавить видео\n                    </Menu.Item>\n                    <Menu.Item key=\"list-video\">\n                        Список видео\n                    </Menu.Item>\n                    <Menu.Item key=\"3\">\n                        nav 3\n                    </Menu.Item>\n                    <Menu.Item key=\"4\">\n                        nav 4\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Content>{props.children}</Content>\n        </Layout>\n    );\n};\n\nexport default Admin;\n","import React from \"react\";\nimport useAuth from \"./../hooks/useAuth\";\nimport {USER} from \"../constants/roles.constants\";\nimport Default from \"./Layouts/Default\";\nimport Header from \"./Header/Header\";\n\nconst Home = () => {\n  return (<div>\n        <Header>\n          <h2>Gallery block</h2>\n        </Header>\n        <Default>\n          Content\n        </Default>\n      </div>\n  );\n}\n\nexport default useAuth(Home, USER)","import React from 'react'\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport './style.css'\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file, videoFolder) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n    }\n\n    // file.name = videoFolder + (file.type === 'image/jpeg') ? '.jpeg' : '.png'\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\nexport class PreviewImageForMetadata extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    changeNameFile = (file, videoFolder) => {\n        const oldName = file.name.split('.')\n        console.log(oldName)\n        return new File([file], videoFolder + '.' + oldName[1], {\n            type: file.type,\n            lastModified: file.lastModified,\n        });\n    }\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    imageUrl,\n                    loading: false,\n                })\n            );\n        }\n    };\n\n    render() {\n        const { loading, imageUrl } = this.state;\n        const uploadButton = (\n            <div>\n                {loading ? <LoadingOutlined/> : <PlusOutlined/>}\n                <div style={{ marginTop: 8 }}>Загрузить</div>\n            </div>\n        );\n        return (\n            <Upload\n                name=\"preview\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"http://localhost:5001/api/upload/preview\"\n                beforeUpload={beforeUpload}\n                transformFile={e => this.changeNameFile(e, this.props.folderName)}\n                onChange={this.handleChange}\n            >\n                {imageUrl ? <img src={imageUrl} alt=\"preview\" style={{ width: '100%' }}/> : uploadButton}\n            </Upload>\n        );\n    }\n}","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:5001\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","import http from \"../http-common\";\n\nclass UploadFilesService {\n    upload(file, onUploadProgress, setFolderName) {\n        let formData = new FormData();\n        formData.append(\"file\", file.file);\n\n        http.post(\"/api/upload/video\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n            onUploadProgress,\n        }).then(data => {\n            const fileName = data.data[0].filename.split('.')\n            const originalname = data.data[0].originalname.split('.')\n\n            setFolderName({ fileName: fileName[0], originalname: originalname[0] })\n            file.onSuccess()\n        })\n    }\n\n    getFiles() {\n        return http.get(\"/api/files\");\n    }\n\n    // getFileConvert(file) {\n    //     return http.post(\"/api/file\", {data: file});\n    // }\n}\n\nexport default new UploadFilesService();","import React, { useEffect, useState } from 'react'\nimport { Form, Input, Button, Upload, Progress } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { PreviewImageForMetadata } from \"./PreviewImageForMetadata\";\nimport { connect } from 'react-redux'\nimport { createVideoThunks } from \"../../redux/thunks/video.thunks\";\nimport UploadService from \"../../services/upload-files\";\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst VideoMetadataForm = props => {\n\n\n    const [form] = Form.useForm();\n    const [progress, setProgress] = useState(0)\n    const [folderName, setFolderName] = useState(0)\n\n    const onFinish = (values) => {\n        values.folder = props.folderName\n        props.createVideo({\n            ...values,\n            folder: folderName.fileName\n        })\n    };\n\n    const onReset = () => {\n        form.resetFields();\n    };\n\n    useEffect(() => onFill());\n    const onFill = () => {\n        form.setFieldsValue({\n            title: folderName.originalname,\n            folder: folderName.fileName,\n            description: '',\n        });\n    };\n\n    const action = e => {\n        console.log('Action e', e)\n        UploadService.upload(e, event => propsVideoUpload.onChange(event), setFolderName)\n    }\n\n    const propsVideoUpload = {\n        progress: { strokeWidth: 2, showInfo: false, steps: 20 },\n        name: 'file',\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        },\n        customRequest: action,\n        onChange(info) {\n            const percent = ((info.loaded / info.total) * 100).toFixed(0)\n            if (info.loaded || info.total) setProgress(percent)\n        },\n    };\n\n    return (\n        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n            <Form.Item\n                name=\"video\"\n                label=\"Видеофайл в формате .mp4\"\n            >\n                <Upload {...propsVideoUpload}>\n                    <Button icon={<UploadOutlined/>}>Click to Upload</Button>\n                </Upload>\n                {progress > 0 ? <Progress percent={progress}/> : null}\n            </Form.Item>\n            <Form.Item\n                name=\"folder\"\n                label=\"Папка на сервере\"\n             fieldContext='folder'>\n                <Input/>\n            </Form.Item>\n            <Form.Item\n                name=\"title\"\n                label=\"Заголовок видео\"\n                rules={[\n                    {\n                        required: true,\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                label=\"Краткое описание\"\n                rules={[\n                    {\n                        required: true,\n                    },\n                ]}\n            >\n                <Input.TextArea/>\n            </Form.Item>\n\n            {!!folderName && <Form.Item label=\"Превью видео\">\n                <PreviewImageForMetadata folderName={folderName.fileName}/>\n            </Form.Item>}\n\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Сохранить видео\n                </Button>\n                <Button htmlType=\"button\" onClick={onReset}>\n                    Сбросить метаданные\n                </Button>\n                <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\n                    Заполнить из fill\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nconst mapStateToProps = state => ({\n    state: state\n})\n\nconst mapDispatchToProps = dipatch => ({\n    createVideo: data => dipatch(createVideoThunks(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoMetadataForm)","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport AllForms from \"./components/all-forms/all-forms\";\nimport TestingForm from \"./components/Forms/testing/TestingForm\";\n\nimport logoWhite from './images/logo-white.svg'\nimport logoBlack from './images/logo-black.svg'\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Forms/Login\";\nimport Register from \"./components/Forms/Register\";\nimport Welcome from \"./components/Welcome\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/Board-user\";\nimport BoardModerator from \"./components/Board-moderator\";\nimport AdminPanel from \"./components/Board-admin\";\nimport Home from \"./components/Home\";\nimport AddVideoFromAdmin from \"./components/Admin/AddVideoFromAdmin\";\nimport ListVideoFromAdmin from \"./components/Admin/ListVideoFromAdmin\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.logOut = this.logOut.bind(this);\n\n        this.state = {\n            showModeratorBoard: false,\n            showAdminBoard: false,\n            currentUser: undefined,\n            readyToRedirect: null\n        };\n    }\n\n    componentDidMount() {\n        const userData = JSON.parse(localStorage.getItem('user'))\n        console.log('userData', userData)\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: AuthService.getCurrentUser(),\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.readyToRedirect !== null) {\n            this.setState({\n                readyToRedirect: null\n            })\n        }\n    }\n\n    logOut() {\n        AuthService.logout();\n    }\n\n    render() {\n        const {currentUser, showModeratorBoard, showAdminBoard} = this.state;\n\n        return (\n            <Router>\n                <div>\n                   <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container-fluid\">\n                        <Link to={ \"/\" } className=\"navbar-brand\">\n                            <div className=\"logo\" style={ {backgroundImage: `url(${ logoWhite })`} }/>\n                        </Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                                aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            {/*<li className=\"nav-item\">*/ }\n                            {/*  <Link to={\"/home\"} className=\"nav-link\">*/ }\n                            {/*    Домашняя*/ }\n                            {/*  </Link>*/ }\n                            {/*</li>*/ }\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                { showModeratorBoard && (\n                                    <li className=\"nav-item\">\n                                        <Link to={ \"/mod\" } className=\"nav-link\">\n                                            Moderator Board\n                                        </Link>\n                                    </li>\n                                ) }\n\n                                { showAdminBoard && (\n                                    <li className=\"nav-item\">\n                                        <Link to={ \"/admin\" } className=\"nav-link\">\n                                            Отчеты\n                                        </Link>\n                                    </li>\n                                ) }\n\n                                {/*{currentUser && (*/ }\n                                {/*  <li className=\"nav-item\">*/ }\n                                {/*    <Link to={\"/user\"} className=\"nav-link\">*/ }\n                                {/*      Профиль*/ }\n                                {/*    </Link>*/ }\n                                {/*  </li>*/ }\n                                {/*)}*/ }\n\n                                { currentUser && (\n                                    <li className=\"nav-item\">\n                                        <Link to={ \"/forms\" } className=\"nav-link\">\n                                            Опросы\n                                        </Link>\n                                    </li>\n                                ) }\n\n                                { currentUser ? (\n                                <div className=\"navbar-nav ml-auto\">\n                                    <li className=\"nav-item\">\n                                        <Link to={ \"/profile\" } className=\"nav-link\">{ currentUser.username }</Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a href=\"/login\" className=\"nav-link\"\n                                           onClick={ this.logOut }>выйти</a>\n                                    </li>\n                                </div>\n                            ) : (\n                                <div className=\"navbar-nav ml-auto\">\n                                    <li className=\"nav-item\">\n                                        <Link to={ \"/login\" } className=\"nav-link\">\n                                            войти\n                                        </Link>\n                                    </li>\n\n                                    <li className=\"nav-item\">\n                                        <Link to={ \"/register\" } className=\"nav-link\">\n                                            reg\n                                        </Link>\n                                    </li>\n                                </div>\n                            ) }\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n\n                    {\n                        this.state.readyToRedirect\n                            ? <Redirect to={ this.state.readyToRedirect }/>\n                            : null\n                    }\n\n                    <Switch>\n                        <Route exact path={ [ \"/\", \"/home\" ] } component={ Login }/>\n                        <Route exact path=\"/login\" component={ Login }/>\n                        <Route exact path=\"/register\" component={ Register }/>\n                        <Route exact path=\"/profile\" component={ Profile }/>\n                        <Route exact path=\"/forms\" component={ AllForms }/>\n                        <Route exact path=\"/testing\" component={ TestingForm }/>\n                        <Route path=\"/user\" component={ BoardUser }/>\n                        <Route path=\"/mod\" component={ BoardModerator }/>\n                        <Route path=\"/admin\" component={ AdminPanel }/>\n                    </Switch>\n                </div>\n\n                <div className=\"footer\">\n                    <div className=\"logo\" style={ {backgroundImage: `url(${ logoBlack })`} }/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapState = state => ({\n    // allCounterNotRead: state.chat.allCounterNotRead\n})\n\nconst mapDispatch = dispatch => ({\n    // getUserChatsApi: id => dispatch(getUserChatsApi({ id })),\n})\n\nexport default withRouter(connect(mapState, mapDispatch)(App));\n","import React from \"react\";\nimport Admin from \"./../Layouts/Admin\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {ADMIN} from \"../../constants/roles.constants\";\nimport VideoMetadataForm from \"./../../components/Forms/VideoMetadataForm\";\n\nconst AddVideoFromAdmin = props => {\n\n    return (\n        <Admin history={props.history}>\n            <h1>Добавление нового видео</h1>\n            <VideoMetadataForm />\n        </Admin>\n    );\n}\n\nexport default useAuth(AddVideoFromAdmin, ADMIN);","import React, { useEffect, useState } from \"react\";\nimport Admin from \"./../Layouts/Admin\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {ADMIN} from \"../../constants/roles.constants\";\nimport UploadService from \"../../services/upload-files\";\n\nconst AddVideoFromAdmin = props => {\n    const [list, setList] =useState(null)\n\n    useEffect(() => {\n        UploadService.getFiles().then((data) => setList(data.data))\n    }, []);\n\n    return (\n        <Admin history={props.history}>\n            <h1>List videos</h1>\n            <div className=\"card\">\n                <div className=\"card-header\">Папки с видео</div>\n                <ul className=\"list-group list-group-flush\">\n                    {list &&\n                    list.map((file, index) => (\n                        <li className=\"list-group-item\" key={index}>\n                            <a href={file.url}>{file.name} + добавить превью, скрытие, редактирование</a>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Admin>\n    );\n}\n\nexport default useAuth(AddVideoFromAdmin, ADMIN);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createSlice} from '@reduxjs/toolkit'\nimport {START} from \"../../constants/others.constants\";\n\nconst APP_REDUCER_NAME = 'app'\n\nconst appSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: {\n        loaded: false,\n        create: {\n            files: [],\n            metro: [],\n            typeOfApplicant: null\n        },\n        user: null\n    },\n    reducers: {\n        setLoadedFiles(state, action) {\n            state.create.files = [\n                ...state.create.files,\n                ...action.payload\n            ]\n        },\n        resetFiles(state, payload) {\n            state.create.files = []\n        },\n        setMetroStation(state, action) {\n            state.create.metro = action.payload\n        },\n        setLoading(state, action) {\n            state.loaded = action.payload !== START\n        },\n        setOneUserData(state, action) {\n            state.user = action.payload\n            state.loaded = true\n        }\n    }\n})\n\nexport const {\n    setLoadedFiles,\n    resetFiles,\n    setMetroStation,\n    setLoading,\n    setOneUserData\n} = appSlice.actions\n\nexport default appSlice.reducer\n","import {combineReducers} from 'redux'\nimport user from './reducers/user.reducer'\nimport app from './reducers/app.reducer'\n// import video from './reducers/video.reducer'\nimport filter from './reducers/filter.reducer'\n\nexport default combineReducers({\n    app,\n    user,\n    // video,\n    filter\n});\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport rootReducer from './reducer'\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger'\n// And use redux-batch as an example of adding enhancers\nimport {reduxBatch} from '@manaflair/redux-batch'\n\nconst middleware = [...getDefaultMiddleware(), logger]\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers: [reduxBatch]\n})\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport {YMInitializer} from 'react-yandex-metrika';\nimport * as Sentry from '@sentry/browser';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\nif (process.env.NODE_ENV === 'production') {\n    Sentry.init({dsn: \"https://80ec2091533941ef80154e3220bae060@o392602.ingest.sentry.io/5240421\"});\n}\n\nReactDOM.render(\n    <React.Fragment>\n        {process.env.NODE_ENV === 'production'\n            ? <YMInitializer accounts={[62759980]} options={{clickmap: true, webvisor: true}} version=\"2\"/>\n            : null}\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.Fragment>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__38MaE\",\"tabs\":\"styles_tabs__1iaNG\",\"ant-tabs-tab\":\"styles_ant-tabs-tab__1fvBs\",\"ant-tabs-tab-active\":\"styles_ant-tabs-tab-active__2Yg96\",\"ant-tabs-tab-btn\":\"styles_ant-tabs-tab-btn__1Owmp\",\"image\":\"styles_image__2gr_S\",\"titleContainer\":\"styles_titleContainer__x5hAm\",\"required\":\"styles_required__3hjvh\",\"line\":\"styles_line__5_JyL\",\"h1\":\"styles_h1__UJ0BG\",\"resetForm\":\"styles_resetForm__kMHmu\"};"],"sourceRoot":""}