{"version":3,"sources":["baseurl.js","components/Forms/testing/fast-tabs.jsx","components/diagrams/bar.js","components/diagrams/pie.js","services/diagram.service.js","redux/thunks/diagrams.js","components/Forms/testing/styles.module.scss","hooks/useAuth.js","components/Forms/drugs/styles.module.scss","components/Forms/hot_line/styles.module.scss","redux/reducers/filterHotLine.reducer.js","components/diagrams/styles.module.scss","redux/reducers/filterDrugs.reducer.js","components/reports/groups/styles.module.scss","components/reports/testing/styles.module.scss","services/user.service.js","redux/reducers/filterGroupsHiv.reducer.js","redux/reducers/filterGroupsTG.reducer.js","components/Success.jsx","components/Forms/groups/Success.jsx","redux/reducers/user.reducer.js","components/Header/Header.jsx","components/Layouts/Default.jsx","components/Forms/groups/image.jpeg","components/filters/filters.js","components/reports/testing/TestingReport.jsx","components/all-forms/all-forms.js","components/reports/drugstore/styles.module.scss","components/reports/hot-line/styles.module.scss","redux/thunks/patients.thunks.js","redux/thunks/patient_visits.thunk.js","shared/DebounceSelect.jsx","shared/CodeInput.jsx","shared/StatusTag.jsx","pages/PatientForm.jsx","pages/PatientVisitsTable.jsx","hooks/useNotification.js","pages/PatientPage.jsx","pages/PatientsTable.jsx","pages/PatientsPage.jsx","redux/thunks/questions.thunk.js","redux/thunks/visits.thunks.js","pages/PatientVisitQuestionnaire.jsx","pages/PatientVisitPage.jsx","pages/PatientVisitForm.jsx","pages/PatientVisitsPage.jsx","pages/QuestionsTable.jsx","pages/QuestionsPage.jsx","processes/VisitsProcess.jsx","processes/index.js","redux/thunks/types.js","App.jsx","components/all-forms/test.jpeg","components/all-forms/hot-line.jpg","components/all-forms/groups-hiv.jpeg","components/all-forms/pharmacy.jpeg","components/all-forms/tg.png","components/Forms/drugs/DrugsForm.jsx","components/Forms/groups/GroupsForm.jsx","components/Forms/groups/GroupsTG.jsx","components/Forms/testing/images/no-pride.jpg","components/Forms/testing/images/pride.jpeg","components/Forms/hot_line/image.jpeg","images/logo-white.svg","images/logo-black.svg","components/Forms/Login.jsx","components/Profile.jsx","components/Header/styles.module.scss","components/Board-user.jsx","components/filters/filters-drugs.js","components/reports/drugstore/DrugstoreReport.jsx","components/filters/filters-groups-hiv-plus.js","components/reports/groups/GroupsHivReport.jsx","components/filters/filters-groups-tg.js","components/reports/groups/GroupsTGReport.jsx","components/filters/filters-hotline.js","components/reports/hot-line/HotLineReport.jsx","components/Board-moderator.jsx","components/Forms/testing/forms/testing-drugs-user.jsx","components/Forms/testing/forms/testing-general.jsx","components/Forms/testing/forms/testing-msm.jsx","components/Forms/testing/TestingForm.jsx","components/Forms/Register.jsx","components/Forms/ChangePassword.jsx","components/admin/user-management/index.jsx","components/Board-admin.jsx","components/Forms/hot_line/Success.jsx","components/Forms/hot_line/HotLineForm.jsx","services/auth-header.js","redux/reducers/filter.reducer.js","serviceWorker.js","redux/reducers/app.reducer.js","constants/others.constants.js","redux/reducer.js","redux/store.js","index.js","constants/api.constants.js","services/form.service.js","redux/thunks/forms.js","components/filters/styles.module.scss","redux/thunks/user.thunks.js","components/all-forms/slyles.module.scss","constants/roles.constants.js","components/Forms/groups/styles.module.scss","services/auth.service.js"],"names":["baseUrl","FastTabs","goTo","Group","onChange","style","justifyContent","display","margin","flexWrap","name","label","map","tab","Button","disabled","whiteSpace","textOverflow","value","Chart","register","registerables","createData","data","keyValue","arrayType","type","rounding","res","hash","itemsArrayType","obj","v","i","length","split","aa","push","trim","forEach","Object","keys","assign","find","c","includes","sort","a","b","valueParse","parseInt","match","Math","round","ceil","floor","createMultiplicityValue","labels","filter","singleValuesLabels","datasets","backgroundColor","datalabels","anchor","plugins","ChartDataLabels","options","indexAxis","responsive","scaleShowValues","scales","y","ticks","autoSkip","fontSize","max","stepSize","padding","top","left","right","bottom","height","legend","align","offset","cutoutPercentage","layout","elements","line","fill","point","hoverRadius","radius","BarDiagram","title","chartContainer","useRef","useState","chartInstance","setChartInstance","autoUpdate","setAutoUpdate","setRounding","updateDataset","update","useEffect","current","newChartInstance","className","styles","container","showSelectorWithRounding","e","target","checked","onClick","ref","multiplicity","context","dataset","borderColor","borderRadius","borderWidth","color","count","dataIndex","formatter","ctx","sum","reduce","previousValue","currentValue","toFixed","font","weight","position","aspectRatio","PieDiagram","setMultiplicity","useCallback","host","baseurl","API_URL","axios","post","headers","authHeader","findDiagram","filters","dispatch","DiagramService","then","response","DIAGRAM_SUCCESS","SET_MESSAGE","payload","message","Promise","resolve","error","toString","DIAGRAM_FAIL","reject","module","exports","useAuth","WrappedComponent","role","Authenticate","getUser","JSON","parse","localStorage","getItem","ADMIN","UserService","getAdminBoard","props","setRole","userData","isAuthenticated","catch","MODERATOR","getModeratorBoard","USER","getUserBoard","this","to","React","Component","connect","state","user","initialState","rangePeriod","moment","subtract","city","reason","result","filterSlice","createSlice","reducers","setRangePeriod","action","setTestingCity","setReason","setResult","resetFilterState","findByCode","actions","setTestingType","get","Success","console","log","useHistory","status","subTitle","id","extra","key","reload","userSlice","fetchRole","Header","classes","children","Default","Option","Select","Search","Input","RangePicker","DatePicker","periodType","usedDrugs","sexWorked","usedPrep","formType","setDrugUsed","used","setTestingDrugUsed","setPrepUsed","setTestingPrepUsed","setSexWorked","setTestingSexWorked","period","setCity","setSearchOfCode","code","setFormType","setAge","age","setSearchType","firstLine","width","placeholder","defaultValue","onClear","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","locale","format","groups","secondLine","mode","groupsSearch","placement","defaultChecked","checkedChildren","unCheckedChildren","onSearch","allowClear","enterButton","Panel","Collapse","TabPane","Tabs","TestingReport","useDispatch","selectorFiltersTesting","useSelector","testing","setTesting","columnsForm","setColumnsForm","rangePeriodStart","rangePeriodEnd","searchByCode","searchOfCode","searchType","findTesting","fixed","columns","column","order","undefined","comments","shape","icon","DownloadOutlined","today","Date","Excel","addSheet","addColumns","addDataSource","saveAs","statisticsCounts","test","tabs","defaultActiveKey","header","dataSource","bordered","size","scroll","x","tableLayout","AllForms","textDecoration","card","image","backgroundImage","hotLine","groupsHiv","tg","pharmacy","getPatients","API_PATIENTS","params","getPatient","postPatients","postPatient","deletePatient","delete","getPatientVisits","API_PATIENT_VISITS","getPatientVisit","postPatientVisits","postPatientVisit","DebounceSelect","fetchOptions","debounceTimeout","fetching","setFetching","setOptions","fetchRef","debounceFetcher","useMemo","debounce","fetchId","newOptions","labelInValue","notFoundContent","CodeInput","mask","isRevealingMask","formatCharacters","W","validate","transform","char","toUpperCase","StatusTag","PatientForm","profile","onUpdate","initialValues","onFinish","onFinishFailed","errorInfo","autoComplete","Item","rules","required","answer","index","marginLeft","TextArea","rows","htmlType","render","date","dataMap","info","patient","visitName","visit","num","comment","PatientVisitsTable","patientVisits","pagination","useNotification","openNotification","notification","open","description","PatientPage","useParams","setPatient","setPatientVisits","patientId","Title","level","record","PatientsTable","patients","onDelete","patient_visits","visit1","visitId","visit2","visit3","visit4","visit5","visit6","selectedRowKeys","setSelectedRowKeys","hasSelected","rowSelection","PatientsPage","setPatients","history","handleDelete","ids","all","getQuestions","API_QUESTIONS","getVisits","API_VISITS","getVisit","questionsOptions","multiple","other","answers","answers2","text","findOptions","question","opts","Question","visitNum","consultants","handleChange","event","currentTarget","defaultAnswers","consultant","PatientVisitQuestionnaire","patientVisit","questions","patient_visit_answers","users","setUsers","setConsultants","questionsWithAnswers","ans","questionId","otherAnswer","qstn","onChangeQuestion","findAllUsersForForms","alias","appointment","values","PatientVisitPage","loading","setLoading","allQuestions","setAllQuestions","visitQuestions","setVisitQuestions","setPatientVisit","setVisit","visit_questions","fetchPatients","surname","PatientVisitForm","visits","setVisits","setDate","showSearch","newValue","PatientVisitsPage","QuestionsTable","QuestionsPage","setQuestions","VisitsProcess","setTab","location","useLocation","pathname","Sider","breakpoint","collapsedWidth","onSelect","theme","defaultSelectedKeys","Content","path","component","REGISTER_SUCCESS","REGISTER_FAIL","App","logOut","bind","process","versions","node","showModeratorBoard","showAdminBoard","currentUser","readyToRedirect","AuthService","getCurrentUser","setState","roles","prevProps","prevState","snapshot","logout","logoWhite","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","username","href","exact","Login","Profile","TestingForm","HotLineForm","GroupsForm","GroupsTG","DrugsForm","BoardUser","BoardModerator","AdminPanel","logoBlack","withRouter","pastTests","defaultCity","submitting","setSubmitting","successful","setSuccessful","Form","useForm","form","resetForm","window","resetFields","stateForm","replace","createOtherFields","fields","drugsForm","removeItem","onChangeCode","setFieldsValue","valueClean","createResetValue","reset","item","titleContainer","h1","showIcon","getFieldsValue","setItem","textAlign","groupsHivForm","noPride","groupsTGForm","handleLogin","onChangeEmail","onChangePassword","email","password","preventDefault","validateAll","checkBtn","_errors","fetchLoginForm","resMessage","src","alt","onSubmit","htmlFor","validations","filterHotLine","setType","DrugstoreReport","filterDrugs","findDrugstore","GroupsHivReport","filterGroupsHiv","findGroupsHiv","GroupsTGReport","findGroupsTG","findHotLine","Layout","opened","setOpened","subdivision","onBreakpoint","broken","onCollapse","collapsed","UserOutlined","PhoneOutlined","SubMenu","UsergroupAddOutlined","HotLineReport","setComponent","TestingDrugsUser","TestingGeneral","TestingMsm","optionsWithDisabled","prep","defaultUser","setPrep","expanded","setExpanded","general","setGeneral","drugsUsers","setDrugsUsers","DeleteOutlined","pride","onValuesChange","showNow","showTime","Register","remember","Password","ChangePassword","setVisible","setValidate","pass","changePassword","success","changedValues","allValues","min","UserManagement","setRoles","subdivisions","setSubdivisions","isModalVisible","setIsModalVisible","isModalChangePasswordVisible","setIsModalChangePasswordVisible","cities","findRoles","findSubdivisions","findAllUsers","dataUsers","findAllRoles","dataRoles","roleId","userId","subdivisionId","val","changeRole","subdivisionsId","changeSubdivisions","join","changeCity","ghost","visible","onCancel","footer","sortByName","nameA","nameB","hotLineForm","accessToken","Boolean","hostname","appSlice","loaded","create","files","metro","typeOfApplicant","setLoadedFiles","resetFiles","setMetroStation","setOneUserData","combineReducers","app","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","enhancers","reduxBatch","Sentry","dsn","ReactDOM","Fragment","accounts","clickmap","webvisor","version","document","getElementById","navigator","serviceWorker","ready","registration","unregister","API_AUTH_SIGNIN","API_ALL_USERS","API_ALL_USERS_FOR_FORMS","API_ALL_ROLES","API_ROLES","API_SUBDIVISIONS","FormService","stringify"],"mappings":"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","file":"static/js/main.4ee78903.chunk.js","sourcesContent":["const baseUrl = () => {\n    switch (process.env.NODE_ENV) {\n        case \"development\": return 'http://localhost:5101'\n        default: return 'https://reports.spid.center'\n    }\n}\n\nexport default baseUrl;","import { Radio } from \"antd\";\nimport React from \"react\";\n\nexport const FastTabs = ({ goTo }) => {\n    const tabs = [\n        { name: 'testing', label: \"Тестирование\" },\n        { name: 'hotline', label: \"Горячая линия\" },\n        { name: 'groups-hiv', label: \"Гр. ВИЧ+\" },\n        { name: 'groups-tg', label: \"Гр. ТГ\" },\n        { name: 'drugs', label: \"Аптека\" },\n    ]\n\n    return (\n        <Radio.Group onChange={goTo} style={\n            { justifyContent: \"center\", display: \"flex\", margin: \"0 0 10px\", flexWrap: \"wrap\" }\n        }>\n            {tabs.map(tab => <Radio.Button disabled={tab.disabled} style={{whiteSpace:\"nowrap\", textOverflow: \"ellipsis\", margin: 7}}\n                                           value={tab.name}>{tab.label}</Radio.Button>)}\n        </Radio.Group>\n    )\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport styles from \"./styles.module.scss\";\nimport { Checkbox, Radio, Tag } from \"antd\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, arrayType, type, rounding) => {\n\n    const createMultiplicityValue = (value) => {\n        const valueParse = value && parseInt(value.match(/\\d+/))\n\n        if (keyValue === '6_sexual_partners_from_6_months') {\n            switch (rounding) {\n                case \"0\":\n                    return (Math.round(valueParse / 5) * 5);\n                case \"1\":\n                    return (Math.ceil(valueParse / 5) * 5);\n                case \"-1\":\n                    return (Math.floor(valueParse / 5) * 5);\n            }\n        }\n        return value\n    }\n\n    let hash = []\n    let itemsArrayType = []\n    let res\n\n    let obj = {};\n\n    if (arrayType) {\n        hash = data.map(v => v[keyValue])\n        for (let i = 0; i <= hash.length; i++) {\n            if (hash[i]) {\n                const a = hash[i].split(\",\")\n                a.map(aa => itemsArrayType.push(aa.trim()))\n            }\n        }\n\n        itemsArrayType.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => {\n            if (c[keyValue] && c[keyValue].includes(v)) {\n                c[keyValue] = v\n                return c[keyValue].includes(v)\n            }\n        })), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n\n\n    } else {\n        hash = data.map(v => createMultiplicityValue(v[keyValue]))\n\n        hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n    }\n\n    const labels = res.filter(i => i[1] > 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const singleValuesLabels = res.filter(i => i[1] === 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const dataValues = res.filter(i => i[1] > 1).map(i => i[1])\n\n    return {\n        type: 'bar',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ],\n            singleValuesLabels: singleValuesLabels\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            indexAxis: type ? \"x\" : \"y\",\n            responsive: true,\n            plugins: {\n                scaleShowValues: true,\n                scales: {\n                    y: type ? {} : {\n                        ticks: {\n                            autoSkip: false,\n                            fontSize: 10,\n                            max: 1003,\n                            stepSize: 1,\n                        },\n                        padding: { top: 30, left: 0, right: 0, bottom: 0 }\n                    },\n                },\n                height: 400,\n                legend: false,\n                // tooltip: { callbacks: { footer: footer } },\n                datalabels: {\n                    align: \"end\",\n                    offset: 10\n                }\n            },\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst BarDiagram = ({ data, title, keyValue, arrayType, type }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [rounding, setRounding] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '6_sexual_partners_from_6_months':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetRounding = (e) => {\n        setRounding(e.target.value);\n    };\n\n    // eslint-disable-next-line\n    const updateDataset = () => {\n        chartInstance.data = createData(data, keyValue, arrayType, type, rounding).data\n        chartInstance.update();\n    };\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, arrayType, type, rounding));\n            setChartInstance(newChartInstance);\n        }\n        // eslint-disable-next-line\n    }, [chartContainer, data]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n        // eslint-disable-next-line\n    }, [data, autoUpdate, rounding])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n            {(keyValue === '6_sexual_partners_from_6_months') &&\n            <p>округление до ближайшего числа, кратного 5 (0 = 0, 1, 2, а 5 = 3, 4, 5, 6, 7)</p>}\n\n            {showSelectorWithRounding() && <Radio.Group value={rounding} onChange={handleSetRounding}>\n                <Radio.Button value=\"0\">округление до ближайшего</Radio.Button>\n                <Radio.Button value=\"1\">в бОльшую сторону</Radio.Button>\n                <Radio.Button value=\"-1\">в меньшую сторону</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n            {chartInstance && chartInstance.data.singleValuesLabels.map(i => <Tag>1️⃣&nbsp;&nbsp;{i}</Tag>)}\n        </div>\n    );\n};\n\nexport default BarDiagram;\n","import { Checkbox, Radio } from \"antd\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport styles from \"./styles.module.scss\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, multiplicity) => {\n\n    const createMultiplicityValue = (value) => {\n\n        if (keyValue === '27_registration_on_the_territory') {\n            switch (value) {\n                case \"Постоянная регистрация\":\n                    return \"Постоянная регистрация\"\n                case \"Временная регистрация\":\n                    return \"Временная регистрация\"\n                default:\n                    return \"Нет регистрации\"\n            }\n        }\n\n        const valueParse = value && parseInt(value.match(/\\d+/))\n        switch (multiplicity) {\n            case \"5\":\n                return (Math.ceil(valueParse / 5) * 5);\n            case \"10\":\n                return (Math.ceil(valueParse / 10) * 10);\n            default:\n                return value;\n        }\n    }\n\n    let hash;\n\n    if (keyValue === '3_gender') {\n        hash = data.filter(a => (keyValue === '3_gender' && a[keyValue]) ? a : false)\n            .map(v => createMultiplicityValue(v[keyValue]))\n    } else {\n        hash = data.map(v => createMultiplicityValue(v[keyValue]))\n    }\n\n    const obj = {};\n\n    hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n    const res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n        .sort((a, b) => b[1] - a[1]);\n\n    const labels = res.map(i => i[0][keyValue])\n    const dataValues = res.map(i => i[1])\n\n    return {\n        type: 'doughnut',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ]\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            plugins: {\n                height: 400,\n                datalabels: {\n                    backgroundColor: function (context) {\n                        return context.dataset.backgroundColor;\n                    },\n                    borderColor: 'white',\n                    borderRadius: 25,\n                    borderWidth: 2,\n                    color: 'white',\n                    display: function (context) {\n                        var dataset = context.dataset;\n                        var count = dataset.data.length;\n                        var value = dataset.data[context.dataIndex];\n                        return value > count * 1.5;\n                    },\n                    formatter: function (value, ctx) {\n                        let sum = ctx.dataset.data.reduce((previousValue, currentValue) => previousValue + currentValue);\n                        // return `${(value * 100 / sum).toFixed(2) + \"%\"} \\n(${value})`;\n                        return `${(value * 100 / sum).toFixed(2) + \"%\"}`;\n                    },\n                    font: {\n                        weight: 'bold'\n                    },\n                    padding: 6,\n                },\n                legend: {\n                    position: 'left',\n                },\n            },\n\n            // Core options\n            aspectRatio: 6 / 2,\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst PieDiagram = ({ data, title, keyValue }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [multiplicity, setMultiplicity] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '5_first_sex':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetMultiplicity = (e) => {\n        setMultiplicity(e.target.value);\n    };\n\n    const updateDataset = useCallback(() => {\n        chartInstance.data = createData(data, keyValue, multiplicity).data\n        chartInstance.update();\n    });\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, multiplicity));\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer, chartInstance, data, keyValue, multiplicity]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n    }, [data, autoUpdate, multiplicity, chartInstance, updateDataset])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n\n            {showSelectorWithRounding() && <Radio.Group value={multiplicity} onChange={handleSetMultiplicity}>\n                <Radio.Button value=\"0\">Без группировки</Radio.Button>\n                <Radio.Button value=\"5\">+ до кратн. 5</Radio.Button>\n                <Radio.Button value=\"10\">+ до кратн. 10</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n        </div>\n    );\n};\n\nexport default PieDiagram;\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/diagrams`;\n\nconst findDiagram = (type = {}) => {\n    return axios.post(API_URL, type, { headers: authHeader() });\n};\n\nexport default {\n    findDiagram\n};\n","import DiagramService from \"../../services/diagram.service\";\nimport { DIAGRAM_FAIL, DIAGRAM_SUCCESS, SET_MESSAGE } from \"./types\";\n\nexport const findDiagram = (filters) => (dispatch) => {\n    return DiagramService.findDiagram(filters).then(\n        (response) => {\n            dispatch({\n                type: DIAGRAM_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: DIAGRAM_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__38MaE\",\"tabs\":\"styles_tabs__1iaNG\",\"ant-tabs-tab\":\"styles_ant-tabs-tab__1fvBs\",\"ant-tabs-tab-active\":\"styles_ant-tabs-tab-active__2Yg96\",\"ant-tabs-tab-btn\":\"styles_ant-tabs-tab-btn__1Owmp\",\"image\":\"styles_image__2gr_S\",\"titleContainer\":\"styles_titleContainer__x5hAm\",\"required\":\"styles_required__3hjvh\",\"line\":\"styles_line__5_JyL\",\"h1\":\"styles_h1__UJ0BG\",\"resetForm\":\"styles_resetForm__kMHmu\",\"reset\":\"styles_reset__wY4zH\",\"code\":\"styles_code__3q6xo\"};","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { ADMIN, MODERATOR, USER } from \"../constants/roles.constants\";\nimport { setRole } from \"../redux/thunks/user.thunks\";\nimport UserService from \"../services/user.service\";\n\nexport default function useAuth(WrappedComponent, role) {\n    class Authenticate extends React.Component {\n\n        getUser = () => JSON.parse(localStorage.getItem('user'));\n\n        componentDidMount() {\n            switch (role) {\n                case ADMIN:\n                    return UserService.getAdminBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: ADMIN\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case MODERATOR:\n                    return UserService.getModeratorBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: MODERATOR\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case USER:\n                    return UserService.getUserBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: USER\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                default:\n                    this.props.setRole({\n                        isAuthenticated: false,\n                        role: 'Role not found'\n                    })\n            }\n        }\n\n        render() {\n            return (\n                this.props.isAuthenticated !== null\n                    ? this.props.isAuthenticated === true\n                        ? <WrappedComponent {...this.props} />\n                        : <Redirect to={'/login'}/>\n                    : null\n            );\n        }\n    }\n\n    const mapState = state => ({\n        isAuthenticated: state.user.isAuthenticated,\n        role: state.user.role\n    })\n\n    const mapDuspatch = dispatch => ({\n        setRole: e => dispatch(setRole(e))\n    })\n\n    return connect(mapState, mapDuspatch)(Authenticate)\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__9d07N\",\"date\":\"styles_date__1yhy7\",\"tabs\":\"styles_tabs__lNWuO\",\"ant-tabs-tab\":\"styles_ant-tabs-tab__2uYQt\",\"ant-tabs-tab-active\":\"styles_ant-tabs-tab-active__Cc53Z\",\"ant-tabs-tab-btn\":\"styles_ant-tabs-tab-btn__3GJeA\",\"image\":\"styles_image__2x5yF\",\"titleContainer\":\"styles_titleContainer__3ZU8J\",\"required\":\"styles_required__37UhC\",\"line\":\"styles_line__1snE4\",\"h1\":\"styles_h1__35tR-\",\"resetForm\":\"styles_resetForm__2yc9A\",\"reset\":\"styles_reset__29zbp\",\"code\":\"styles_code__1tfyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__oxraU\",\"date\":\"styles_date__8TRNI\",\"tabs\":\"styles_tabs__1p6Vl\",\"ant-tabs-tab\":\"styles_ant-tabs-tab__1m2jT\",\"ant-tabs-tab-active\":\"styles_ant-tabs-tab-active__kMd9E\",\"ant-tabs-tab-btn\":\"styles_ant-tabs-tab-btn__3FNVa\",\"image\":\"styles_image__2HnJI\",\"titleContainer\":\"styles_titleContainer__2jfJq\",\"required\":\"styles_required__36CNn\",\"line\":\"styles_line__140I_\",\"h1\":\"styles_h1__1LZuO\",\"resetForm\":\"styles_resetForm__hGxYc\",\"reset\":\"styles_reset__DkiVy\",\"code\":\"styles_code__3LOcy\"};","import { createSlice } from '@reduxjs/toolkit'\nimport moment from \"moment\";\n\nconst APP_REDUCER_NAME = 'filter-hotline'\n\nconst initialState = {\n    rangePeriod: [\n        moment().subtract(30,'d'),\n        moment()\n    ],\n    city: null,\n    reason: null,\n    result: null,\n}\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: initialState,\n    reducers: {\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        setReason(state, action) {\n            state.reason = action.payload\n        },\n        setResult(state, action) {\n            state.result = action.payload\n        },\n        resetFilterState(state) {\n            state.findByCode = null\n        }\n    }\n})\n\nexport const {\n    setRangePeriod,\n    setTestingCity,\n    setReason,\n    setResult,\n    resetFilterState\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3BziL\",\"pie\":\"styles_pie__2SD_O\",\"title\":\"styles_title___y4nr\"};","import { createSlice } from '@reduxjs/toolkit'\nimport moment from \"moment\";\n\nconst APP_REDUCER_NAME = 'filter-drugs'\n\nconst initialState = {\n    city: null,\n    type: null,\n    rangePeriod: [\n        moment().subtract(30,'d'),\n        moment()\n    ],\n}\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: initialState,\n    reducers: {\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        setTestingType(state, action) {\n            state.type = action.payload\n        },\n        resetFilterState(state) {\n            state.findByCode = null\n        }\n    }\n})\n\nexport const {\n    setRangePeriod,\n    setTestingCity,\n    setTestingType,\n    resetFilterState\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1SXCy\",\"tabs\":\"styles_tabs__1-Zmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__jZ6X4\",\"tabs\":\"styles_tabs__2Mm4v\",\"statisticsCounts\":\"styles_statisticsCounts__34Ot6\"};","import axios from 'axios';\nimport authHeader from './auth-header';\nimport baseUrl from '../baseurl';\n\nconst host = baseUrl()\n\nconst API_URL = `${host}/api/test/`;\n\nclass UserService {\n    getPublicContent() {\n        return axios.get(API_URL + 'all');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL + 'user', {headers: authHeader()});\n    }\n\n    getModeratorBoard() {\n        return axios.get(API_URL + 'mod', {headers: authHeader()})\n            .catch(() => {\n                return axios.get(API_URL + 'admin', {headers: authHeader()});\n            });\n    }\n\n    getAdminBoard() {\n        return axios.get(API_URL + 'admin', {headers: authHeader()});\n    }\n}\n\nexport default new UserService();\n","import { createSlice } from '@reduxjs/toolkit'\nimport moment from \"moment\";\n\nconst APP_REDUCER_NAME = 'filter-groups-hiv'\n\nconst initialState = {\n    city: null,\n    rangePeriod: [\n        moment().subtract(30,'d'),\n        moment()\n    ],\n}\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: initialState,\n    reducers: {\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        resetFilterState(state) {\n            state.findByCode = null\n        }\n    }\n})\n\nexport const {\n    setRangePeriod,\n    setTestingCity,\n    resetFilterState\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport moment from \"moment\";\n\nconst APP_REDUCER_NAME = 'filter-groups-tg'\n\nconst initialState = {\n    city: null,\n    rangePeriod: [\n        moment().subtract(30,'d'),\n        moment()\n    ],\n}\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: initialState,\n    reducers: {\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        resetFilterState(state) {\n            state.findByCode = null\n        }\n    }\n})\n\nexport const {\n    setRangePeriod,\n    setTestingCity,\n    resetFilterState\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","import React from 'react';\nimport { Result, Button } from 'antd';\nimport { useHistory } from \"react-router-dom\";\n\nexport const Success = (props) => {\n    console.log('props successful', props.data)\n    const history = useHistory();\n\n    const goToForms = () => {\n        history.push(\"/forms\")\n    }\n\n    return (\n        <Result\n            status=\"success\"\n            title={`Тестирование завершено`}\n            subTitle={`Код опроса ${props.data.data.data.id}. Код клиента ${props.data.data.data[\"1_code\"]}`}\n            extra={[\n                <Button type=\"primary\" key=\"buy\" onClick={props.reload}>Начать новый опрос</Button>,\n            ]}\n        />\n    )\n}","import React from 'react';\nimport { Result, Button } from 'antd';\nimport { useHistory } from \"react-router-dom\";\n\nexport const Success = (props) => {\n    console.log('props successful', props.data)\n    const history = useHistory();\n\n    const goToForms = () => {\n        history.push(\"/forms\")\n    }\n\n    return (\n        <Result\n            status=\"success\"\n            title={`Группа поддержки сохранена`}\n            subTitle={`Код обращения ${props.data.data.data.id}.`}\n            extra={[\n                <Button type=\"primary\" key=\"buy\" onClick={props.reload}>Добавить новое</Button>,\n            ]}\n        />\n    )\n}","import {createSlice} from '@reduxjs/toolkit'\n\nconst TODOS_REDUCER_NAME = 'user'\n\nconst userSlice = createSlice({\n    name: TODOS_REDUCER_NAME,\n    initialState: {\n        userData: null,\n        isAuthenticated: null,\n        role: null\n    },\n    reducers: {\n        fetchRole(state, action) {\n            state.userData = action.payload.userData\n            state.isAuthenticated = action.payload.isAuthenticated\n            state.role = action.payload.role\n        },\n    }\n})\n\nexport const {\n    fetchRole,\n} = userSlice.actions\n\nexport default userSlice.reducer\n","import React from 'react';\nimport classes from './styles.module.scss'\n\nconst Header = props => {\n    return (\n        <div className={classes.Header}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Default = props => {\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default Default;\n","module.exports = __webpack_public_path__ + \"static/media/image.428ac869.jpeg\";","import React from 'react';\nimport { ConfigProvider, DatePicker, Checkbox, Select, Input, Switch, Tooltip } from 'antd';\nimport 'moment/locale/ru';\nimport locale from 'antd/lib/locale/ru_RU';\nimport { connect } from \"react-redux\";\nimport {\n    setSearchOfCode,\n    setRangePeriod, setTestingCity,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked,\n    setFormType,\n    setAge,\n    setSearchType\n} from \"../../redux/reducers/filter.reducer\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY';\n\nconst Filters = ({\n                     sexWorked,\n                     usedPrep,\n                     usedDrugs,\n                     periodType,\n                     formType,\n                     setFormType,\n                     setAge,\n                     setSearchType,\n                     setDrugUsed,\n                     setPrepUsed,\n                     setSexWorked,\n                     setRangePeriod,\n                     setCity,\n                     setSearchOfCode,\n                     rangePeriod,\n                 }) => {\n\n    const onChangeDrugUsed = () => {\n        setDrugUsed(!usedDrugs)\n    }\n    const onChangePrepUsed = () => {\n        setPrepUsed(!usedPrep)\n    }\n    const onChangeSexWorked = () => {\n        setSexWorked(!sexWorked)\n    }\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    const onChangeFormType = (type) => {\n        setFormType(type)\n    }\n\n    const onChangeSearchType = (type) => {\n        setSearchType(type)\n    }\n\n    const onChangeAge = (age) => {\n        setAge(age)\n    }\n\n    const onSearchOfCode = (value) => {\n        setSearchOfCode(value)\n    }\n\n    return (\n        <div className={styles.filters}>\n            <div className={styles.firstLine}>\n\n                <Select\n                    style={{ width: 150 }}\n                    placeholder=\"Фильтр по филиалу\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все филиалы</Option>\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"nn\">Н. Новгород</Option>\n                    <Option value=\"spb\">С. Петербург</Option>\n                </Select>\n\n                {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                    <RangePicker defaultValue={rangePeriod}\n                         onChange={onChangeRangePeriod} format={dateFormat} />\n                </ConfigProvider>}\n\n                <div className={styles.groups}>\n                    <Checkbox onChange={onChangeDrugUsed}>MSM used drugs</Checkbox>\n                    <Checkbox onChange={onChangePrepUsed}>Used PrEP</Checkbox>\n                    <Checkbox onChange={onChangeSexWorked}>Sex workers (both ways)</Checkbox>\n                </div>\n\n            </div>\n\n            <div className={styles.secondLine}>\n\n                <Select\n                    style={{ width: 150 }}\n                    placeholder=\"Тип опроса\"\n                    defaultValue={formType ? formType : \"\"}\n                    onChange={onChangeFormType}\n                >\n                    <Option value=\"\">Все типы</Option>\n                    <Option value=\"MSM\">МСМ</Option>\n                    <Option value=\"PWID\">ПИН</Option>\n                    <Option value=\"short\">Общая</Option>\n                </Select>\n\n                <Select\n                    mode=\"multiple\"\n                    style={{ width: 267 }}\n                    placeholder=\"Возраст\"\n                    onChange={onChangeAge}\n                >\n                    <Option value=\"18-19 лет\">18-19 лет</Option>\n                    <Option value=\"20-29 лет\">20-29 лет</Option>\n                    <Option value=\"30-39 лет\">30-39 лет</Option>\n                    <Option value=\"40-49 лет\">40-49 лет</Option>\n                    <Option value=\"50 и старше\">50 и старше</Option>\n                </Select>\n\n                <div className={styles.groupsSearch}>\n                    <span>&nbsp;</span>\n                    <Tooltip placement=\"topLeft\" title=\"Множественный поиск анкет клиента или одной анкеты по ID\">\n                        <Switch\n                            onChange={onChangeSearchType}\n                            defaultChecked checkedChildren=\"Клиент\" unCheckedChildren=\"Анкета\"/>\n                    </Tooltip>\n                    <span>&nbsp;</span>\n                    <Search\n                        placeholder=\"Код клиента или № анкеты\" onSearch={onSearchOfCode} allowClear\n                        style={{ width: 280 }}\n                        enterButton\n                    />\n\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    periodType: state.filter.periodType,\n    usedDrugs: state.filter.usedDrugs,\n    sexWorked: state.filter.sexWorked,\n    usedPrep: state.filter.usedPrep,\n    formType: state.filter.formType,\n    rangePeriod: state.filter.rangePeriod\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setDrugUsed: (used) => dispatch(setTestingDrugUsed(used)),\n    setPrepUsed: (used) => dispatch(setTestingPrepUsed(used)),\n    setSexWorked: (used) => dispatch(setTestingSexWorked(used)),\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n    setSearchOfCode: (code) => dispatch(setSearchOfCode(code)),\n    setFormType: (type) => dispatch(setFormType(type)),\n    setAge: (age) => dispatch(setAge(age)),\n    setSearchType: (type) => dispatch(setSearchType(type)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\n","import { DownloadOutlined } from '@ant-design/icons';\nimport { Button, Collapse, PageHeader, Table, Tabs } from 'antd';\nimport { Excel } from 'antd-table-saveas-excel';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findTesting } from \"../../../redux/thunks/forms\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport Filters from \"../../filters/filters\";\nimport styles from './styles.module.scss'\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst TestingReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filter);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('YYYY-MM-DD HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('YYYY-MM-DD HH:mm:ss').toString(),\n        usedDrugs: selectorFiltersTesting.usedDrugs,\n        usedPrep: selectorFiltersTesting.usedPrep,\n        sexWorked: selectorFiltersTesting.sexWorked,\n        city: selectorFiltersTesting.city,\n        searchByCode: selectorFiltersTesting.searchOfCode,\n        formType: selectorFiltersTesting.formType,\n        age: selectorFiltersTesting.age,\n        searchType: selectorFiltersTesting.searchType,\n    }\n\n    useEffect(() => {\n        dispatch(findTesting(filters)).then((data) => {\n            setTesting(data.data.sort((a, b) => b.id - a.id))\n        })\n\n        dispatch(findDiagram({ type: \"testing\" })).then((data) => {\n            setColumnsForm([{\n                code: \"id\",\n                title: \"ID анкеты\",\n                width: 100,\n                fixed: 'left',\n            }, ...data.data,])\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: column.width ? column.width : 400,\n        fixed: column.fixed ? column.fixed : undefined,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Опрос тестируемых\"\n                subTitle={testing?.length &&\n                <>\n                    <span>с учётом фильтров: <b>{testing?.length}</b>&nbsp;&nbsp;</span>\n                    <Button\n                        type=\"dashed\" shape=\"round\" icon={<DownloadOutlined/>}\n                        onClick={() => {\n                            const today = new Date()\n                            const excel = new Excel();\n                            excel\n                                .addSheet('Опрос тестируемых')\n                                .addColumns(columns)\n                                .addDataSource(testing)\n                                .saveAs(`Опрос тестируемых ${today}.xlsx`);\n                        }}>Скачать Excel</Button>\n                </>\n                }\n            />\n\n            <Filters/>\n\n            {testing?.length && <div className={styles.statisticsCounts}>\n                <div>\n                    <span>Всего</span>\n                    <b>{testing?.length}</b>\n                </div>\n                <div>\n                    <span>ВИЧ +</span>\n                    <b>{testing.filter(test=> test[\"36_hiv_test_result\"] === \"Положительный\").length}</b>\n                </div>\n                 <div>\n                     <span>Гепатит +</span>\n                     <b>{testing.filter(test=> test[\"37_hepatitis_test_result\"] === \"Положительный\").length}</b>\n                 </div>\n                <div>\n                    <span>Сифилис +</span>\n                    <b>{testing.filter(test=> test[\"38_syphilis_test_result\"] === \"Положительный\").length}</b>\n                </div>\n\n            </div>}\n\n            <Tabs className={styles.tabs} defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                                    <Table dataSource={\n                                        comments} columns={[\n                                        {\n                                            title: 'Комментарий консультанта',\n                                            dataIndex: '45_consultant_comment',\n                                            key: '45_consultant_comment',\n                                        },\n                                        {\n                                            title: 'Консультант',\n                                            dataIndex: '42_consultant',\n                                            key: '42_consultant',\n                                        },\n                                        {\n                                            title: 'Дата',\n                                            dataIndex: '43_date',\n                                            key: '43_date',\n                                        }\n                                    ]}/>\n                                </Panel>\n                            </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default TestingReport;\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport test from './test.jpeg'\nimport hotLine from './hot-line.jpg'\nimport groupsHiv from './groups-hiv.jpeg'\nimport pharmacy from './pharmacy.jpeg'\nimport tg from './tg.png'\nimport styles from './slyles.module.scss'\n\nconst AllForms = () => {\n    console.log('test', )\n    return (\n        <div className={styles[\"all-forms\"]}>\n            <br/>\n            <h4>Формы и опросы</h4>\n\n            <NavLink to=\"/testing\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    <div className={styles.image} style={{backgroundImage: `url(${test})`}}/>\n                    <p className={styles.title}>Опрос тестируемых «СПИД.ЦЕНТР»</p>\n                </div>\n            </NavLink>\n\n            <NavLink to=\"/hotline\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    <div className={styles.image} style={{backgroundImage: `url(${hotLine})`}}/>\n                    <p className={styles.title}>Горячая линия «СПИД.ЦЕНТР»</p>\n                </div>\n            </NavLink>\n\n            <NavLink to=\"/groups-hiv\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    <div className={styles.image} style={{backgroundImage: `url(${groupsHiv})`}}/>\n                    <p className={styles.title}>Группы поддержки ВИЧ+</p>\n                </div>\n            </NavLink>\n\n            <NavLink to=\"/groups-tg\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    <div className={styles.image} style={{backgroundImage: `url(${tg})`}}/>\n                    <p className={styles.title}>Группы поддержки Транс-персон</p>\n                </div>\n            </NavLink>\n\n            <NavLink to=\"/drugs\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    <div className={styles.image} style={{backgroundImage: `url(${pharmacy})`}}/>\n                    <p className={styles.title}>Аптека</p>\n                </div>\n            </NavLink>\n\n        </div>\n    );\n};\n\nexport default AllForms;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__3xnWR\",\"tabs\":\"styles_tabs__aHGSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1ipvv\",\"tabs\":\"styles_tabs__36oMr\"};","import axios from \"axios\";\nimport authHeader from \"../../services/auth-header\";\nimport { API_PATIENTS } from \"../../constants/api.constants\";\n\nexport const getPatients = async (name) => {\n  return axios\n    .get(API_PATIENTS, { params: { name }, headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const getPatient = async (id) => {\n  return axios\n    .get(`${API_PATIENTS}/${id}`, { headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const postPatients = async (payload) => {\n  return axios\n    .post(API_PATIENTS, payload, { headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const postPatient = async (id, payload) => {\n  return axios\n    .post(`${API_PATIENTS}/${id}`, payload, { headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const deletePatient = async (id) => {\n  return axios\n    .delete(`${API_PATIENTS}/${id}`, { headers: authHeader() })\n    .then((response) => response);\n};\n","import axios from \"axios\";\nimport authHeader from \"../../services/auth-header\";\nimport { API_PATIENT_VISITS } from \"../../constants/api.constants\";\n\nexport const getPatientVisits = async (params = {}) => {\n  return axios\n    .get(API_PATIENT_VISITS, { params, headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const getPatientVisit = async (id) => {\n  return axios\n    .get(`${API_PATIENT_VISITS}/${id}`, { headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const postPatientVisits = async (payload) => {\n  return axios\n    .post(API_PATIENT_VISITS, payload, { headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const postPatientVisit = async (id, payload) => {\n  return axios\n    .post(`${API_PATIENT_VISITS}/${id}`, payload, { headers: authHeader() })\n    .then((response) => response);\n};\n","import React, { useRef, useMemo } from \"react\";\nimport { Select, Spin } from \"antd\";\nimport debounce from \"lodash/debounce\";\n\nexport const DebounceSelect = ({\n  fetchOptions,\n  debounceTimeout = 800,\n  ...props\n}) => {\n  const [fetching, setFetching] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const fetchRef = useRef(0);\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        if (fetchId !== fetchRef.current) {\n          // for fetch callback order\n          return;\n        }\n\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n  return (\n    <Select\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n      {...props}\n      options={options}\n    />\n  );\n}; // Usage of DebounceSelect\n","import React from \"react\";\nimport { MaskedInput } from \"antd-mask-input\";\n\nexport const CodeInput = (props) => {\n  return (\n    <MaskedInput\n      mask=\"W/WW/WW/WW.WW.WWWW\"\n      placeholder=\"П/ИИ/ММ/ДД.ДД.ДДДД\"\n      isRevealingMask={true}\n      size=\"18\"\n      {...props}\n      formatCharacters={{\n        W: {\n          validate() {\n            return true;\n          },\n          transform(char) {\n            return char.toUpperCase();\n          },\n        },\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nexport const StatusTag = (props) => {\n  const { status } = props;\n  switch (status) {\n    case 0:\n      return <Tag color=\"cyan\">Новый</Tag>;\n    case 1:\n      return <Tag color=\"magenta\">Назначен</Tag>;\n    case 2:\n      return <Tag color=\"green\">Заполнен</Tag>;\n    default:\n      return <></>;\n  }\n};\n","import React from \"react\";\nimport { Form, Input, Button, Radio, Card } from \"antd\";\nimport { CodeInput } from \"../shared\";\n\nexport const PatientForm = (props) => {\n  const { profile, onUpdate } = props;\n\n  const onFinish = (profile) => {\n    onUpdate(profile);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const medicalFrequency = [\"ежедневный\", \"ситуативный\", \"смешанный\"];\n  const initialValues = profile;\n\n  return (\n    <Form\n      name=\"basic\"\n      layout=\"vertical\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      initialValues={profile ? initialValues : {}}\n      autoComplete=\"off\"\n    >\n      <Card>\n        <Form.Item\n          label=\"Уникальный код\"\n          name=\"code\"\n          rules={[\n            {\n              required: true,\n              message: \"Укажите код\",\n            },\n          ]}\n        >\n          <CodeInput />\n        </Form.Item>\n      </Card>\n      <Card>\n        <Form.Item\n          label=\"Контакт\"\n          name=\"contact\"\n          rules={[\n            {\n              required: true,\n              message: \"Укажите Контакт\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Card>\n      <Card>\n        <Form.Item label=\"Режим приема\" name=\"medicalFrequency\">\n          <Radio.Group>\n            {medicalFrequency.map((answer, index) => (\n              <Radio\n                value={answer}\n                key={index}\n                style={{ display: \"block\", marginLeft: 0 }}\n              >\n                {answer}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </Form.Item>\n      </Card>\n      <Card>\n        <Form.Item label=\"Комментарий\" name=\"comment\">\n          <Input.TextArea rows={4} />\n        </Form.Item>\n      </Card>\n      <Card>\n        <Form.Item label=\"Частота секса\" name=\"sexFrequency\">\n          <Input.TextArea rows={4} />\n        </Form.Item>\n      </Card>\n      <Card>\n        <Form.Item label=\"Использование презерватива\" name=\"condomUse\">\n          <Input.TextArea rows={4} />\n        </Form.Item>\n      </Card>\n      <Card>\n        <Form.Item label=\"Химсекс\" name=\"chemsex\">\n          <Input.TextArea rows={4} />\n        </Form.Item>\n      </Card>\n      <Card>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            {profile ? \"Сохранить\" : \"Добавить пациента\"}\n          </Button>\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table, Tag } from \"antd\";\nimport { StatusTag } from \"../shared\";\n\nconst columns = [\n  {\n    title: \"Код\",\n    dataIndex: \"code\",\n    key: \"code\",\n  },\n  {\n    title: \"Визит\",\n    dataIndex: \"visitName\",\n    key: \"visitName\",\n  },\n  {\n    title: \"Дата\",\n    dataIndex: \"date\",\n    key: \"date\",\n    render: (date) => date,\n  },\n  {\n    title: \"Статус\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: (status) => <StatusTag status={status}/>,\n  },\n  {\n    title: \"\",\n    dataIndex: \"id\",\n    render: (id) => <Link to={`/visits/history/${id}`}>Редактировать</Link>,\n  },\n];\n\nconst dataMap = (info) => ({\n  id: info.id,\n  code: info.patient.code,\n  visitName: `${info.visit.num} (${info.visit.comment})`,\n  status: info.status,\n  date: info.date,\n});\n\nexport const PatientVisitsTable = (props) => {\n  const { patientVisits, pagination } = props;\n  const dataSource = patientVisits.map(dataMap);\n  return (\n    <Table\n      pagination={pagination}\n      size=\"small\"\n      columns={columns}\n      dataSource={dataSource}\n    />\n  );\n};\n","import { notification } from \"antd\";\n\nexport const useNotification = () => {\n  const openNotification = (message) => {\n    notification.open({\n      description: message,\n    });\n  };\n\n  return { openNotification };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { PageHeader, Typography } from \"antd\";\nimport { useParams } from \"react-router\";\nimport { getPatient, postPatient } from \"../redux/thunks/patients.thunks\";\nimport { getPatientVisits } from \"../redux/thunks/patient_visits.thunk\";\nimport { PatientForm } from \"./PatientForm\";\nimport { PatientVisitsTable } from \"./PatientVisitsTable\";\nimport { useNotification } from \"../hooks\";\n\nexport const PatientPage = () => {\n  const { id } = useParams();\n  const [patient, setPatient] = useState();\n  const [patientVisits, setPatientVisits] = useState([]);\n  const { openNotification } = useNotification();\n\n  useEffect(() => {\n    getPatient(id).then((res) => {\n      setPatient(res.data);\n    });\n    getPatientVisits().then((res) => {\n      setPatientVisits(res.data.filter((info) => info.patientId === +id));\n    });\n  }, [id]);\n\n  const updateProfile = (profile) => {\n    postPatient(id, profile)\n      .then(() => {\n        openNotification(\"Профиль успешно сохранен\");\n      })\n      .catch(() => {\n        openNotification(\"При сохранении произошла ошибка\");\n      });\n  };\n\n  if (patient) {\n    return (\n      <>\n        <PageHeader title={`Пациент: ${patient.code}`} />\n\n        <PatientForm profile={patient} onUpdate={updateProfile} />\n\n        <br />\n        <Typography.Title level={3}>Визиты</Typography.Title>\n        <PatientVisitsTable patientVisits={patientVisits} pagination={false} />\n      </>\n    );\n  }\n\n  return <></>;\n};\n","import React, { useState } from \"react\";\nimport { Table } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { StatusTag } from \"../shared\";\nimport { Button } from \"antd\";\n\nconst columns = [\n  {\n    title: \"Уникальный код\",\n    dataIndex: \"code\",\n    key: 1,\n  },\n  {\n    title: \"1 (Старт)\",\n    dataIndex: \"visit1\",\n    key: 2,\n    render: (status) => <StatusTag status={status} />,\n  },\n  {\n    title: \"2 (1 мес)\",\n    dataIndex: \"visit2\",\n    key: 3,\n    render: (status) => <StatusTag status={status} />,\n  },\n  {\n    title: \"3 (3 мес)\",\n    dataIndex: \"visit3\",\n    key: 4,\n    render: (status) => <StatusTag status={status} />,\n  },\n  {\n    title: \"4 (6 мес)\",\n    dataIndex: \"visit4\",\n    key: 5,\n    render: (status) => <StatusTag status={status} />,\n  },\n  {\n    title: \"5 (9 мес)\",\n    dataIndex: \"visit5\",\n    key: 6,\n    render: (status) => <StatusTag status={status} />,\n  },\n  {\n    title: \"6 (12 мес)\",\n    dataIndex: \"visit6\",\n    key: 7,\n    render: (status) => <StatusTag status={status} />,\n  },\n  {\n    title: \"\",\n    dataIndex: \"id\",\n    key: 8,\n    render: (id, record) => <Link to={`/visits/patients/${id}`}>Профиль</Link>,\n  },\n];\n\nexport const PatientsTable = (props) => {\n  const { patients, onDelete } = props;\n  const dataSource = patients.map((patient) => {\n    const { patient_visits } = patient;\n    const visit1 = patient_visits.find((visit) => visit.visitId === 1);\n    const visit2 = patient_visits.find((visit) => visit.visitId === 2);\n    const visit3 = patient_visits.find((visit) => visit.visitId === 3);\n    const visit4 = patient_visits.find((visit) => visit.visitId === 4);\n    const visit5 = patient_visits.find((visit) => visit.visitId === 5);\n    const visit6 = patient_visits.find((visit) => visit.visitId === 6);\n    return {\n      key: patient.id,\n      ...patient,\n      ...(visit1 && { visit1: visit1.status }),\n      ...(visit2 && { visit2: visit2.status }),\n      ...(visit3 && { visit3: visit3.status }),\n      ...(visit4 && { visit4: visit4.status }),\n      ...(visit5 && { visit5: visit5.status }),\n      ...(visit6 && { visit6: visit6.status }),\n    };\n  });\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const hasSelected = selectedRowKeys.length > 0;\n  const rowSelection = {\n    type: \"checkbox\",\n    selectedRowKeys,\n    onChange: (keys) => {\n      setSelectedRowKeys(keys);\n    },\n  };\n\n  const handleDelete = () => {\n    onDelete(selectedRowKeys);\n  };\n\n  return (\n    <>\n      <Table\n        pagination={true}\n        size=\"small\"\n        columns={columns}\n        dataSource={dataSource}\n        rowSelection={rowSelection}\n      />\n      <Button type=\"primary\" onClick={handleDelete} disabled={!hasSelected}>\n        Удалить\n      </Button>\n    </>\n  );\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { PageHeader, Tabs } from \"antd\";\nimport { useNotification } from \"../hooks\";\nimport {\n  getPatients,\n  postPatients,\n  deletePatient,\n} from \"../redux/thunks/patients.thunks\";\nimport { PatientForm } from \"./PatientForm\";\nimport { PatientsTable } from \"./PatientsTable\";\nimport { useHistory } from \"react-router\";\n\nexport const PatientsPage = () => {\n  const [patients, setPatients] = useState([]);\n  const { openNotification } = useNotification();\n  const history = useHistory();\n\n  const reload = useCallback(() => {\n    getPatients().then((res) => setPatients(res.data));\n  }, []);\n\n  useEffect(() => {\n    reload();\n  }, [reload]);\n\n  const createProfile = (profile) => {\n    postPatients(profile)\n      .then((res) => {\n        const { id } = res.data;\n        openNotification(\"Пациент успешно добавлен\");\n        reload();\n        history.push(`/visits/patients/${id}`);\n      })\n      .catch(() => {\n        openNotification(\"При добавлении произошла ошибка\");\n      });\n  };\n\n  const handleDelete = async (ids) => {\n    await Promise.all(\n      ids.map((id) => {\n        return deletePatient(id);\n      })\n    );\n    openNotification(`Пациенты удалены`);\n    reload();\n  };\n\n  return (\n    <>\n      <PageHeader title=\"Пациенты\" />\n\n      <Tabs defaultActiveKey=\"1\">\n        <Tabs.TabPane tab=\"Просмотр\" key=\"1\">\n          <PatientsTable patients={patients} onDelete={handleDelete} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Добавить\" key=\"2\">\n          <PatientForm onUpdate={createProfile} />\n        </Tabs.TabPane>\n      </Tabs>\n    </>\n  );\n};\n","import axios from \"axios\";\nimport authHeader from \"../../services/auth-header\";\nimport { API_QUESTIONS } from \"../../constants/api.constants\";\n\nexport const getQuestions = async () => {\n  return axios\n    .get(API_QUESTIONS, { headers: authHeader() })\n    .then((response) => response);\n};\n","import axios from \"axios\";\nimport authHeader from \"../../services/auth-header\";\nimport { API_VISITS } from \"../../constants/api.constants\";\n\nexport const getVisits = async () => {\n  return axios\n    .get(API_VISITS, { headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const getVisit = async (id) => {\n  return axios\n    .get(`${API_VISITS}/${id}`, { headers: authHeader() })\n    .then((response) => response);\n};\n\nexport const postVisits = async (payload) => {\n  return axios\n    .post(API_VISITS, payload, { headers: authHeader() })\n    .then((response) => response);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Radio, Checkbox, Card, Typography } from \"antd\";\nimport { findAllUsersForForms } from \"../redux/thunks/user.thunks\";\nimport { postPatientVisit } from \"../redux/thunks/patient_visits.thunk\";\nimport { useNotification } from \"../hooks\";\nimport { DatePicker } from \"antd\";\nimport { Select } from \"antd\";\nimport moment from \"moment\";\n\n// ToDo вынести это в БД\nconst questionsOptions = [\n  {\n    name: \"Откуда вы узнали о проекте по ДКП?\",\n    multiple: true,\n    other: true,\n    answers: [\n      \"Знакомые\",\n      \"Поисковые системы\",\n      \"Телеграм\",\n      \"Тестировался здесь ранее\",\n      \"Соцсети/сайт фонда\",\n      \"Хорнет\",\n      \"Аутрич в клубах\",\n      \"Экраны в клубах\",\n      \"Контекстная реклама\",\n      \"в Гугле\",\n      \"Видео-реклама в Инстаграм\",\n    ],\n  },\n  {\n    name: \"Ваш пол?\",\n    multiple: false,\n    answers: [\"Мужчина\", \"Трансгендерный мужчина\", \"Трансгендерная женщина\"],\n  },\n  {\n    name: \"Ваш возраст?\",\n    multiple: false,\n    answers: [\n      \"18-19 лет\",\n      \"20-29 лет\",\n      \"30-39 лет\",\n      \"40-49 лет\",\n      \"50 и старше\",\n    ],\n  },\n  {\n    name: \"Есть ли у вас постоянный/ постоянные сексуальный партнер?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Как часто вы занимались сексом в последние 6 месяцев, используя презерватив?\",\n    multiple: false,\n    answers: [\n      \"Всегда / почти всегда\",\n      \"В большинстве случаев\",\n      \"Примерно в половине случаев\",\n      \"В меньшинстве случаев\",\n      \"Никогда\",\n    ],\n  },\n  {\n    name: \"Используете ли вы презерватив при сексе с постоянным партнером?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Используете ли вы презерватив при сексе со случайными партнерами?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Вы пользовались презервативом во время последнего секса?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Используете ли вы презервативы при (возможны несколько вариантов)\",\n    multiple: true,\n    answers: [\n      \"Вагинальном сексе\",\n      \"Оральном сексе\",\n      \"Анальном сексе\",\n      \"Не использую\",\n    ],\n  },\n  {\n    name: \"Почему Вы не использовали презерватив со своим последним сексуальным партнером (возможны несколько вариантов)?\",\n    multiple: true,\n    answers: [\n      \"Я использовал его\",\n      \"У меня его не было\",\n      \"Я был в алкогольном/наркотическом опьянении\",\n      \"Они слишком дорогие\",\n      \"Партнер не хотел пользоваться презервативом\",\n      \"Мы были готовы зачать ребенка\",\n      \"Я не люблю пользоваться презервативами\",\n      \"Мне кажется, в этом не было необходимости\",\n      \"Я доверяю своему партнеру\",\n      \"Я просто не думал об этом\",\n      \"Я использую PrEP\",\n      \"партнер ВИЧ на терапии (Н=Н)\",\n    ],\n  },\n  {\n    name: \"У Вас сейчас есть презерватив с собой?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Используете ли вы наркотики для секса?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Каким образом вы употребляли наркотики?\",\n    multiple: false,\n    answers: [\"Не употреблял\", \"Интраназально\", \"Инъекционно\", \"То и другое\"],\n  },\n  {\n    name: \"Диагностировали у вас есть хронические формы гепатита? (если да, укажите форму: B, C, D, E)\",\n    multiple: false,\n    answers: [\"Нет\", \"Я не знаю об этой болезни\", \"B\", \"C\", \"D\", \"E\"],\n  },\n  {\n    name: \"Приходилось ли вам получать или давать деньги или наркотики в обмен на сексуальные услуги в последние 6 месяцев?\",\n    multiple: false,\n    answers: [\"Да, я давал\", \"Да, я получал\", \"И то и другое\", \"Нет\"],\n  },\n  {\n    name: \"С кем у вас были сексуальные контакты последние 6 месяцев?\",\n    multiple: true,\n    answers: [\"Мужчины\", \"Женщины\", \"Трансгендерные персоны\", \"Не было\"],\n  },\n  {\n    name: \"Вы употребляли наркотики в последние 6 месяцев (если да, то какие)?\",\n    multiple: true,\n    answers: [\n      \"Не употреблял\",\n      \"Мефедрон\",\n      \"Марихуана\",\n      \"Бутират\",\n      \"Кокаин\",\n      \"Героин\",\n      \"МДМА (экстази)\",\n      \"Амфетамин\",\n      \"Метамфетамин\",\n      \"LSD\",\n      \"Альфа-PVP\"\n    ],\n  },\n  {\n    name: \"За последние 6 месяцев у Вас были заболевания, передаваемые половым путем (гонорея, хламидия, микоплазма, сифилис)?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Обращались ли вы за медицинской консультацией по поводу ИППП в последние 6 месяцев?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Был ли у вас ранее диагностирован сифилис?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Вы когда-нибудь проходили тестирование на ВИЧ?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"Вы гражданин России?\",\n    multiple: false,\n    answers: [\"Да\", \"Нет\"],\n  },\n  {\n    name: \"У вас есть регистрация на территории региона проживания?\",\n    multiple: false,\n    answers: [\n      \"Постоянная регистрация\",\n      \"Временная регистрация\",\n      \"Нет регистрации\",\n    ],\n  },\n  {\n    name: \"Ваше образование?\",\n    multiple: false,\n    answers: [\n      \"Не получил базового среднего образования (не закончил 8-9 классы школы)\",\n      \"Неполное среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)\",\n      \"Общее среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)\",\n      \"Общее среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)\",\n      \"Среднее специальное (окончил техникум / колледж / колледж со средним специальным образованием)\",\n      \"Неполное высшее образование (закончил 2-4 года университета)\",\n      \"Высшее (получил диплом университета)\",\n      \"Академическая степень (кандидат наук, доктор наук)\",\n    ],\n  },\n  {\n    name: \"Какое из следующих определений лучше всего описывает характер вашей работы на данный момент?\",\n    multiple: false,\n    answers: [\n      \"Полная занятость\",\n      \"Частичная/неполная занятость\",\n      \"Полная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\",\n      \"Случайный заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\",\n      \"Безработный (ищу работу)\",\n      \"Я не работаю и не ищу работу\",\n    ],\n  },\n  {\n    name: \"Как часто вы проходите тестирование на ВИЧ?\",\n    multiple: false,\n    answers: [\n      \"Раз в 3 месяца\",\n      \"Раз в 6 месяцев\",\n      \"Раз в 12 месяцев\",\n      \"Менее одного раза в 12 месяцев\",\n      \"Первый раз\",\n    ],\n  },\n  {\n    name: \"Ваше семейное положение?\",\n    multiple: false,\n    answers: [\n      \"Никогда не был женат\",\n      \"Я живу вместе с партнером, но отношения не зарегистрированы\",\n      \"Женат/замужем\",\n      \"Женат/замужем, живу отдельно от партнера\",\n      \"В разводе живу отдельно от партнера\",\n      \"В разводе, но живу с партнером\",\n      \"Вдовец/вдова\",\n    ],\n  },\n  {\n    name: \"Мазок микоплазма genitalium (3 локализации)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендована консультация дерматовенеролога и последующее лечение)\",\n      \"Не предоставил\",\n    ],\n  },\n  {\n    name: \"Мазок хламидия (3 локализации)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендована консультация дерматовенеролога и последующее лечение)\",\n      \"Не предоставил\",\n    ],\n  },\n  {\n    name: \"Мазок гонорея (3 локализации)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендована консультация дерматовенеролога и последующее лечение)\",\n      \"Не предоставил\",\n    ],\n  },\n  {\n    name: \"Тест на сифилис (RPR кровь)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендована консультация дерматовенеролога и последующее лечение)\",\n      \"Не предоставил\",\n    ],\n  },\n  {\n    name: \"Результат биохимического анализа крови: креатинин\",\n    multiple: false,\n    answers: [\n      \"Норма\",\n      \"Отклонение (проведена консультация с врачом)\",\n      \"Не предоставил\",\n    ],\n  },\n  {\n    name: \"Результат теста на Hbs Ag (наличие гепатита В)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендован только постоянный прием)\",\n      \"Не предоставил\",\n    ],\n  },\n  {\n    name: \"Результат теста на гепатит С (anti-HCV)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендована консультация инфекциониста и последующее лечение)\",\n      \"Не предоставил\",\n    ],\n  },\n  {\n    name: \"Результат теста на гепатит С (экспресс-тест в случае непредоставления лабораторного)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендована консультация инфекциониста и последующее лечение)\",\n    ],\n  },\n  {\n    name: \"Результат теста на сифилис (экспресс-тест в случае непредоставления лабораторного)\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно (рекомендована консультация дерматовенеролога и последующее лечение)\",\n    ],\n  },\n  {\n    name: \"Получен неанонимный лабораторный результат ИФА ВИЧ 4 поколения\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно – включение в программу отказано, проведена консультация по лечению\",\n    ],\n  },\n  {\n    name: \"Информированное согласие подписано\",\n    multiple: true,\n    answers: [\"Да\"],\n  },\n  {\n    name: \"Отсутствие симптомов острой ВИЧ-инфекции (гриппоподобный синдром, лимфоаденопатия)\",\n    multiple: true,\n    answers: [\"Да\"],\n  },\n  {\n    name: \"Проведена консультация по правилам приема ДКП?\",\n    multiple: true,\n    answers: [\"Да\"],\n  },\n  {\n    name: \"Выдана ДКП на срок:\",\n    multiple: true,\n    other: true,\n    answers: [\"1 месяц\"],\n    answers2: [\"2 месяца\"],\n  },\n  {\n    name: \"Проведена консультация по вакцинации: Гепатит А, гепатит B, ВПЧ по календарю\",\n    multiple: true,\n    answers: [\"Да\"],\n  },\n  {\n    name: \"Использовали ли вы ранее ДКП?\",\n    multiple: false,\n    answers: [\"Нет\", \"Да, постоянный прием\", \"Да, по требованию\"],\n  },\n  {\n    name: \"Режим приема ДКП:\",\n    multiple: false,\n    answers: [\"Постоянный\", \"По требованию (2-1-1)\", \"Смешанный\"],\n  },\n  {\n    name: \"Готовы ли вы рассказать о своем опыте использования ДКП публично/в соцсетях?\",\n    multiple: false,\n    answers: [\"Не готов\", \"Готов открыто\", \"Готов анонимно\"],\n  },\n  {\n    name: \"Продолжена ДКП?\",\n    multiple: false,\n    answers: [\"Клиент продолжил ДКП\", \"Клиент отказался от продолжения ДКП\"],\n  },\n  {\n    name: \"Причины отказа от ДКП (необязательный вопрос):\",\n    multiple: true,\n    other: true,\n    answers: [\n      \"Нет необходимости\",\n      \"Опасается побочных эффектов\",\n      \"Беспокоится о том, что могут подумать другие\",\n      \"Беспокоится о том времени, которое необходимо для последующего наблюдения на базе фонде\",\n      \"Беспокоится о безопасности препарата\",\n      \"Беспокоится об эффективности препарата\",\n    ],\n  },\n  {\n    name: \"Экспресс-тест ВИЧ\",\n    multiple: false,\n    answers: [\n      \"Отрицательно\",\n      \"Положительно – исключение из программы, маршрутизация для лечения\",\n    ],\n  },\n  {\n    name: \"Насколько вы удовлетворены текущими препаратами для профилактики ВИЧ?\",\n    multiple: false,\n    answers: [\"-3\", \"-2\", \"-1\", \"0\", \"1\", \"2\", \"3\"],\n  },\n  {\n    name: \"Испытывали ли вы какие-либо побочные эффекты?\",\n    multiple: false,\n    answers: [\n      \"Нет\",\n      \"Да, незначительные (указать)\",\n      \"Да, выраженные (указать)\",\n    ],\n  },\n  {\n    name: \"Город\",\n    type: \"city\",\n  },\n  {\n    name: \"Консультант\",\n    type: \"consultant\",\n  },\n  {\n    name: \"Комментарий\",\n    text: true,\n  },\n];\n\nconst findOptions = (question) =>\n  questionsOptions.find((opts) => opts.name === question);\n\nconst Question = (props) => {\n  const {\n    question: { id, question },\n    num,\n    visitNum,\n    consultants,\n    onChange,\n  } = props;\n  const options = findOptions(question);\n  const label = `№${num}. ${question}`;\n\n  const handleChange = (event) => {\n    if (event.currentTarget) {\n      onChange(id, question, event.currentTarget.value);\n    } else if (event.target) {\n      onChange(id, question, event.target.value);\n    } else {\n      onChange(id, question, event);\n    }\n  };\n\n  let input = <Input onChange={handleChange} />;\n  if (options) {\n    const { answers: defaultAnswers, answers2, multiple, other, text, type } = options;\n    // ToDo реализовать кастомность вопросов для визита\n    const answers = (visitNum === 2 && answers2) ? answers2 : defaultAnswers;\n    if (answers && answers.length !== 0) {\n      if (multiple) {\n        // множественный выбор\n        input = (\n          <Checkbox.Group onChange={handleChange}>\n            {answers.map((answer, index) => (\n              <div>\n                <Checkbox value={answer} key={index}>\n                  {answer}\n                </Checkbox>\n              </div>\n            ))}\n            {other && <Checkbox value=\"Другое\">Другое</Checkbox>}\n          </Checkbox.Group>\n        );\n      } else {\n        // выбор одного варианта\n        input = (\n          <Radio.Group onChange={handleChange}>\n            {answers.map((answer, index) => (\n              <Radio\n                value={answer}\n                key={index}\n                style={{ display: \"block\", marginLeft: 0 }}\n              >\n                {answer}\n              </Radio>\n            ))}\n            <Radio value=\"\" key=\"\" style={{ display: \"block\", marginLeft: 0 }}>\n              Не заполнено\n            </Radio>\n          </Radio.Group>\n        );\n      }\n    }\n    if (type === \"city\") {\n      // город\n      input = (\n        <Select placeholder=\"Город\" onChange={handleChange}>\n          <Select.Option value=\"\">Не указан</Select.Option>\n          <Select.Option value=\"Москва\">Москва</Select.Option>\n          <Select.Option value=\"Санкт-Петербург\">Санкт-Петербург</Select.Option>\n          <Select.Option value=\"Нижний Новгород\">Нижний Новгород</Select.Option>\n        </Select>\n      );\n    }\n    if (type === \"consultant\") {\n      // консультант\n      input = (\n        <Select placeholder=\"Консультант\" onChange={handleChange}>\n          <Select.Option value=\"\">Не указан</Select.Option>\n          {consultants.map((consultant) => (\n            <Select.Option value={consultant}>{consultant}</Select.Option>\n          ))}\n        </Select>\n      );\n    }\n    if (text) {\n      // текстовое поле\n      input = <Input.TextArea rows={8} onChange={handleChange} />;\n    }\n  }\n\n  return (\n    <Card title={label}>\n      <Form.Item name={id}>{input}</Form.Item>\n      {options && options.other && (\n        <Form.Item name={`${id}-other`}>\n          <Input />\n        </Form.Item>\n      )}\n    </Card>\n  );\n};\n\nexport const PatientVisitQuestionnaire = (props) => {\n  const { patientVisit, questions } = props;\n  const { id, patient, visit, patient_visit_answers, status, date } =\n    patientVisit;\n  const { openNotification } = useNotification();\n\n  const [city, setCity] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [consultants, setConsultants] = useState([]);\n\n  const questionsWithAnswers = questions.map((question) => {\n    const answer = patient_visit_answers.find(\n      (ans) => ans.questionId === question.id\n    );\n    return {\n      ...question,\n      ...(answer && { answer: answer.answer, otherAnswer: answer.other }),\n    };\n  });\n\n  const initialValues = {\n    status,\n    date: date ? moment(date) : moment(),\n  };\n  questionsWithAnswers.forEach((qstn) => {\n    const { id, question, answer, otherAnswer } = qstn;\n    const options = findOptions(question);\n    if (options) {\n      const { answers, multiple, other } = options;\n      if (answers && answers.length !== 0) {\n        if (multiple) {\n          initialValues[id] = answer ? answer.split(\", \") : [];\n        } else {\n          initialValues[id] = answer ?? \"\";\n        }\n      } else {\n        initialValues[id] = answer ?? \"\";\n      }\n      if (other) {\n        initialValues[`${id}-other`] = otherAnswer ?? \"\";\n      }\n    } else {\n      initialValues[id] = answer ?? \"\";\n    }\n  });\n\n  const onFinish = (values) => {\n    const { status, date, ...answers } = values;\n    postPatientVisit(id, {\n      status,\n      date,\n      values: answers,\n    })\n      .then(() => {\n        openNotification(\"Анкета обновлена\");\n      })\n      .catch(() => {\n        openNotification(\"При обновлении анкеты произошла ошибка\");\n      });\n  };\n\n  const onChangeQuestion = (id, question, value) => {\n    const options = findOptions(question);\n    if (options) {\n      const { type } = options;\n      if (type === \"city\") {\n        setCity(value);\n      }\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  useEffect(() => {\n    findAllUsersForForms().then((res) => setUsers(res.data));\n  }, []);\n\n  useEffect(() => {\n    let alias = \"\";\n    if (city === \"Москва\") {\n      alias = \"moscow\";\n    } else if (city === \"Санкт-Петербург\") {\n      alias = \"spb\";\n    } else if (city === \"Нижний Новгород\") {\n      alias = \"nn\";\n    }\n    setConsultants(\n      users\n        .filter((user) => {\n          return city === \"\" || user.city === alias;\n        })\n        .map((user) => user.appointment)\n    );\n  }, [city, users]);\n\n  return (\n    <Form\n      name=\"basic\"\n      layout=\"vertical\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      initialValues={initialValues}\n      autoComplete=\"off\"\n    >\n      <Typography.Title level={3}>\n        {patient.code} ({visit.name})\n      </Typography.Title>\n      <Card title=\"Статус\">\n        <Form.Item name=\"status\">\n          <Select>\n            <Select.Option value={0}>Новый</Select.Option>\n            <Select.Option value={1}>Назначен</Select.Option>\n            <Select.Option value={2}>Заполнен</Select.Option>\n          </Select>\n        </Form.Item>\n      </Card>\n      <Card title=\"Дата\">\n        <Form.Item name=\"date\">\n          <DatePicker format={\"DD.MM.YYYY\"} />\n        </Form.Item>\n      </Card>\n\n      <br />\n      <Typography.Title level={3}>Анкета</Typography.Title>\n      {questionsWithAnswers.map((question, index) => (\n        <Question\n          question={question}\n          num={index + 1}\n          visitNum={visit.num}\n          onChange={onChangeQuestion}\n          consultants={consultants}\n          key={question.id}\n        />\n      ))}\n      <Card>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Сохранить\n          </Button>\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Spin } from \"antd\";\nimport { getQuestions } from \"../redux/thunks/questions.thunk\";\nimport { getPatientVisit } from \"../redux/thunks/patient_visits.thunk\";\nimport { getVisit } from \"../redux/thunks/visits.thunks\";\nimport { PatientVisitQuestionnaire } from \"./PatientVisitQuestionnaire\";\n\nexport const PatientVisitPage = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [visitQuestions, setVisitQuestions] = useState([]);\n  const [patientVisit, setPatientVisit] = useState();\n  const [visit, setVisit] = useState();\n\n  useEffect(() => {\n    getQuestions().then((res) => setAllQuestions(res.data));\n  }, []);\n\n  useEffect(() => {\n    getPatientVisit(id).then((res) => setPatientVisit(res.data));\n  }, [id]);\n\n  useEffect(() => {\n    if (patientVisit) {\n      getVisit(patientVisit.visitId).then((res) => setVisit(res.data));\n    }\n  }, [patientVisit]);\n\n  useEffect(() => {\n    if (visit && allQuestions.length !== 0) {\n      const questions = visit.visit_questions.map(({ questionId }) =>\n        allQuestions.find((qstn) => qstn.id === questionId)\n      );\n      setVisitQuestions(questions);\n      setLoading(false);\n    }\n  }, [visit, allQuestions]);\n\n  if (loading) {\n    return <Spin />;\n  } else {\n    return (\n      <PatientVisitQuestionnaire\n        patientVisit={patientVisit}\n        questions={visitQuestions}\n      />\n    );\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Form, DatePicker, Button, Select } from \"antd\";\nimport { getPatients } from \"../redux/thunks/patients.thunks\";\nimport { getVisits } from \"../redux/thunks/visits.thunks\";\nimport {\n  postPatientVisits,\n  getPatientVisits,\n} from \"../redux/thunks/patient_visits.thunk\";\nimport { useNotification } from \"../hooks\";\nimport { DebounceSelect } from \"../shared\";\nimport { useHistory } from \"react-router\";\n\nconst fetchPatients = async (name) => {\n  return getPatients(name).then((patients) =>\n    patients.data.map((user) => ({\n      label: `${user.name} ${user.surname}`,\n      value: user.id,\n    }))\n  );\n};\n\nexport const PatientVisitForm = (props) => {\n  const { onUpdate } = props;\n  const history = useHistory();\n  const { openNotification } = useNotification();\n\n  const [visits, setVisits] = useState([]);\n\n  const [patient, setPatient] = useState();\n  const [visit, setVisit] = useState();\n  const [date, setDate] = useState();\n\n  useEffect(() => {\n    getVisits().then((res) => setVisits(res.data));\n  }, []);\n\n  const onFinish = (values) => {\n    const { patient, visit, date } = values;\n    postPatientVisits({\n      patientId: patient.value,\n      visitId: visit,\n      date: date.format(),\n    }).then((res) => {\n      const { id } = res.data;\n      openNotification(\"Визит успешно добавлен\");\n      onUpdate();\n      history.push(`/visits/history/${id}`);\n    }).catch(() => {\n      openNotification(\"Произошла ошибка\");\n    });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      layout=\"vertical\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Пациент\"\n        name=\"patient\"\n        rules={[\n          {\n            required: true,\n            message: \"Выберите имя\",\n          },\n        ]}\n      >\n        <DebounceSelect\n          showSearch\n          value={patient}\n          placeholder=\"Выберите имя\"\n          fetchOptions={fetchPatients}\n          onChange={(value) => {\n            setPatient(value);\n          }}\n        />\n      </Form.Item>\n      <Form.Item\n        label=\"Визит\"\n        name=\"visit\"\n        rules={[\n          {\n            required: true,\n            message: \"Выберите визит\",\n          },\n        ]}\n      >\n        <Select\n          value={visit}\n          placeholder=\"Выберите визит\"\n          onChange={(newValue) => {\n            setVisit(newValue);\n          }}\n        >\n          {visits.map((visit) => (\n            <Select.Option value={visit.id} key={visit.id}>\n              {visit.name}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"Дата\"\n        name=\"date\"\n        rules={[\n          {\n            required: true,\n            message: \"Выберите дату\",\n          },\n        ]}\n      >\n        <DatePicker onChange={setDate} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Добавить визит\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { PageHeader, Tabs } from \"antd\";\nimport { PatientVisitsTable } from \"./PatientVisitsTable\";\nimport { PatientVisitForm } from \"./PatientVisitForm\";\nimport { getPatientVisits } from \"../redux/thunks/patient_visits.thunk\";\n\nexport const PatientVisitsPage = () => {\n  const [patientVisits, setPatientVisits] = useState([]);\n\n  const reload = useCallback(() => {\n    getPatientVisits().then((res) => setPatientVisits(res.data));\n  }, []);\n\n  useEffect(() => {\n    reload();\n  }, [reload]);\n\n  return (\n    <>\n      <PageHeader title=\"История визитов\" />\n\n      <Tabs defaultActiveKey=\"1\">\n        <Tabs.TabPane tab=\"Просмотр\" key=\"1\">\n          <PatientVisitsTable patientVisits={patientVisits} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Добавить\" key=\"2\">\n          <PatientVisitForm onUpdate={reload} />\n        </Tabs.TabPane>\n      </Tabs>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Table } from \"antd\";\n\nconst columns = [\n  {\n    title: \"№\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"Вопрос\",\n    dataIndex: \"question\",\n    key: \"question\",\n  },\n  {\n    title: \"\",\n    dataIndex: \"id\",\n    key: \"edit\",\n    render: (id, record) => <Link to={`/visits/questions/${id}`}>Редактировать</Link>,\n  },\n];\n\nexport const QuestionsTable = (props) => {\n  const { questions } = props;\n  return (\n    <Table\n      pagination={true}\n      size=\"small\"\n      columns={columns}\n      dataSource={questions}\n    />\n  );\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { PageHeader, Tabs } from \"antd\";\nimport { getQuestions } from \"../redux/thunks/questions.thunk\";\nimport { QuestionsTable } from \"./QuestionsTable\";\n\nexport const QuestionsPage = () => {\n  const [questions, setQuestions] = useState([]);\n\n  const reload = useCallback(() => {\n    getQuestions().then((res) => setQuestions(res.data));\n  }, []);\n\n  useEffect(() => {\n    reload();\n  }, [reload]);\n\n  return (\n    <>\n      <PageHeader title=\"Вопросы\" />\n\n      <Tabs defaultActiveKey=\"1\">\n        <Tabs.TabPane tab=\"Просмотр\" key=\"1\">\n          <QuestionsTable questions={questions} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Добавить\" key=\"2\"></Tabs.TabPane>\n      </Tabs>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  PatientPage,\n  PatientsPage,\n  PatientVisitPage,\n  PatientVisitsPage,\n  QuestionsPage,\n} from \"../pages\";\nimport { Route, Switch, useLocation, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nexport const VisitsProcess = () => {\n  const { id } = useParams();\n  const [tab, setTab] = useState();\n  const location = useLocation();\n\n  useEffect(() => {\n    const { pathname } = location;\n    switch (pathname) {\n      case '/visits/questions':\n        setTab('6');\n        break;\n      case '/visits/history':\n        setTab('8');\n        break;\n      default:\n        break;\n    }\n  }, [location]);\n\n  return (\n    <Layout>\n      <Layout.Sider breakpoint=\"lg\" collapsedWidth=\"0\">\n        <Menu\n          onSelect={(e) => setTab(e.key)}\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultSelectedKeys={[tab]}\n        >\n          {/* <Menu.Item key=\"8\">\n            <Link to=\"/visits/history\">Визиты</Link>\n          </Menu.Item> */}\n          <Menu.Item key=\"7\">\n            <Link to=\"/visits/patients\">Пациенты</Link>\n          </Menu.Item>\n          <Menu.Item key=\"6\">\n            <Link to=\"/visits/questions\">Вопросы</Link>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Content style={{ margin: \"24px 16px 0\" }}>\n          <Switch>\n            <Route path=\"/visits/questions\" component={QuestionsPage} />\n            <Route path=\"/visits/patients/:id\" component={PatientPage} />\n            <Route path=\"/visits/patients\" component={PatientsPage} />\n            <Route path=\"/visits/history/:id\" component={PatientVisitPage} />\n            <Route path=\"/visits/history\" component={PatientVisitsPage} />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n","export * from \"./VisitsProcess\";\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_ROLE = \"FETCH_ROLE\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const TESTING_SET_DRUG_USED = \"TESTING_SET_DRUG_USED\"\nexport const TESTING_SET_SEX_WORKED = \"TESTING_SET_SEX_WORKED\"\nexport const TESTING_SET_PREP_USED = \"TESTING_SET_PREP_USED\"\nexport const TESTING_SET_RANGE_PERIOD = \"TESTING_SET_RANGE_PERIOD\"\nexport const TESTING_CITY = \"TESTING_CITY\"\nexport const TESTING_FIND_BY_CODE = \"TESTING_FIND_BY_CODE\";\n\nexport const DIAGRAM_FAIL = \"DIAGRAM_FAIL\";\nexport const DIAGRAM_SUCCESS = \"DIAGRAM_SUCCESS\";\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  Redirect,\n} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport AllForms from \"./components/all-forms/all-forms\";\nimport DrugsForm from \"./components/Forms/drugs/DrugsForm\";\nimport GroupsForm from \"./components/Forms/groups/GroupsForm\";\nimport GroupsTG from \"./components/Forms/groups/GroupsTG\";\nimport TestingForm from \"./components/Forms/testing/TestingForm\";\nimport HotLineForm from \"./components/Forms/hot_line/HotLineForm\";\n\nimport logoWhite from \"./images/logo-white.svg\";\nimport logoBlack from \"./images/logo-black.svg\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Forms/Login\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/Board-user\";\nimport BoardModerator from \"./components/Board-moderator\";\nimport AdminPanel from \"./components/Board-admin\";\n\nimport { VisitsProcess } from \"./processes\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n    console.log(\"process.versions.node\", process.versions.node);\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n      readyToRedirect: null,\n    };\n  }\n\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(\"userData\", userData);\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: AuthService.getCurrentUser(),\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.readyToRedirect !== null) {\n      this.setState({\n        readyToRedirect: null,\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container-fluid\">\n              <Link to={\"/\"} className=\"navbar-brand\">\n                <div\n                  className=\"logo\"\n                  style={{ backgroundImage: `url(${logoWhite})` }}\n                />\n              </Link>\n              <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n              >\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div\n                className=\"collapse navbar-collapse\"\n                id=\"navbarSupportedContent\"\n              >\n                {/*<li className=\"nav-item\">*/}\n                {/*  <Link to={\"/home\"} className=\"nav-link\">*/}\n                {/*    Домашняя*/}\n                {/*  </Link>*/}\n                {/*</li>*/}\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  {/*{currentUser && (*/}\n                  {/*  <li className=\"nav-item\">*/}\n                  {/*    <Link to={\"/user\"} className=\"nav-link\">*/}\n                  {/*      Профиль*/}\n                  {/*    </Link>*/}\n                  {/*  </li>*/}\n                  {/*)}*/}\n\n                  {currentUser && (\n                    <li className=\"nav-item\">\n                      <Link to={\"/forms\"} className=\"nav-link\">\n                        Опросы\n                      </Link>\n                    </li>\n                  )}\n\n                  {(showModeratorBoard || showAdminBoard) && (\n                    <li className=\"nav-item\">\n                      <Link to={\"/mod\"} className=\"nav-link\">\n                        Отчёты\n                      </Link>\n                    </li>\n                  )}\n\n                  {(showModeratorBoard || showAdminBoard) && (\n                    <li className=\"nav-item\">\n                      <Link to={\"/visits/patients\"} className=\"nav-link\">\n                        Визиты\n                      </Link>\n                    </li>\n                  )}\n\n                  {showAdminBoard && (\n                    <li className=\"nav-item\">\n                      <Link to={\"/admin\"} className=\"nav-link\">\n                        Админка\n                      </Link>\n                    </li>\n                  )}\n\n                  {currentUser ? (\n                    <div className=\"navbar-nav ml-auto\">\n                      <li className=\"nav-item\">\n                        <Link to={\"/profile\"} className=\"nav-link\">\n                          {currentUser.appointment} ({currentUser.username})\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a\n                          href=\"/login\"\n                          className=\"nav-link\"\n                          onClick={this.logOut}\n                        >\n                          выйти\n                        </a>\n                      </li>\n                    </div>\n                  ) : (\n                    <div className=\"navbar-nav ml-auto\">\n                      <li className=\"nav-item\">\n                        <Link to={\"/login\"} className=\"nav-link\">\n                          войти\n                        </Link>\n                      </li>\n                    </div>\n                  )}\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          {this.state.readyToRedirect ? (\n            <Redirect to={this.state.readyToRedirect} />\n          ) : null}\n\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={AllForms} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/forms\" component={AllForms} />\n            <Route exact path=\"/testing\" component={TestingForm} />\n            <Route exact path=\"/hotline\" component={HotLineForm} />\n            <Route exact path=\"/groups-hiv\" component={GroupsForm} />\n            <Route exact path=\"/groups-tg\" component={GroupsTG} />\n            <Route exact path=\"/drugs\" component={DrugsForm} />\n\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={AdminPanel} />\n\n            <Route path=\"/visits/:id\" component={VisitsProcess} />\n            <Route path=\"/visits\" component={VisitsProcess} />\n          </Switch>\n        </div>\n\n        <div className=\"footer\">\n          <div\n            className=\"logo\"\n            style={{ backgroundImage: `url(${logoBlack})` }}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  // allCounterNotRead: state.chat.allCounterNotRead\n});\n\nconst mapDispatch = (dispatch) => ({\n  // getUserChatsApi: id => dispatch(getUserChatsApi({ id })),\n});\n\nexport default withRouter(connect(mapState, mapDispatch)(App));\n","module.exports = __webpack_public_path__ + \"static/media/test.10fd7227.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hot-line.f638f5d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/groups-hiv.428ac869.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pharmacy.6851f669.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tg.285192ef.png\";","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Form, Input, Button, Tag, Alert, Spin, Radio, Checkbox, Select } from 'antd';\nimport MaskedInput from 'antd-mask-input'\nimport moment from 'moment'\nimport React, { useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { findByCode, resetFilterState } from \"../../../redux/reducers/filter.reducer\";\nimport { findTesting, drugsForm } from \"../../../redux/thunks/forms\";\nimport { Success } from \"../../Success\";\nimport { FastTabs } from \"../testing/fast-tabs\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\n\nconst TestingForm = ({ pastTests }) => {\n    const history = useHistory();\n    const defaultCity = localStorage.getItem('9_city')\n\n    const goTo = (path) => {\n        history.push(\"/\" + path.target.value)\n    }\n\n    const [submitting, setSubmitting] = useState(false)\n    const [successful, setSuccessful] = useState(false);\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    const resetForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFinish = async (values) => {\n\n        const stateForm = new Object({\n            \"1_code\": values[\"1_code\"].replace(/[. /_]/g, '').toUpperCase(),\n            \"2_help_type\": values[\"2_help_type\"],\n            \"4_description_of_circuit\": values[\"4_description_of_circuit\"],\n            \"5_consulting_on_regular_testing_provided\": values[\"5_consulting_on_regular_testing_provided\"] ? values[\"5_consulting_on_regular_testing_provided\"][0] : null,\n            \"6_prevention_counseling_provided\": values[\"6_prevention_counseling_provided\"] ? values[\"6_prevention_counseling_provided\"][0] : null,\n            \"7_provided_counseling_on_receiving_treatment_for_hiv\": values[\"7_provided_counseling_on_receiving_treatment_for_hiv\"] ? values[\"7_provided_counseling_on_receiving_treatment_for_hiv\"][0] : null,\n            \"8_consultant_comment\": values[\"8_consultant_comment\"],\n            \"9_city\": localStorage.getItem(\"9_city\"),\n        })\n\n        const createOtherFields = () => {\n            // 3_issue_date\n            if (values[\"3_1_issue_date\"]?.length && values[\"3_2_issue_date\"]?.length) {\n                stateForm[\"3_issue_date\"] = [values[\"3_1_issue_date\"], values[\"3_2_issue_date\"]].toString()\n            } else if (values[\"3_1_issue_date\"]?.length) {\n                stateForm[\"3_issue_date\"] = values[\"3_1_issue_date\"]\n            } else if (values[\"3_2_issue_date\"]?.length) {\n                stateForm[\"3_issue_date\"] = [values[\"3_2_issue_date\"]].toString()\n            } else {\n                stateForm[\"3_issue_date\"] = null\n            }\n\n            if (values[\"43_date\"]) {\n                stateForm[\"43_date\"] = values[\"43_date\"].format(\"YYYY-MM-DD HH:mm:ss\")\n            } else {\n                stateForm[\"43_date\"] = moment().format(\"YYYY-MM-DD HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n\n        setSubmitting(true)\n        dispatch(drugsForm(fields))\n            .then((data) => {\n                setSubmitting(false)\n                localStorage.removeItem(\"TESTING_FORM\")\n                form.resetFields()\n                setSuccessful(data);\n            })\n            .catch(() => {\n                setSuccessful(false);\n            });\n    }\n\n    function CodeInput(props) {\n        return <>\n            <MaskedInput\n                className={styles.code}\n                mask=\"W/WW/WW/WW.WW.WWWW\"\n                placeholder=\"П/ИИ/ММ/ДД.ДД.ДДДД\"\n                isRevealingMask={true}\n                size=\"18\"\n                {...props}\n                formatCharacters={{\n                    'W': {\n                        validate() {\n                            return true\n                        },\n                        transform(char) {\n                            return char.toUpperCase()\n                        }\n                    }\n                }}\n            />\n\n            <Input\n                {...props}\n                onChange={onChangeCode}/>\n        </>\n    }\n\n    const onChangeCode = (event) => {\n        const value = event.target.value\n        form.setFieldsValue({\n            \"1_code\": value\n        });\n        const valueClean = value.replace(/[. /_]/g, '')\n        if (valueClean.length === 13) {\n            dispatch(findTesting({\n                code: valueClean\n            })).then((data) => {\n                dispatch(findByCode(data.data))\n                form.setFieldsValue({\n                    \"1_code\": value\n                });\n            })\n        }\n    }\n\n    const reloadForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n    }\n\n    const createResetValue = (name) => {\n        let values\n        if (typeof name === \"object\") {\n            values = name.map(i => ({ name: i }))\n        } else {\n            values = [{ name: name }]\n        }\n\n        const resetField = () => {\n            if (name === '1_code') dispatch(resetFilterState())\n            return values.map(item => form.setFieldsValue({ [item.name]: null }))\n        }\n\n        return (\n            <div className={styles.reset}>\n                <Button icon={<DeleteOutlined/>} onClick={name ? resetField : resetForm}/>\n            </div>\n        )\n    }\n\n    const setCityHandler = (city) => {\n        localStorage.setItem('9_city', city);\n        form.setFieldsValue({\n            \"9_city\": city\n        });\n    }\n\n    if (successful) {\n        return <Success reload={reloadForm} data={successful}/>\n    }\n\n    return (\n        <div className={styles.container}>\n\n            <FastTabs goTo={goTo}/>\n\n            <div className={styles.titleContainer}>\n                <div className={styles.line}/>\n                <h1 className={styles.h1}>Статистика Аптека</h1>\n                <p className={styles.required}>* Обязательные поля</p>\n                {createResetValue()}\n            </div>\n\n            <Form\n                layout={'vertical'}\n                form={form}\n                onFinish={onFinish}\n            >\n\n                <div>\n                    <Form.Item name=\"1_code\"\n                               label=\"Уникальный идентификационный код (УИК) респондента (пол, 2 буквы имени, 2 буквы имени матери, дата рождения):\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Поле является обязательным для сохранения',\n                                   },\n                               ]}\n                    >\n                        <CodeInput/>\n                    </Form.Item>\n\n                    {pastTests && <div>\n                        {pastTests.map(i => i[\"45_consultant_comment\"] &&\n                            <Alert message={i[\"45_consultant_comment\"]} type=\"info\" showIcon description={\n                                <div>{moment(i[\"43_date\"]).format('DD.MM.YYYY HH:mm')} {i[\"42_consultant\"] &&\n                                <span>({i[\"42_consultant\"]})</span>}</div>}/>)}\n                        {pastTests.length > 0 && <br/>}\n                        {pastTests.length > 0 ? [...pastTests].sort(function (a, b) {\n                                if (b[\"43_date\"] < a[\"43_date\"]) {\n                                    return -1;\n                                }\n                                if (b[\"43_date\"] > a[\"43_date\"]) {\n                                    return 1;\n                                }\n                                return -1;\n                            }).map(i =>\n                                <Tag>{moment(i[\"43_date\"], 'MM/DD/YYYY HH:mm:ss')\n                                    .format('DD.MM.YYYY HH:mm')}</Tag>)\n                            : <i style={{ color: \"gray\" }}>тестирований с этим кодом не найдено</i>\n                        }\n                    </div>}\n\n                    {createResetValue('1_code')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"2_help_type\" label=\"Тип помощи\">\n                        <Radio.Group>\n                            <Radio value=\"АРВТ\">АРВТ</Radio>\n                            <Radio value=\"ПКП\">ПКП</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    {createResetValue('2_help_type')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"3_1_issue_date\" label=\"Срок выдачи\">\n                        <Radio.Group>\n                            <Radio value=\"Полная схема на месяц\">Полная схема на месяц</Radio>\n                            <Radio value=\"Схема на 3 дня\">Схема на 3 дня</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item name=\"3_2_issue_date\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                    {createResetValue(['3_1_issue_date', '3_2_issue_date'])}\n                </div>\n\n                <div>\n                    <Form.Item name=\"4_description_of_circuit\" label=\"Описание схемы\">\n                        <Input.TextArea placeholder=\"Ваш ответ\"/>\n                    </Form.Item>\n                    {createResetValue('4_description_of_circuit')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"5_consulting_on_regular_testing_provided\"\n                               label=\"Оказано консультирование по регулярному тестированию\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Да\">Да</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    {createResetValue('39_consulting_on_regular_testing_provided')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"6_prevention_counseling_provided\"\n                               label=\"Оказано консультирование по профилактике\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Да\">Да</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    {createResetValue('6_prevention_counseling_provided')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"7_provided_counseling_on_receiving_treatment_for_hiv\"\n                               label=\"Оказано консультирование по получению лечения для ВИЧ+\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Да\">Да</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    {createResetValue('7_provided_counseling_on_receiving_treatment_for_hiv')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"8_consultant_comment\" label=\"Комментарий консультанта\">\n                        <Input.TextArea placeholder=\"Ваш ответ\"/>\n                    </Form.Item>\n                    {createResetValue('8_consultant_comment')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"9_city\" label=\"Филиал\">\n                        <Select defaultValue={defaultCity} value={form.getFieldsValue()[\"1_city\"]}\n                                onChange={setCityHandler}>\n                            <Option value=\"moscow\">Москва</Option>\n                            <Option value=\"spb\">Санкт-Петербург</Option>\n                            <Option value=\"nn\">Нижний Новгород</Option>\n                        </Select>\n                    </Form.Item>\n                </div>\n\n                <Form.Item style={{ textAlign: \"center\" }}>\n                    {submitting ? <Spin size=\"large\"/>\n                        : <Button htmlType=\"submit\" type=\"primary\" size=\"large\">Сохранить опрос</Button>}\n                </Form.Item>\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestingForm);\n","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Form, Input, Button, Select, Spin, DatePicker } from 'antd';\nimport moment from 'moment'\nimport React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { findByCode, resetFilterState } from \"../../../redux/reducers/filter.reducer\";\nimport { groupsHivForm } from \"../../../redux/thunks/forms\";\nimport { FastTabs } from \"../testing/fast-tabs\";\nimport noPride from \"./image.jpeg\";\nimport styles from './styles.module.scss'\nimport { Success } from \"./Success\";\n\nconst { Option } = Select;\n\nconst GroupsForm = () => {\n    const defaultCity = localStorage.getItem('1_city')\n    const history = useHistory();\n\n    const goTo = (path) => {\n        history.push(\"/\" + path.target.value)\n    }\n\n    const [submitting, setSubmitting] = useState(false)\n    const [successful, setSuccessful] = useState(false);\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        defaultCity && form.setFieldsValue({\n            \"1_city\": defaultCity\n        });\n        // eslint-disable-next-line\n    }, [successful, dispatch])\n\n    const resetForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFinish = async (values) => {\n\n        const stateForm = new Object({\n            \"1_city\": localStorage.getItem(\"1_city\"),\n            \"3_number_of_participants\": values[\"3_number_of_participants\"],\n            \"4_list_of_participants\": values[\"4_list_of_participants\"],\n            \"5_number_of_people_consulted_on_starting_treatment\": values[\"5_number_of_people_consulted_on_starting_treatment\"],\n            \"6_people_consulted_on_adherence_to_treatment\": values[\"6_people_consulted_on_adherence_to_treatment\"],\n            \"7_psychological_counseling_with_hiv\": values[\"7_psychological_counseling_with_hiv\"],\n            \"8_consultant_comment\": values[\"8_consultant_comment\"],\n        })\n\n        const createOtherFields = () => {\n            if (values[\"2_date\"]) {\n                stateForm[\"2_date\"] = values[\"2_date\"].format(\"YYYY-MM-DD HH:mm:ss\")\n            } else {\n                stateForm[\"2_date\"] = moment().format(\"YYYY-MM-DD HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n        setSubmitting(true)\n\n        dispatch(groupsHivForm(fields))\n            .then((data) => {\n                setSubmitting(false)\n                form.resetFields()\n                setSuccessful(data);\n            })\n            .catch(() => {\n                setSuccessful(false);\n                setSubmitting(false)\n            });\n    }\n\n    const setCityHandler = (city) => {\n        localStorage.setItem('1_city', city)\n        form.setFieldsValue({\n            \"1_city\": city\n        });\n    }\n\n    const reloadForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n    }\n\n    const createResetValue = (name) => {\n        let values\n        if (typeof name === \"object\") {\n            values = name.map(i => ({ name: i }))\n        } else {\n            values = [{ name: name }]\n        }\n\n        const resetField = () => {\n            return values.map(item => form.setFieldsValue({ [item.name]: null }))\n        }\n\n        return (\n            <div className={styles.reset}>\n                <Button icon={<DeleteOutlined/>} onClick={name ? resetField : resetForm}/>\n            </div>\n        )\n    }\n\n    if (successful) {\n        return <Success reload={reloadForm} data={successful}/>\n    }\n\n    return (\n        <div className={styles.container}>\n\n            <FastTabs goTo={goTo}/>\n\n            <div className={styles.image}\n                 style={{ backgroundImage: `url(${noPride})` }}\n            />\n\n            <div className={styles.titleContainer}>\n                <div className={styles.line}/>\n                <h1 className={styles.h1}>Статистика Группа поддержки ВИЧ+</h1>\n                <p className={styles.required}>* Обязательные поля</p>\n\n                {createResetValue()}\n            </div>\n\n            <Form\n                layout={'vertical'}\n                form={form}\n                onFinish={onFinish}>\n\n                <div>\n                    <Form.Item name=\"1_city\" label=\"Филиал\"\n                               rules={[{ required: true, message: 'Поле является обязательным' }]}\n                    >\n                        <Select defaultValue={defaultCity} value={form.getFieldsValue()[\"1_city\"]}\n                                onChange={setCityHandler}>\n                            <Option value=\"moscow\">Москва</Option>\n                            <Option value=\"spb\">Санкт-Петербург</Option>\n                            <Option value=\"nn\">Нижний Новгород</Option>\n                        </Select>\n                    </Form.Item>\n                </div>\n\n                <Form.Item required name=\"2_date\" label={`Дата группы`}>\n                    <DatePicker defaultValue={moment()} format={'DD.MM.YYYY'}/>\n                </Form.Item>\n\n                <div>\n                    <Form.Item name=\"3_number_of_participants\" label=\"Количество участников\">\n                        <Input.TextArea placeholder=\"Количество\"/>\n                    </Form.Item>\n                    {createResetValue('3_number_of_participants')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"4_list_of_participants\" label=\"Список участников (дд.мм.гг/номер/две буквы имени/цифра при необходимости)\">\n                        <Input.TextArea placeholder=\"дд.мм.гг/номер/две буквы имени/цифра при необходимости\"/>\n                    </Form.Item>\n                    {createResetValue('4_list_of_participants')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"5_number_of_people_consulted_on_starting_treatment\" label=\"Количество людей получивших консультацию по началу лечения\">\n                        <Input.TextArea placeholder=\"Количество\"/>\n                    </Form.Item>\n                    {createResetValue('5_number_of_people_consulted_on_starting_treatment')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"6_people_consulted_on_adherence_to_treatment\" label=\"Количество людей получивших консультацию по приверженности к лечению\">\n                        <Input.TextArea placeholder=\"Количество\"/>\n                    </Form.Item>\n                    {createResetValue('6_people_consulted_on_adherence_to_treatment')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"7_psychological_counseling_with_hiv\" label=\"Количество людей получивших консультацию по психологическим аспектам жизни с ВИЧ\">\n                        <Input.TextArea placeholder=\"Количество\"/>\n                    </Form.Item>\n                    {createResetValue('7_psychological_counseling_with_hiv')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"8_consultant_comment\" label=\"Комментарий\">\n                        <Input.TextArea placeholder=\"Комментарий\"/>\n                    </Form.Item>\n                    {createResetValue('8_consultant_comment')}\n                </div>\n\n                <Form.Item style={{ textAlign: \"center\" }}>\n                    {submitting ? <Spin size=\"large\"/>\n                        : <Button htmlType=\"submit\" type=\"primary\" size=\"large\">Сохранить</Button>}\n                </Form.Item>\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsForm);\n","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Form, Input, Button, Select, Spin, DatePicker } from 'antd';\nimport moment from 'moment'\nimport React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { findByCode, resetFilterState } from \"../../../redux/reducers/filter.reducer\";\nimport { groupsTGForm } from \"../../../redux/thunks/forms\";\nimport { FastTabs } from \"../testing/fast-tabs\";\nimport noPride from \"./image.jpeg\";\nimport styles from './styles.module.scss'\nimport { Success } from \"./Success\";\n\nconst { Option } = Select;\n\nconst GroupsTG = () => {\n    const defaultCity = localStorage.getItem('1_city')\n    const history = useHistory();\n\n    const goTo = (path) => {\n        history.push(\"/\" + path.target.value)\n    }\n\n    const [submitting, setSubmitting] = useState(false)\n    const [successful, setSuccessful] = useState(false);\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        defaultCity && form.setFieldsValue({\n            \"1_city\": defaultCity\n        });\n        // eslint-disable-next-line\n    }, [successful, dispatch])\n\n    const resetForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFinish = async (values) => {\n\n        const stateForm = new Object({\n            \"1_city\": localStorage.getItem(\"1_city\"),\n            \"3_number_of_participants\": values[\"3_number_of_participants\"],\n            \"4_list_of_participants\": values[\"4_list_of_participants\"],\n            \"5_medical_principles_transgender_transition\": values[\"5_medical_principles_transgender_transition\"],\n            \"6_psychology_principles_transgender_transition\": values[\"6_psychology_principles_transgender_transition\"],\n            \"7_consultant_comment\": values[\"7_consultant_comment\"],\n        })\n\n        const createOtherFields = () => {\n            if (values[\"2_date\"]) {\n                stateForm[\"2_date\"] = values[\"2_date\"].format(\"YYYY-MM-DD HH:mm:ss\")\n            } else {\n                stateForm[\"2_date\"] = moment().format(\"YYYY-MM-DD HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n        setSubmitting(true)\n\n        dispatch(groupsTGForm(fields))\n            .then((data) => {\n                setSubmitting(false)\n                form.resetFields()\n                setSuccessful(data);\n            })\n            .catch(() => {\n                setSuccessful(false);\n                setSubmitting(false)\n            });\n    }\n\n    const setCityHandler = (city) => {\n        localStorage.setItem('1_city', city)\n        form.setFieldsValue({\n            \"1_city\": city\n        });\n    }\n\n    const reloadForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n    }\n\n    const createResetValue = (name) => {\n        let values\n        if (typeof name === \"object\") {\n            values = name.map(i => ({ name: i }))\n        } else {\n            values = [{ name: name }]\n        }\n\n        const resetField = () => {\n            return values.map(item => form.setFieldsValue({ [item.name]: null }))\n        }\n\n        return (\n            <div className={styles.reset}>\n                <Button icon={<DeleteOutlined/>} onClick={name ? resetField : resetForm}/>\n            </div>\n        )\n    }\n\n    if (successful) {\n        return <Success reload={reloadForm} data={successful}/>\n    }\n\n    return (\n        <div className={styles.container}>\n\n            <FastTabs goTo={goTo}/>\n\n            {/*<div className={styles.image} style={{ backgroundImage: `url(${noPride})` }}/>*/}\n\n            <div className={styles.titleContainer}>\n                <div className={styles.line}/>\n                <h1 className={styles.h1}>Группа поддержки Транс-персон</h1>\n                <p className={styles.required}>* Обязательные поля</p>\n\n                {createResetValue()}\n            </div>\n\n            <Form\n                layout={'vertical'}\n                form={form}\n                onFinish={onFinish}>\n\n                <div>\n                    <Form.Item name=\"1_city\" label=\"Филиал\"\n                               rules={[{ required: true, message: 'Поле является обязательным' }]}\n                    >\n                        <Select defaultValue={defaultCity} value={form.getFieldsValue()[\"1_city\"]}\n                                onChange={setCityHandler}>\n                            <Option value=\"moscow\">Москва</Option>\n                            <Option value=\"spb\">Санкт-Петербург</Option>\n                            <Option value=\"nn\">Нижний Новгород</Option>\n                        </Select>\n                    </Form.Item>\n                </div>\n\n                <Form.Item required name=\"2_date\" label={`Дата группы`}>\n                    <DatePicker defaultValue={moment()} format={'DD.MM.YYYY'}/>\n                </Form.Item>\n\n                <div>\n                    <Form.Item name=\"3_number_of_participants\" label=\"Количество участников\">\n                        <Input.TextArea placeholder=\"Количество\"/>\n                    </Form.Item>\n                    {createResetValue('3_number_of_participants')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"4_list_of_participants\" label=\"Список участников (дд.мм.гг/номер/две буквы имени/цифра при необходимости)\">\n                        <Input.TextArea placeholder=\"дд.мм.гг/номер/две буквы имени/цифра при необходимости\"/>\n                    </Form.Item>\n                    {createResetValue('4_list_of_participants')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"5_medical_principles_transgender_transition\" label=\"Количество людей получивших консультацию о медицинских принципах и правилах трансгендерного перехода\">\n                        <Input.TextArea placeholder=\"Количество\"/>\n                    </Form.Item>\n                    {createResetValue('5_medical_principles_transgender_transition')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"6_psychology_principles_transgender_transition\" label=\"Количество людей получивших консультацию по психологическим аспектам трансгендерного перехода\">\n                        <Input.TextArea placeholder=\"Количество\"/>\n                    </Form.Item>\n                    {createResetValue('6_psychology_principles_transgender_transition')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"7_consultant_comment\" label=\"Комментарий\">\n                        <Input.TextArea placeholder=\"Комментарий\"/>\n                    </Form.Item>\n                    {createResetValue('7_consultant_comment')}\n                </div>\n\n                <Form.Item style={{ textAlign: \"center\" }}>\n                    {submitting ? <Spin size=\"large\"/>\n                        : <Button htmlType=\"submit\" type=\"primary\" size=\"large\">Сохранить</Button>}\n                </Form.Item>\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsTG);\n","module.exports = __webpack_public_path__ + \"static/media/no-pride.0bdbc73e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pride.b8f79617.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/image.3cf4624d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.bff383bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.cae10ea2.svg\";","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from 'react-redux'\n\nimport AuthService from \"../../services/auth.service\";\nimport { fetchLoginForm } from \"../../redux/thunks/user.thunks\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Обязательно для заполнения\n            </div>\n        );\n    }\n};\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            fetchLoginForm({username: this.state.email, password: this.state.password}).then(\n                (e) => {\n                    if (e.roles.length) {\n                        this.props.history.push(\"/forms\");\n                        window.location.reload();\n                    }\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <img\n                    className=\"card-container__img\"\n                    src=\"https://year18.spid.center/img/illustration-footer.jpg\"\n                    alt=\"profile-img\"\n                />\n\n                <div className=\"card card-container\">\n                    {/*<img*/}\n                    {/*  src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"*/}\n                    {/*  alt=\"profile-img\"*/}\n                    {/*  className=\"profile-img-card\"*/}\n                    {/*/>*/}\n                    <h5 className=\"card-container__title\">Авторизация в CRM</h5>\n\n                    <Form\n                        onSubmit={ this.handleLogin }\n                        ref={ c => {\n                            this.form = c;\n                        } }\n                    >\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Сотрудник</label>\n                            <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={ this.state.email }\n                                onChange={ this.onChangeEmail }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Пароль</label>\n                            <Input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={ this.state.password }\n                                onChange={ this.onChangePassword }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button\n                                className=\"btn btn-primary btn-block\"\n                                disabled={ this.state.loading }\n                            >\n                                { this.state.loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\n                                ) }\n                                <span>Войти</span>\n                            </button>\n                        </div>\n\n                        { this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    { this.state.message }\n                                </div>\n                            </div>\n                        ) }\n                        <CheckButton\n                            style={ {display: \"none\"} }\n                            ref={ c => {\n                                this.checkBtn = c;\n                            } }\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login","import React from \"react\";\nimport {USER} from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport Header from \"./Header/Header\";\nimport Default from \"./Layouts/Default\";\n\nconst Profile = () => {\n\n    const currentUser = JSON.parse(localStorage.getItem('user'))\n\n    return (\n        <div>\n            <Header>\n                <h2>Настройки</h2>\n            </Header>\n            <Default>\n                <p><strong>Email</strong>: {currentUser.email}</p>\n                <p> Сменить email</p>\n                <p> Сменить пароль</p>\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(Profile, USER);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"styles_Header__2KoFd\"};","import React from \"react\";\nimport useAuth from \"../hooks/useAuth\";\nimport {USER} from \"../constants/roles.constants\";\nimport Default from \"./Layouts/Default\";\nimport Header from \"./Header/Header\";\n\nconst AdminPanel = () => {\n    return (<div>\n            <Header>\n                <h2>User page (uploaded video and upload)</h2>\n            </Header>\n            <Default>\n                Content\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(AdminPanel, USER)","import { ConfigProvider, DatePicker, Select } from 'antd';\nimport locale from 'antd/lib/locale/ru_RU';\nimport 'moment/locale/ru';\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { setRangePeriod, setTestingCity, setTestingType } from \"../../redux/reducers/filterDrugs.reducer\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY';\n\nconst FiltersDrugs = ({\n                          periodType,\n                          setRangePeriod,\n                          setCity,\n                          setType,\n                          rangePeriod,\n                      }) => {\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    const onChangeType = (type) => {\n        setType(type)\n    }\n\n    return (\n        <div className={styles.filters}>\n            <div className={styles.firstLine}>\n\n                <Select\n                    style={{ width: 150 }}\n                    placeholder=\"Фильтр по филиалу\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все филиалы</Option>\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"nn\">Н. Новгород</Option>\n                    <Option value=\"spb\">С. Петербург</Option>\n                </Select>\n\n                {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                    <RangePicker defaultValue={rangePeriod}\n                                 onChange={onChangeRangePeriod} format={dateFormat}/>\n                </ConfigProvider>}\n\n                <Select\n                    style={{ width: 180 }}\n                    placeholder=\"Тип помощи\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeType}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все типы помощи</Option>\n                    <Option value=\"АРВТ\">АРВТ</Option>\n                    <Option value=\"ПКП\">ПКП</Option>\n                </Select>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    rangePeriod: state.filterHotLine.rangePeriod\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n    setType: (type) => dispatch(setTestingType(type)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersDrugs);\n","import { DownloadOutlined } from '@ant-design/icons';\nimport { Button, Collapse, PageHeader, Table, Tabs } from 'antd';\nimport { Excel } from 'antd-table-saveas-excel';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findDrugstore } from \"../../../redux/thunks/forms\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport FiltersDrugs from \"../../filters/filters-drugs\";\nimport styles from './styles.module.scss'\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst DrugstoreReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filterDrugs);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('YYYY-MM-DD HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('YYYY-MM-DD HH:mm:ss').toString(),\n        city: selectorFiltersTesting.city,\n        type: selectorFiltersTesting.type,\n    }\n\n    useEffect(() => {\n        dispatch(findDrugstore(filters)).then((data) => {\n            setTesting(data.data.sort((a, b) => b.id - a.id))\n        })\n\n        dispatch(findDiagram({ type: \"drugstore\" })).then((data) => {\n            setColumnsForm([{\n                code: \"id\",\n                title: \"ID анкеты\",\n                width: 100,\n                fixed: 'left',\n            }, ...data.data,])\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: column.width ? column.width : 400,\n        fixed: column.fixed ? column.fixed : undefined,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Аптека\"\n                subTitle={testing?.length &&\n                <>\n                    <span> <b>{testing?.length}</b>&nbsp;&nbsp;</span>\n                    <Button\n                        type=\"dashed\" shape=\"round\" icon={<DownloadOutlined/>}\n                        onClick={() => {\n                            const today = new Date()\n                            const excel = new Excel();\n                            excel\n                                .addSheet('Опрос тестируемых')\n                                .addColumns(columns)\n                                .addDataSource(testing)\n                                .saveAs(`Опрос тестируемых ${today}.xlsx`);\n                        }}>Скачать Excel</Button>\n                </>\n                }\n            />\n\n             <FiltersDrugs/>\n\n            <Tabs className={styles.tabs} defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                                    <Table dataSource={\n                                        comments} columns={[\n                                        {\n                                            title: 'Комментарий консультанта',\n                                            dataIndex: '45_consultant_comment',\n                                            key: '45_consultant_comment',\n                                        },\n                                        {\n                                            title: 'Консультант',\n                                            dataIndex: '42_consultant',\n                                            key: '42_consultant',\n                                        },\n                                        {\n                                            title: 'Дата',\n                                            dataIndex: '43_date',\n                                            key: '43_date',\n                                        }\n                                    ]}/>\n                                </Panel>\n                            </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default DrugstoreReport;\n","import React from 'react';\nimport { ConfigProvider, DatePicker, Select } from 'antd';\nimport 'moment/locale/ru';\nimport locale from 'antd/lib/locale/ru_RU';\nimport { connect } from \"react-redux\";\nimport { setRangePeriod, setTestingCity } from \"../../redux/reducers/filterGroupsHiv.reducer\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY';\n\nconst FiltersGroupsHivPlus = ({\n                     periodType,\n                     setRangePeriod,\n                     setCity,\n                     rangePeriod,\n                 }) => {\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    return (\n        <div className={styles.filters}>\n            <div className={styles.firstLine}>\n\n                <Select\n                    style={{ width: 150 }}\n                    placeholder=\"Фильтр по филиалу\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все филиалы</Option>\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"nn\">Н. Новгород</Option>\n                    <Option value=\"spb\">С. Петербург</Option>\n                </Select>\n\n                {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                    <RangePicker defaultValue={rangePeriod}\n                         onChange={onChangeRangePeriod} format={dateFormat} />\n                </ConfigProvider>}\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    rangePeriod: state.filterHotLine.rangePeriod\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersGroupsHivPlus);\n","import { DownloadOutlined } from '@ant-design/icons';\nimport { Button, Collapse, PageHeader, Table, Tabs } from 'antd';\nimport { Excel } from 'antd-table-saveas-excel';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findGroupsHiv } from \"../../../redux/thunks/forms\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport FiltersGroupsHivPlus from \"../../filters/filters-groups-hiv-plus\";\nimport styles from './styles.module.scss'\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst GroupsHivReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filterGroupsHiv);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('YYYY-MM-DD HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('YYYY-MM-DD HH:mm:ss').toString(),\n        city: selectorFiltersTesting.city,\n    }\n\n    useEffect(() => {\n        dispatch(findGroupsHiv(filters)).then((data) => {\n            setTesting(data.data.sort((a, b) => b.id - a.id))\n        })\n\n        dispatch(findDiagram({ type: \"groups-hiv\" })).then((data) => {\n            setColumnsForm([{\n                code: \"id\",\n                title: \"ID анкеты\",\n                width: 100,\n                fixed: 'left',\n            }, ...data.data,])\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: column.width ? column.width : 400,\n        fixed: column.fixed ? column.fixed : undefined,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Группа ВИЧ+\"\n                subTitle={testing?.length &&\n                <>\n                    <span> <b>{testing?.length}</b>&nbsp;&nbsp;</span>\n                    <Button\n                        type=\"dashed\" shape=\"round\" icon={<DownloadOutlined/>}\n                        onClick={() => {\n                            const today = new Date()\n                            const excel = new Excel();\n                            excel\n                                .addSheet('Опрос тестируемых')\n                                .addColumns(columns)\n                                .addDataSource(testing)\n                                .saveAs(`Опрос тестируемых ${today}.xlsx`);\n                        }}>Скачать Excel</Button>\n                </>\n                }\n            />\n\n             <FiltersGroupsHivPlus/>\n\n            <Tabs className={styles.tabs} defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                                    <Table dataSource={\n                                        comments} columns={[\n                                        {\n                                            title: 'Комментарий консультанта',\n                                            dataIndex: '45_consultant_comment',\n                                            key: '45_consultant_comment',\n                                        },\n                                        {\n                                            title: 'Консультант',\n                                            dataIndex: '42_consultant',\n                                            key: '42_consultant',\n                                        },\n                                        {\n                                            title: 'Дата',\n                                            dataIndex: '43_date',\n                                            key: '43_date',\n                                        }\n                                    ]}/>\n                                </Panel>\n                            </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default GroupsHivReport;\n","import React from 'react';\nimport { ConfigProvider, DatePicker, Select } from 'antd';\nimport 'moment/locale/ru';\nimport locale from 'antd/lib/locale/ru_RU';\nimport { connect } from \"react-redux\";\nimport { setRangePeriod, setTestingCity } from \"../../redux/reducers/filterGroupsTG.reducer\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY';\n\nconst FiltersGroupsTG = ({\n                     periodType,\n                     setRangePeriod,\n                     setCity,\n                     rangePeriod,\n                 }) => {\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    return (\n        <div className={styles.filters}>\n            <div className={styles.firstLine}>\n\n                <Select\n                    style={{ width: 150 }}\n                    placeholder=\"Фильтр по филиалу\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все филиалы</Option>\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"nn\">Н. Новгород</Option>\n                    <Option value=\"spb\">С. Петербург</Option>\n                </Select>\n\n                {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                    <RangePicker defaultValue={rangePeriod}\n                         onChange={onChangeRangePeriod} format={dateFormat} />\n                </ConfigProvider>}\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    rangePeriod: state.filterHotLine.rangePeriod\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersGroupsTG);\n","import { DownloadOutlined } from '@ant-design/icons';\nimport { Button, Collapse, PageHeader, Table, Tabs } from 'antd';\nimport { Excel } from 'antd-table-saveas-excel';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findGroupsTG } from \"../../../redux/thunks/forms\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport FiltersGroupsTG from \"../../filters/filters-groups-tg\";\nimport styles from './styles.module.scss'\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst GroupsTGReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filterGroupsHiv);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('YYYY-MM-DD HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('YYYY-MM-DD HH:mm:ss').toString(),\n        city: selectorFiltersTesting.city,\n    }\n\n    useEffect(() => {\n        dispatch(findGroupsTG(filters)).then((data) => {\n            setTesting(data.data.sort((a, b) => b.id - a.id))\n        })\n\n        dispatch(findDiagram({ type: \"groups-hiv\" })).then((data) => {\n            setColumnsForm([{\n                code: \"id\",\n                title: \"ID анкеты\",\n                width: 100,\n                fixed: 'left',\n            }, ...data.data,])\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: column.width ? column.width : 400,\n        fixed: column.fixed ? column.fixed : undefined,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Группа Транс-персон\"\n                subTitle={testing?.length &&\n                    <>\n                        <span> <b>{testing?.length}</b>&nbsp;&nbsp;</span>\n                        <Button\n                            type=\"dashed\" shape=\"round\" icon={<DownloadOutlined/>}\n                            onClick={() => {\n                                const today = new Date()\n                                const excel = new Excel();\n                                excel\n                                    .addSheet('Опрос тестируемых')\n                                    .addColumns(columns)\n                                    .addDataSource(testing)\n                                    .saveAs(`Опрос тестируемых ${today}.xlsx`);\n                            }}>Скачать Excel</Button>\n                    </>\n                }\n            />\n\n            <FiltersGroupsTG/>\n\n            <Tabs className={styles.tabs} defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                                    <Table dataSource={\n                                        comments} columns={[\n                                        {\n                                            title: 'Комментарий консультанта',\n                                            dataIndex: '45_consultant_comment',\n                                            key: '45_consultant_comment',\n                                        },\n                                        {\n                                            title: 'Консультант',\n                                            dataIndex: '42_consultant',\n                                            key: '42_consultant',\n                                        },\n                                        {\n                                            title: 'Дата',\n                                            dataIndex: '43_date',\n                                            key: '43_date',\n                                        }\n                                    ]}/>\n                                </Panel>\n                            </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default GroupsTGReport;\n","import React from 'react';\nimport { ConfigProvider, DatePicker, Select } from 'antd';\nimport 'moment/locale/ru';\nimport locale from 'antd/lib/locale/ru_RU';\nimport { connect } from \"react-redux\";\nimport { setRangePeriod, setTestingCity, setReason, setResult\n} from \"../../redux/reducers/filterHotLine.reducer\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY';\n\nconst FiltersHotline = ({\n                     periodType,\n                     setRangePeriod,\n                     setCity,\n    setReason,\n    setResult,\n                     rangePeriod,\n                 }) => {\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    const reasonForPetitionList = [\n        {\n            label: 'Опасный контакт (оценка рисков, рекомендации по профилактике)',\n            value: 'Опасный контакт (оценка рисков, рекомендации по профилактике)'\n        },\n        { label: 'Постконтактная профилактика', value: 'Постконтактная профилактика' },\n        { label: 'Доконтактная профилактика', value: 'Доконтактная профилактика' },\n        { label: 'Недавнее получение ВИЧ+ статуса', value: 'Недавнее получение ВИЧ+ статуса' },\n        {\n            label: 'Жизнь с ВИЧ (аспекты для людей, живущих с ВИЧ)',\n            value: 'Жизнь с ВИЧ (аспекты для людей, живущих с ВИЧ)'\n        },\n        {\n            label: 'Жизнь с ВИЧ (аспекты для родных, близких, партнёров ЛЖВ)',\n            value: 'Жизнь с ВИЧ (аспекты для родных, близких, партнёров ЛЖВ)'\n        },\n        { label: 'АРВТ и проблемы с ней', value: 'АРВТ и проблемы с ней' },\n        { label: 'Юридические вопросы и нарушение прав ЛЖВ', value: 'Юридические вопросы и нарушение прав ЛЖВ' },\n        { label: 'Консультации по тестированию', value: 'Консультации по тестированию' },\n    ];\n\n    const consultationResultsList = [\n        { label: 'Оказана информационная поддержка', value: 'Оказана информационная поддержка' },\n        { label: 'Оказана психологическая поддержка', value: 'Оказана психологическая поддержка' },\n        { label: 'Клиент направлен в региональный Центр СПИДа', value: 'Клиент направлен в региональный Центр СПИДа' },\n        {\n            label: 'Клиент направлен в другие региональные организации',\n            value: 'Клиент направлен в другие региональные организации'\n        },\n    ]\n\n    const onChangeReason = (reason) => {\n        setReason(reason)\n    }\n\n    const onChangeResult = (result) => {\n        setResult(result)\n    }\n\n    return (\n        <div className={styles.filters}>\n            <div className={styles.firstLine}>\n\n                <Select\n                    style={{ width: 150 }}\n                    placeholder=\"Фильтр по филиалу\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все филиалы</Option>\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"nn\">Н. Новгород</Option>\n                    <Option value=\"spb\">С. Петербург</Option>\n                </Select>\n\n                {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                    <RangePicker defaultValue={rangePeriod}\n                         onChange={onChangeRangePeriod} format={dateFormat} />\n                </ConfigProvider>}\n\n                <Select\n                    mode=\"multiple\"\n                    style={{ width: 350 }}\n                    placeholder=\"Причина\"\n                    onChange={onChangeReason}\n                >\n                    {reasonForPetitionList.map(reason => (\n                        <Option value={reason.value}>{reason.label}</Option>\n                    ))}\n                </Select>\n\n                <Select\n                    mode=\"multiple\"\n                    style={{ width: 350 }}\n                    placeholder=\"Результат\"\n                    onChange={onChangeResult}\n                >\n                    {consultationResultsList.map(result => (\n                        <Option value={result.value}>{result.label}</Option>\n                    ))}\n                </Select>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    rangePeriod: state.filterHotLine.rangePeriod\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n    setReason: (reason) => dispatch(setReason(reason)),\n    setResult: (result) => dispatch(setResult(result)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersHotline);\n","import { DownloadOutlined } from '@ant-design/icons';\nimport { Button, Collapse, PageHeader, Table, Tabs } from 'antd';\nimport { Excel } from 'antd-table-saveas-excel';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findHotLine } from \"../../../redux/thunks/forms\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport FiltersHotline from \"../../filters/filters-hotline\";\nimport styles from './styles.module.scss'\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst TestingReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filterHotLine);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('YYYY-MM-DD HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('YYYY-MM-DD HH:mm:ss').toString(),\n        city: selectorFiltersTesting.city,\n        reason: selectorFiltersTesting.reason,\n        result: selectorFiltersTesting.result\n    }\n\n    useEffect(() => {\n        dispatch(findHotLine(filters)).then((data) => {\n            setTesting(data.data.sort((a, b) => b.id - a.id))\n        })\n\n        dispatch(findDiagram({ type: \"hotline\" })).then((data) => {\n            setColumnsForm([{\n                code: \"id\",\n                title: \"ID анкеты\",\n                width: 100,\n                fixed: 'left',\n            }, ...data.data,])\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: column.width ? column.width : 400,\n        fixed: column.fixed ? column.fixed : undefined,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Горячая линия\"\n                subTitle={testing?.length &&\n                <>\n                    <span>с учётом фильтров: <b>{testing?.length}</b>&nbsp;&nbsp;</span>\n                    <Button\n                        type=\"dashed\" shape=\"round\" icon={<DownloadOutlined/>}\n                        onClick={() => {\n                            const today = new Date()\n                            const excel = new Excel();\n                            excel\n                                .addSheet('Опрос тестируемых')\n                                .addColumns(columns)\n                                .addDataSource(testing)\n                                .saveAs(`Опрос тестируемых ${today}.xlsx`);\n                        }}>Скачать Excel</Button>\n                </>\n                }\n            />\n\n             <FiltersHotline/>\n\n            <Tabs className={styles.tabs} defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                                    <Table dataSource={\n                                        comments} columns={[\n                                        {\n                                            title: 'Комментарий консультанта',\n                                            dataIndex: '45_consultant_comment',\n                                            key: '45_consultant_comment',\n                                        },\n                                        {\n                                            title: 'Консультант',\n                                            dataIndex: '42_consultant',\n                                            key: '42_consultant',\n                                        },\n                                        {\n                                            title: 'Дата',\n                                            dataIndex: '43_date',\n                                            key: '43_date',\n                                        }\n                                    ]}/>\n                                </Panel>\n                            </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default TestingReport;\n","import {\n  UserOutlined,\n  PhoneOutlined,\n  UsergroupAddOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { MODERATOR } from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport { findAllUsersForForms } from \"../redux/thunks/user.thunks\";\nimport DrugstoreReport from \"./reports/drugstore/DrugstoreReport\";\nimport GroupsHivReport from \"./reports/groups/GroupsHivReport\";\nimport GroupsTG from \"./reports/groups/GroupsTGReport\";\nimport HotLineReport from \"./reports/hot-line/HotLineReport\";\nimport TestingReport from \"./reports/testing/TestingReport\";\n\nconst { Content, Sider } = Layout;\nconst BoardModerator = () => {\n  const [tab, setTab] = useState(\"2\");\n  const [opened, setOpened] = useState(\"1\");\n  const username = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    findAllUsersForForms().then((data) => {\n      setOpened(\n        data.data.filter((i) => i.username === username.username)[0].subdivision\n      );\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const setActiveTab = (e) => {\n    setTab(e.key);\n  };\n\n  const setComponent = (tab) => {\n    if (!opened.includes(tab)) {\n      return \"Доступ к этому отчету запрещён. (нужно добавить этот раздел в админке для вашего пользователя)\";\n    }\n\n    switch (tab) {\n      case \"2\":\n        return <TestingReport />;\n      case \"4\":\n        return <HotLineReport />;\n      case \"5\":\n        return <GroupsTG />;\n      case \"3\":\n        return <GroupsHivReport />;\n      case \"1\":\n        return <DrugstoreReport />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <Layout>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        onBreakpoint={(broken) => {\n          console.log(broken);\n        }}\n        onCollapse={(collapsed, type) => {\n          console.log(collapsed, type);\n        }}\n      >\n        <Menu\n          onSelect={setActiveTab}\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultSelectedKeys={[tab]}\n        >\n          {/*<Menu.Item key=\"1\" icon={<VideoCameraOutlined/>}>*/}\n          {/*    Диаграммы*/}\n          {/*</Menu.Item>*/}\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\n            Тестируемые\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<PhoneOutlined />}>\n            Горячая линия\n          </Menu.Item>\n          <Menu.SubMenu\n            icon={<UsergroupAddOutlined />}\n            key=\"sub2\"\n            title=\"Группы поддержки\"\n          >\n            <Menu.Item key=\"3\">Группа ВИЧ+</Menu.Item>\n            <Menu.Item key=\"5\">Группа ТГ</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.Item key=\"1\" icon={<UsergroupAddOutlined />}>\n            Аптека\n          </Menu.Item>\n          {/*<Menu.Item key=\"4\" icon={<UserOutlined/>}>*/}\n          {/*    nav 4*/}\n          {/*</Menu.Item>*/}\n        </Menu>\n      </Sider>\n      <Layout>\n        {/*<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}/>*/}\n        <Content style={{ margin: \"24px 16px 0\" }}>{setComponent(tab)}</Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default useAuth(BoardModerator, MODERATOR);\n","import { Checkbox, Form, Radio, Input } from \"antd\";\nimport React from \"react\"\n\nexport const TestingDrugsUser = ({ createResetValue }) => {\n\n    return (\n        <>\n            <div>\n                <Form.Item rules={[{ required: true, message: 'Поле является обязательным' }]}\n                           name=\"4_age\" label=\"Сколько Вам полных лет?\">\n                    <Radio.Group>\n                        <Radio value=\"18-19 лет\">18-19 лет</Radio>\n                        <Radio value=\"20-29 лет\">20-29 лет</Radio>\n                        <Radio value=\"30-39 лет\">30-39 лет</Radio>\n                        <Radio value=\"40-49 лет\">40-49 лет</Radio>\n                        <Radio value=\"50 и старше\">50 и старше</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('4_age')}\n            </div>\n\n            <div>\n                <Form.Item rules={[{ required: true, message: 'Поле является обязательным для сохранения' }]}\n                           name=\"3_gender\" label=\"Ваш пол?\">\n                    <Radio.Group>\n                        <Radio value=\"Мужчина\">Мужчина</Radio>\n                        <Radio value=\"Женщина\">Женщина</Radio>\n                        <Radio value=\"Другой\">Другой</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('3_gender')}\n            </div>\n\n            <div>\n                <Form.Item name=\"47_how_long_have_you_been_using_drugs\" label=\"Как долго Вы употребляете наркотики?\">\n                    <Radio.Group>\n                        <Radio value=\"Менее полугода\">Менее полугода</Radio>\n                        <Radio value=\"Менее года\">Менее года</Radio>\n                        <Radio value=\"От 1 года до 5 лет\">От 1 года до 5 лет</Radio>\n                        <Radio value=\"От 5 лет до 10\">От 5 лет до 10</Radio>\n                        <Radio value=\"Более 10 лет\">Более 10 лет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('47_how_long_have_you_been_using_drugs')}\n            </div>\n\n            <div>\n                <Form.Item\n                    label=\"Отметьте все способы употребления наркотиков, которые Вы когда-либо пробовали?\"\n                    name=\"48_ways_of_using_drugs\"\n                >\n                    <Checkbox.Group>\n                        <Checkbox value=\"Неинъекционно (курю, нюхаю и т.п.)\">Неинъекционно (курю, нюхаю и\n                            т.п.)</Checkbox>\n                        <Checkbox value=\"Инъекционно\">Инъекционно</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('48_ways_of_using_drugs')}\n            </div>\n\n            <div>\n                <Form.Item\n                    label=\"Употребляли ли вы наркотики за последние 12 месяцев?\"\n                    name=\"62_have_you_used_drugs_in_past_12_m\"\n                >\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('62_have_you_used_drugs_in_past_12_m')}\n            </div>\n\n            <div>\n                <Form.Item name=\"49_1_what_drugs_did_you_use_non_injection\"\n                           label=\"Какие наркотики Вы употребляли неинъекционно за последние 12 месяцев?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Героин\">Героин</Checkbox>\n                        <Checkbox value=\"Марихуана\">Марихуана</Checkbox>\n                        <Checkbox value=\"МДМА (экстази)\">МДМА (экстази)</Checkbox>\n                        <Checkbox value=\"Мефедрон\">Мефедрон</Checkbox>\n                        <Checkbox value=\"Скорости (амфетамин, метамфетамин)\">Скорости (амфетамин,\n                            метамфетамин)</Checkbox>\n                        <Checkbox value=\"Соли\">Соли</Checkbox>\n                        <Checkbox value=\"Спайс\">Спайс</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"49_2_what_drugs_did_you_use_non_injection\">\n                    <Input placeholder=\"Другие (напишите, какие)\"/>\n                </Form.Item>\n                {createResetValue(['49_1_what_drugs_did_you_use_non_injection', '49_2_what_drugs_did_you_use_non_injection'])}\n            </div>\n\n            <div>\n                <Form.Item name=\"50_1_what_drugs_did_you_use_injection\"\n                           label=\"Какие наркотики Вы употребляли инъекционно за последние 12 месяцев?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Амфетамин, метамфитамин, фенамин (скорость)\">Амфетамин, метамфитамин, фенамин\n                            (скорость)</Checkbox>\n                        <Checkbox value=\"Героин\">Героин</Checkbox>\n                        <Checkbox value=\"Метадон\">Метадон</Checkbox>\n                        <Checkbox value=\"Мефедрон\">Мефедрон</Checkbox>\n                        <Checkbox value=\"Соли\">Соли</Checkbox>\n                        <Checkbox value=\"Тропикамид\">Тропикамид</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"50_2_what_drugs_did_you_use_injection\">\n                    <Input placeholder=\"Другие (напишите, какие)\"/>\n                </Form.Item>\n                {createResetValue(['50_1_what_drugs_did_you_use_injection', '50_2_what_drugs_did_you_use_injection'])}\n            </div>\n\n            <div>\n                <Form.Item name=\"51_shared_the_same_syringe_with_other_people\"\n                           label=\"Как часто за последние 12 месяцев Вы пользовались вместе с другими людьми одними и теми же шприцем, иглой, или емкостью для приготовления раствора?\">\n                    <Radio.Group>\n                        <Radio value=\"Всегда / практически всегда\">Всегда / практически всегда</Radio>\n                        <Radio value=\"В большинстве случаев\">В большинстве случаев</Radio>\n                        <Radio value=\"Примерно в половине случаев\">Примерно в половине случаев</Radio>\n                        <Radio value=\"В меньшинстве случаев\">В меньшинстве случаев</Radio>\n                        <Radio value=\"Никогда\">Никогда </Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('51_shared_the_same_syringe_with_other_people')}\n            </div>\n\n            <div>\n                <Form.Item name=\"52_who_did_they_share_the_syringe_with\"\n                           label=\"Вместе с кем Вы последний раз пользовались одними и теми же шприцом, иглой или емкостью для приготовления раствора, вводя себе наркотик?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Муж / жена\">Муж / жена</Checkbox>\n                        <Checkbox value=\"Другие родственники\">Другие родственники</Checkbox>\n                        <Checkbox value=\"Сексуальный партнер / партнерша\">Сексуальный партнер / партнерша</Checkbox>\n                        <Checkbox value=\"Друзья / постоянная компания\">Друзья / постоянная компания</Checkbox>\n                        <Checkbox value=\"Дальние знакомые / знакомые знакомых\">Дальние знакомые / знакомые\n                            знакомых</Checkbox>\n                        <Checkbox value=\"Незнакомые люди / случайная компания\">Незнакомые люди / случайная\n                            компания</Checkbox>\n                        <Checkbox value=\"Трудно сказать / Не помню\">Трудно сказать / Не помню</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('52_who_did_they_share_the_syringe_with')}\n            </div>\n\n            <div>\n                <Form.Item name=\"53_1_why_do_you_use_the_same_syringe\"\n                           label=\"Почему Вы пользуетесь одними и теми же шприцом, иглой, емкостью для приготовления раствора вместе с другими людьми?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Слишком дорого покупать новые шприцы и иглы\">Слишком дорого покупать новые\n                            шприцы и иглы</Checkbox>\n                        <Checkbox value=\"Трудно найти новые шприцы и иглы, когда они необходимы\">Трудно найти новые\n                            шприцы и иглы, когда они необходимы</Checkbox>\n                        <Checkbox value=\"Отказались продать шприц(ы) и/или иглы в аптеке\">Отказались продать шприц(ы)\n                            и/или иглы в аптеке</Checkbox>\n                        <Checkbox value=\"Не думал об этом\">Не думал об этом</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"53_2_why_do_you_use_the_same_syringe\">\n                    <Input placeholder=\"Другие причины (напишите)\"/>\n                </Form.Item>\n                {createResetValue(['53_1_why_do_you_use_the_same_syringe', '53_2_why_do_you_use_the_same_syringe'])}\n            </div>\n\n            <div>\n                <Form.Item name=\"54_you_usually_disinfect_the_container\"\n                           label=\"Вы обычно дезинфицируете емкость для приготовления раствора и шприцы?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, шприцы\">Да, шприцы </Radio>\n                        <Radio value=\"Да, емкость\">Да, емкость </Radio>\n                        <Radio value=\"Да, и то, и то\">Да, и то, и то</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('54_you_usually_disinfect_the_container')}\n            </div>\n\n            <div>\n                <Form.Item name=\"55_1_how_do_you_usually_disinfect_syringes_and_needles\"\n                           label=\"Как Вы обычно дезинфицируете шприцы и иглы, которые до Вас использовали другие люди?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Промываю холодной водой\">Промываю холодной водой</Checkbox>\n                        <Checkbox value=\"Промываю горячей водой\">Промываю горячей водой</Checkbox>\n                        <Checkbox value=\"Кипячу\">Кипячу</Checkbox>\n                        <Checkbox value=\"Дезинфицирую с помощью хлора\">Дезинфицирую с помощью хлора</Checkbox>\n                        <Checkbox value=\"Обрабатываю спиртом\">Обрабатываю спиртом</Checkbox>\n                        <Checkbox value=\"Не дезинфицирую\">Не дезинфицирую</Checkbox>\n                        <Checkbox value=\"Их стерилизую не я\">Их стерилизую не я</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"55_2_how_do_you_usually_disinfect_syringes_and_needles\">\n                    <Input placeholder=\"Другое (напишите)\"/>\n                </Form.Item>\n                {createResetValue(['55_1_how_do_you_usually_disinfect_syringes_and_needles', '55_2_how_do_you_usually_disinfect_syringes_and_needles'])}\n            </div>\n\n            <div>\n                <Form.Item name=\"56_where_do_you_usually_get_syringes\"\n                           label=\"Как и где Вы обычно приобретаете новые / неиспользованные иглы, шприцы?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Покупаю в аптеке\">Покупаю в аптеке</Checkbox>\n                        <Checkbox value=\"Беру у друзей/знакомых\">Беру у друзей/знакомых</Checkbox>\n                        <Checkbox value=\"Получаю бесплатно (благотворительная помощь)\">Получаю бесплатно\n                            (благотворительная помощь)</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                {createResetValue('56_where_do_you_usually_get_syringes')}\n            </div>\n\n            <div>\n                <Form.Item name=\"57_1_undergo_treatment_in_a_narcological_hospital\"\n                           label=\"Приходилось ли Вам за последние 12 месяцев проходить лечение в наркологической больнице или диспансере?\">\n                    <Input placeholder=\"ОТМЕТЬТЕ, СКОЛЬКО РАЗ\"/>\n                </Form.Item>\n                <Form.Item name=\"57_2_undergo_treatment_in_a_narcological_hospital\" label=\"Нет\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Нет\"/>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue(['57_1_undergo_treatment_in_a_narcological_hospital', '57_2_undergo_treatment_in_a_narcological_hospital'])}\n            </div>\n\n            <div>\n                <Form.Item name=\"58_1_how_many_sexual_partners\"\n                           label=\" Сколько сексуальных партнеров у Вас было за последние 12 месяцев?\">\n                    <Input placeholder=\"отметьте, сколько партнеров\"/>\n                </Form.Item>\n                <Form.Item name=\"58_2_how_many_sexual_partners\" label=\"Не было\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Не было\"/>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue(['58_1_how_many_sexual_partners', '58_2_how_many_sexual_partners'])}\n            </div>\n\n            <div>\n                <Form.Item required name=\"18_drugs_or_money_in_exchange_for_sex\"\n                           label=\"Приходилось ли Вам за последние 12 месяцев получать/давать деньги или наркотики в обмен на сексуальные услуги?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, я давал\">Да, я давал</Radio>\n                        <Radio value=\"Да, я получал\">Да, я получал</Radio>\n                        <Radio value=\"И то и другое\">И то и другое</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('18_drugs_or_money_in_exchange_for_sex')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"59_have_had_sex_in_the_past_12_months_using_a_condom\"\n                           label=\"Как часто вы занимались сексом в последние 12 месяцев, используя презерватив?\">\n                    <Radio.Group>\n                        <Radio value=\"Всегда / почти всегда\">Всегда / почти всегда</Radio>\n                        <Radio value=\"В большинстве случаев\">В большинстве случаев</Radio>\n                        <Radio value=\"Примерно в половине случаев\">Примерно в половине случаев</Radio>\n                        <Radio value=\"В меньшинстве случаев\">В меньшинстве случаев</Radio>\n                        <Radio value=\"Никогда\">Никогда</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('59_have_had_sex_in_the_past_12_months_using_a_condom')}\n            </div>\n\n            <div>\n                <Form.Item name=\"13_1_no_using_condom\"\n                           label=\"Почему Вы не использовали презерватив со своим последним сексуальным партнером(возможны несколько вариантов)?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Я использовал его\">Я использовал его</Checkbox>\n                        <Checkbox value=\"У меня его не было\">У меня его не было</Checkbox>\n                        <Checkbox value=\"Они слишком дорогие\">Они слишком дорого стоят</Checkbox>\n                        <Checkbox value=\"Партнер не хотел пользоваться презервативом\">Партнер/ша не хотел/а пользоваться\n                            презервативом</Checkbox>\n                        <Checkbox value=\"Мы были готовы зачать ребенка\">Мы были готовы зачать ребенка</Checkbox>\n                        <Checkbox value=\"Мне не нравится пользоваться презервативом\">Мне не нравится пользоваться\n                            презервативом</Checkbox>\n                        <Checkbox value=\"Мне кажется, в этом не было необходимости\">Мне кажется, в этом не было\n                            необходимости</Checkbox>\n                        <Checkbox value=\"Я доверяю своему партнеру\">Я доверяю своему партнеру</Checkbox>\n                        <Checkbox value=\"Я просто не думал об этом\">Я просто не думал об этом</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"13_2_no_using_condom\">\n                    <Input placeholder=\"Другое\"/>\n                </Form.Item>\n                {createResetValue(['13_1_no_using_condom', '13_2_no_using_condom'])}\n            </div>\n\n            <div>\n                <Form.Item required name=\"20_med_sexually_transmitted_diseases\"\n                           label=\"Приходилось ли Вам за последние 12 месяцев болеть заболеваниями, передающимися половым путем? Обращались ли вы к врачу?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, обращался к врачу\">Да, обращался к врачу</Radio>\n                        <Radio value=\"Да, не обращался к врачу\">Да, не обращался к врачу</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('20_med_sexually_transmitted_diseases')}\n            </div>\n\n            <div>\n                <Form.Item name=\"21_1_diagnosed_gepatit\"\n                           label=\"Имеете ли Вы хронические формы гепатитов?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да, проходил лечение\">Да, проходил лечение</Checkbox>\n                        <Checkbox value=\"Да, не проходил лечение\">Да, не проходил лечение</Checkbox>\n                        <Checkbox value=\"Нет\">Нет</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"21_2_diagnosed_gepatit\">\n                    <Input placeholder=\"НАПИШИТЕ ФОРМЫ: А, В, С, D, E\"/>\n                </Form.Item>\n                {createResetValue(['21_1_diagnosed_gepatit', '21_2_diagnosed_gepatit'])}\n            </div>\n\n            <div>\n                <Form.Item name=\"60_diagnosed_with_tuberculosis\"\n                           label=\"Вам когда-либо ставили диагноз «туберкулез»?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                        <Checkbox value=\"Нет\">Нет</Checkbox>\n                        <Checkbox value=\"Не знаю про это заболевание\">Не знаю про это заболевание</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                {createResetValue('60_diagnosed_with_tuberculosis')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"23_hiv_tested\"\n                           label=\"Вы когда-нибудь проходили тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('23_hiv_tested')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"61_hiv_tested_12_m\"\n                           label=\"Проходили ли Вы тестирование на ВИЧ за последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('61_hiv_tested_12_m')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"25_do_you_know_your_hiv_status\"\n                           label=\"Какой у Вас ВИЧ-статус?\">\n                    <Radio.Group>\n                        <Radio value=\"Я - ВИЧ-положительный(-ая), не на терапии\">Я - ВИЧ-положительный(-ая), не на\n                            терапии</Radio>\n                        <Radio value=\"Я - ВИЧ-положительный(-ая), на терапии\">Я - ВИЧ-положительный(-ая), на\n                            терапии</Radio>\n                        <Radio value=\"Я ВИЧ-отрицательный\">Я - ВИЧ-отрицательный(-ая)</Radio>\n                        <Radio value=\"Я не знаю свой ВИЧ-статус\">Мне не известен мой ВИЧ-статус</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('25_do_you_know_your_hiv_status')}\n            </div>\n\n            <div>\n                <Form.Item rules={[{\n                    required: true,\n                    message: 'Поле является обязательным',\n                }]}\n                           name=\"36_hiv_test_result\"\n                           label=\"Результат теста на ВИЧ:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('36_hiv_test_result')}\n            </div>\n\n\n            <div>\n                <Form.Item required name=\"37_hepatitis_test_result\"\n                           label={`Результат теста на Гепатит С:`}>\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('37_hepatitis_test_result')}\n            </div>\n\n        </>\n    )\n}","import React from \"react\"\nimport { Checkbox, Form, Radio } from \"antd\";\n\nexport const TestingGeneral = ({ createResetValue }) => {\n\n    return (\n        <>\n            <div>\n                <Form.Item rules={[{ required: true, message: 'Поле является обязательным для сохранения' }]}\n                           name=\"3_gender\" label=\"Ваш пол?\">\n                    <Radio.Group>\n                        <Radio value=\"Мужчина\">Мужчина</Radio>\n                        <Radio value=\"Женщина\">Женщина</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('3_gender')}\n            </div>\n\n            <div>\n                <Form.Item rules={[{ required: true, message: 'Поле является обязательным' }]}\n                           name=\"4_age\" label=\"Ваш возраст?\">\n                    <Radio.Group>\n                        <Radio value=\"18-19 лет\">18-19 лет</Radio>\n                        <Radio value=\"20-29 лет\">20-29 лет</Radio>\n                        <Radio value=\"30-39 лет\">30-39 лет</Radio>\n                        <Radio value=\"40-49 лет\">40-49 лет</Radio>\n                        <Radio value=\"50 и старше\">50 и старше</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('4_age')}\n            </div>\n\n            <div>\n                <Form.Item\n                           name=\"36_hiv_test_result\"\n                           label=\"Результат теста на ВИЧ:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('36_hiv_test_result')}\n            </div>\n\n\n            <div>\n                <Form.Item name=\"37_hepatitis_test_result\"\n                           label={`Результат теста на Гепатит С: (если проводился)`}>\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('37_hepatitis_test_result')}\n            </div>\n\n            <div>\n                <Form.Item name=\"38_syphilis_test_result\"\n                           label={`Результат теста на Сифилис: (если проводился)`}>\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('38_syphilis_test_result')}\n            </div>\n\n            <div>\n                <Form.Item name=\"39_consulting_on_regular_testing_provided\"\n                           label=\"Оказано консультирование по регулярному тестированию\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('39_consulting_on_regular_testing_provided')}\n            </div>\n\n            <div>\n                <Form.Item name=\"40_prevention_counseling_provided\"\n                           label=\"Оказано консультирование по профилактике\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('40_prevention_counseling_provided')}\n            </div>\n\n            <div>\n                <Form.Item name=\"41_provided_counseling_on_receiving_treatment_for_hiv\"\n                           label=\"Оказано консультирование по получению лечения для ВИЧ+\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('41_provided_counseling_on_receiving_treatment_for_hiv')}\n            </div>\n\n        </>\n    )\n}","import React from \"react\"\nimport { Checkbox, Form, Input, Radio } from \"antd\";\n\nexport const TestingMsm = ({\n                               optionsWithDisabled,\n                               createResetValue,\n                               prep,\n                           }) => {\n\n    return (\n        <>\n            <div>\n                <Form.Item name=\"2_1_how_did_you_know\" label=\"Откуда вы узнали о тестировании?\">\n                    <Checkbox.Group>\n                        {optionsWithDisabled.map(option => <Checkbox\n                            value={option.value}>{option.label}</Checkbox>)}\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"2_2_how_did_you_know\">\n                    <Input placeholder=\"Другое\"/>\n                </Form.Item>\n                {createResetValue(['2_1_how_did_you_know', '2_2_how_did_you_know'])}\n            </div>\n\n            <div>\n                <Form.Item rules={[{ required: true, message: 'Поле является обязательным для сохранения' }]}\n                           name=\"3_gender\" label=\"Ваш пол?\">\n                    <Radio.Group>\n                        <Radio value=\"Мужчина\">Мужчина</Radio>\n                        <Radio value=\"Трансгендерная женщина\">Трансгендерная женщина</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('3_gender')}\n            </div>\n\n            <div>\n                <Form.Item rules={[{ required: true, message: 'Поле является обязательным' }]}\n                           name=\"4_age\" label=\"Ваш возраст?\">\n                    <Radio.Group>\n                        <Radio value=\"18-19 лет\">18-19 лет</Radio>\n                        <Radio value=\"20-29 лет\">20-29 лет</Radio>\n                        <Radio value=\"30-39 лет\">30-39 лет</Radio>\n                        <Radio value=\"40-49 лет\">40-49 лет</Radio>\n                        <Radio value=\"50 и старше\">50 и старше</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('4_age')}\n            </div>\n\n            <div>\n                <Form.Item name=\"5_1_first_sex\" label=\"В каком возрасте у вас был первый сексуальный контакт?\">\n                    <Input placeholder=\"Возраст\"/>\n                </Form.Item>\n                <Form.Item name=\"5_2_first_sex\" label=\"Не было\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Не было\"/>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue(['5_1_first_sex', '5_2_first_sex'])}\n            </div>\n\n            <div>\n                <Form.Item name=\"6_1_sexual_partners_from_6_months\"\n                           label=\"Были ли у вас сексуальные партнеры за последние 6 месяцев (если да, укажите число)?\">\n                    <Input placeholder=\"Укажите число партнеров\"/>\n                </Form.Item>\n                <Form.Item name=\"6_2_sexual_partners_from_6_months\" label=\"Нет\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Нет\"/>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue(['6_1_sexual_partners_from_6_months', '6_2_sexual_partners_from_6_months'])}\n            </div>\n\n            <div>\n                <Form.Item required name=\"7_constant_sexual_partner\"\n                           label=\"Есть ли у вас постоянный сексуальный партнер?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('7_constant_sexual_partner')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"8_sex_using_a_condom\"\n                           label=\"Как часто вы занимались сексом в последние 6 месяцев, используя презерватив?\">\n                    <Radio.Group>\n                        <Radio value=\"Всегда / почти всегда\">Всегда / почти всегда</Radio>\n                        <Radio value=\"В большинстве случаев\">В большинстве случаев</Radio>\n                        <Radio value=\"Примерно в половине случаев\">Примерно в половине случаев</Radio>\n                        <Radio value=\"В меньшинстве случаев\">В меньшинстве случаев</Radio>\n                        <Radio value=\"Никогда\">Никогда</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('8_sex_using_a_condom')}\n            </div>\n\n            <div>\n                <Form.Item name=\"9_condom_for_sex_with_a_permanent\"\n                           label=\"Используете ли вы презерватив при сексе с постоянным партнером?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('9_condom_for_sex_with_a_permanent')}\n            </div>\n\n            <div>\n                <Form.Item name=\"10_condom_for_sex_with_a_club\"\n                           label=\"Используете ли вы презерватив при сексе со случайными партнерами?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('10_condom_for_sex_with_a_club')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"11_condom_for_last_sex\"\n                           label=\"Вы пользовались презервативом во время последнего секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('11_condom_for_last_sex')}\n            </div>\n\n            <div>\n                <Form.Item name=\"12_using_condom\"\n                           label=\"Используете ли вы презервативы при (возможны несколько вариантов):\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Вагинальном сексе\">Вагинальном сексе</Checkbox>\n                        <Checkbox value=\"Оральном сексе\">Оральном сексе</Checkbox>\n                        <Checkbox value=\"Анальном сексе\">Анальном сексе</Checkbox>\n                        <Checkbox value=\"Не использую\">Не использую</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('12_using_condom')}\n            </div>\n\n            <div>\n                <Form.Item name=\"13_1_no_using_condom\"\n                           label=\"Почему Вы не использовали презерватив со своим последним сексуальным партнером(возможны несколько вариантов)?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Я использовал его\">Я использовал его</Checkbox>\n                        <Checkbox value=\"У меня его не было\">У меня его не было</Checkbox>\n                        <Checkbox value=\"Я был в алкогольном/наркотическом опьянении\">Я был в\n                            алкогольном/наркотическом\n                            опьянении</Checkbox>\n                        <Checkbox value=\"Они слишком дорогие\">Они слишком дорогие</Checkbox>\n                        <Checkbox value=\"Партнер не хотел пользоваться презервативом\">Партнер не хотел пользоваться\n                            презервативом</Checkbox>\n                        <Checkbox value=\"Мы были готовы зачать ребенка\">Мы были готовы зачать ребенка</Checkbox>\n                        <Checkbox value=\"Я не люблю пользоваться презервативами\">Я не люблю пользоваться\n                            презервативами</Checkbox>\n                        <Checkbox value=\"Мне кажется, в этом не было необходимости\">Мне кажется, в этом не было\n                            необходимости</Checkbox>\n                        <Checkbox value=\"Я доверяю своему партнеру\">Я доверяю своему партнеру</Checkbox>\n                        <Checkbox value=\"Я просто не думал об этом\">Я просто не думал об этом</Checkbox>\n                        <Checkbox value=\"Я использую PrEP\">Я использую PrEP</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"13_2_no_using_condom\">\n                    <Input placeholder=\"Другое\"/>\n                </Form.Item>\n                {createResetValue(['13_1_no_using_condom', '13_2_no_using_condom'])}\n            </div>\n\n            <div>\n                <Form.Item required name=\"14_now_there_is_a_condom\"\n                           label=\"У Вас сейчас есть презерватив с собой?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('14_now_there_is_a_condom')}\n            </div>\n\n            <div>\n                <Form.Item name=\"15_with_whom_sex\" label=\"С кем у вас были сексуальные контакты последние 6 месяцев?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Мужчины\">Мужчины</Checkbox>\n                        <Checkbox value=\"Женщины\">Женщины</Checkbox>\n                        <Checkbox value=\"Трансгендеры\">Трансгендеры</Checkbox>\n                        <Checkbox value=\"Не было\">Не было</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('15_with_whom_sex')}\n            </div>\n\n            <div>\n                <Form.Item name=\"16_1_used_drugs\"\n                           label=\"Вы употребляли наркотики в последние 12 месяцев (если да, то какие)?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Не употреблял\">Не употреблял</Checkbox>\n                        <Checkbox value=\"Мефедрон\">Мефедрон</Checkbox>\n                        <Checkbox value=\"Марихуана\">Марихуана</Checkbox>\n                        <Checkbox value=\"Бутират\">Бутират</Checkbox>\n                        <Checkbox value=\"Кокаин\">Кокаин</Checkbox>\n                        <Checkbox value=\"Героин\">Героин</Checkbox>\n                        <Checkbox value=\"МДМА (экстази)\">МДМА (экстази)</Checkbox>\n                        <Checkbox value=\"Амфетамин\">Амфетамин</Checkbox>\n                        <Checkbox value=\"Метамфетамин\">Метамфетамин</Checkbox>\n                        <Checkbox value=\"LSD\">LSD</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"16_2_used_drugs\">\n                    <Input placeholder=\"Другое\"/>\n                </Form.Item>\n                {createResetValue(['16_1_used_drugs', '16_2_used_drugs'])}\n            </div>\n\n            <div>\n                <Form.Item required name=\"17_drugs_for_sex\"\n                           label=\"Используете ли вы наркотики для секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('17_drugs_for_sex')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"18_drugs_or_money_in_exchange_for_sex\"\n                           label=\"Приходилось ли вам получать или давать деньги или наркотики в обмен на сексуальные услуги в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, я давал\">Да, я давал</Radio>\n                        <Radio value=\"Да, я получал\">Да, я получал</Radio>\n                        <Radio value=\"И то и другое\">И то и другое</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('18_drugs_or_money_in_exchange_for_sex')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"19_sexually_transmitted_diseases\"\n                           label=\"За последние 12 месяцев у Вас были заболевания, передаваемые половым путем?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('19_sexually_transmitted_diseases')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"20_med_sexually_transmitted_diseases\"\n                           label=\"Обращались ли вы за медицинской консультацией по поводу ИППП в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('20_med_sexually_transmitted_diseases')}\n            </div>\n\n            <div>\n                <Form.Item name=\"21_1_diagnosed_gepatit\"\n                           label=\"Диагностировали у вас есть хронические формы гепатита? (если да, укажите форму: A, B, C, D, E)\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Нет\">Нет</Checkbox>\n                        <Checkbox value=\"Я не знаю об этой болезни\">Я не знаю об этой болезни</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item name=\"21_2_diagnosed_gepatit\">\n                    <Input placeholder=\"Другое\"/>\n                </Form.Item>\n                {createResetValue(['21_1_diagnosed_gepatit', '21_2_diagnosed_gepatit'])}\n            </div>\n\n            <div>\n                <Form.Item required name=\"22_diagnosed_with_syphilis\"\n                           label=\"Был ли у вас ранее диагностирован сифилис?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('22_diagnosed_with_syphilis')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"23_hiv_tested\"\n                           label=\"Вы когда-нибудь проходили тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('23_hiv_tested')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"24_how_often_hiv_tested\"\n                           label=\"Как часто вы проходите тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Раз в 3 месяца\">Раз в 3 месяца</Radio>\n                        <Radio value=\"Раз в 6 месяцев\">Раз в 6 месяцев</Radio>\n                        <Radio value=\"Раз в 12 месяцев\">Раз в 12 месяцев</Radio>\n                        <Radio value=\"Менее одного раза в 12 месяцев\">Менее одного раза в 12 месяцев</Radio>\n                        <Radio value=\"Первый раз\">Первый раз</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('24_how_often_hiv_tested')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"25_do_you_know_your_hiv_status\"\n                           label=\"Знаете ли вы свой ВИЧ-статус?\">\n                    <Radio.Group>\n                        <Radio value=\"Я ВИЧ-положительный\">Я ВИЧ-положительный</Radio>\n                        <Radio value=\"Я ВИЧ-отрицательный\">Я ВИЧ-отрицательный</Radio>\n                        <Radio value=\"Я не знаю свой ВИЧ-статус\">Я не знаю свой ВИЧ-статус</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('25_do_you_know_your_hiv_status')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"26_you_are_a_citizen_of_russia\"\n                           label=\"Вы гражданин России?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('26_you_are_a_citizen_of_russia')}\n            </div>\n\n            <div>\n                <Form.Item name=\"27_1_registration_on_the_territory\"\n                           label=\"У вас есть регистрация на территории региона проживания?\">\n                    <Radio.Group>\n                        <Radio value=\"Постоянная регистрация\">Постоянная регистрация</Radio>\n                        <Radio value=\"Временная регистрация\">Временная регистрация</Radio>\n                        <Radio value=\"Нет регистрации\">Нет регистрации</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {/*<Form.Item name=\"27_2_registration_on_the_territory\">*/}\n                {/*    <Input placeholder=\"Другое\"/>*/}\n                {/*</Form.Item>*/}\n                {/*{createResetValue(['27_1_registration_on_the_territory', '27_2_registration_on_the_territory'])}*/}\n                {createResetValue(['27_1_registration_on_the_territory'])}\n            </div>\n\n            <div>\n                <Form.Item required name=\"28_you_education\"\n                           label=\"Ваше образование?\">\n                    <Radio.Group>\n                        <Radio value=\"Не получил базового среднего образования (не закончил 8-9 классы школы)\">Не\n                            получил базового\n                            среднего образования (не закончил 8-9 классы школы)</Radio>\n                        <Radio\n                            value=\"Неполное среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)\">Неполное\n                            среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)</Radio>\n                        <Radio\n                            value=\"Общее среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)\">Общее\n                            среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)</Radio>\n                        <Radio\n                            value=\"Среднее специальное (окончил техникум / колледж / колледж со средним специальным образованием)\">Среднее\n                            специальное (окончил техникум / колледж / колледж со средним специальным\n                            образованием)</Radio>\n                        <Radio value=\"Неполное высшее образование (закончил 2-4 года университета)\">Неполное высшее\n                            образование\n                            (закончил 2-4 года университета)</Radio>\n                        <Radio value=\"Высшее (получил диплом университета)\">Высшее (получил диплом\n                            университета)</Radio>\n                        <Radio value=\"Академическая степень (кандидат наук, доктор наук)\">Академическая степень\n                            (кандидат наук,\n                            доктор наук)</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('28_you_education')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"29_the_nature_of_your_work\"\n                           label=\"Какое из следующих определений лучше всего описывает характер вашей работы на данный момент?\">\n                    <Radio.Group>\n                        <Radio value=\"Полная занятость\">Полная занятость</Radio>\n                        <Radio value=\"Частичная/неполная занятость\">Частичная/неполная занятость</Radio>\n                        <Radio\n                            value=\"Полная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Полная\n                            занятость в собственном бизнесе или в приносящей доход индивидуальной\n                            деятельности</Radio>\n                        <Radio\n                            value=\"Случайный заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Случайный\n                            заработок, неполная занятость в собственном бизнесе или в приносящей доход\n                            индивидуальной\n                            деятельности</Radio>\n                        <Radio value=\"Безработный (ищу работу)\">Безработный (ищу работу)</Radio>\n                        <Radio value=\"Я не работаю и не ищу работу\">Я не работаю и не ищу работу</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('29_the_nature_of_your_work')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"30_marital_status\"\n                           label=\"Ваше семейное положение?\">\n                    <Radio.Group>\n                        <Radio value=\"Никогда не был женат\">Никогда не был женат</Radio>\n                        <Radio value=\"Я живу вместе с партнером, но отношения не зарегистрированы\">Я живу вместе с\n                            партнером, но\n                            отношения не зарегистрированы</Radio>\n                        <Radio value=\"Женат/замужем\">Женат/замужем</Radio>\n                        <Radio value=\"Женат/замужем, живу отдельно от партнера\">Женат/замужем, живу отдельно от\n                            партнера</Radio>\n                        <Radio value=\"В разводе живу отдельно от партнера\">В разводе живу отдельно от\n                            партнера</Radio>\n                        <Radio value=\"В разводе, но живу с партнером\">В разводе, но живу с партнером</Radio>\n                        <Radio value=\"Вдовец/вдова\">Вдовец/вдова</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('30_marital_status')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"31_you_are_a_listen_PrEP\"\n                           label=\"Вы уже слышали о доконтактной профилактике (PrEP) до этого?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('31_you_are_a_listen_PrEP')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"32_you_are_a_interest_PrEP\"\n                           label=\"Вы были бы заинтересованы в использовании PrEP?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('32_you_are_a_interest_PrEP')}\n            </div>\n\n            <div>\n                <Form.Item required name=\"33_you_are_a_used_PrEP\"\n                           label=\"Вы когда-нибудь уже использовали доконтактную профилактику (PrEP)?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('33_you_are_a_used_PrEP')}\n            </div>\n\n            {prep && <div>\n                <Form.Item name=\"34_1_for_prep_you_use\"\n                           label=\"Для PrEP вы используете:\">\n                    <Radio.Group>\n                        <Radio value=\"Truvada\">Truvada</Radio>\n                        <Radio value=\"Дженерики Truvada\">Дженерики Truvada</Radio>\n                        <Radio value=\"Двухкомпонентную схему (тенофавир и ламивудин/эмтрицитабин)\">Двухкомпонентную\n                            схему\n                            (тенофавир и ламивудин/эмтрицитабин)</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"34_2_for_prep_you_use\">\n                    <Input placeholder=\"Другое\"/>\n                </Form.Item>\n                {createResetValue(['34_1_for_prep_you_use', '34_2_for_prep_you_use'])}\n            </div>}\n\n\n            {prep && <div>\n                <Form.Item required name=\"35_you_have_started_taking_prep\"\n                           label=\"Вы начали прием PrEP:\">\n                    <Radio.Group>\n                        <Radio value=\"После прохождения теста на ВИЧ и консультации с врачом\">После\n                            прохождения\n                            теста на\n                            ВИЧ и\n                            консультации с врачом</Radio>\n                        <Radio value=\"После теста на ВИЧ\">После теста на ВИЧ</Radio>\n                        <Radio value=\"Без каких-либо тестов и консультаций\">Без каких-либо тестов и\n                            консультаций</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('35_you_have_started_taking_prep')}\n            </div>}\n\n            <div>\n                <Form.Item\n                           name=\"36_hiv_test_result\"\n                           label=\"Результат теста на ВИЧ:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('36_hiv_test_result')}\n            </div>\n\n\n            <div>\n                <Form.Item  name=\"37_hepatitis_test_result\"\n                           label={`Результат теста на Гепатит С:`}>\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('37_hepatitis_test_result')}\n            </div>\n\n            <div>\n                <Form.Item  name=\"38_syphilis_test_result\"\n                           label={`Результат теста на Сифилис:`}>\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                {createResetValue('38_syphilis_test_result')}\n            </div>\n\n            <div>\n                <Form.Item name=\"39_consulting_on_regular_testing_provided\"\n                           label=\"Оказано консультирование по регулярному тестированию\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('39_consulting_on_regular_testing_provided')}\n            </div>\n\n            <div>\n                <Form.Item name=\"40_prevention_counseling_provided\"\n                           label=\"Оказано консультирование по профилактике\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('40_prevention_counseling_provided')}\n            </div>\n\n            <div>\n                <Form.Item name=\"41_provided_counseling_on_receiving_treatment_for_hiv\"\n                           label=\"Оказано консультирование по получению лечения для ВИЧ+\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n                {createResetValue('41_provided_counseling_on_receiving_treatment_for_hiv')}\n            </div>\n        </>\n    )\n}","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Form, Input, Button, DatePicker, Tabs, Switch, Select, Tag, Alert, Spin } from 'antd';\nimport MaskedInput from 'antd-mask-input'\nimport moment from 'moment'\nimport React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { findByCode, resetFilterState } from \"../../../redux/reducers/filter.reducer\";\nimport { findTesting, testing } from \"../../../redux/thunks/forms\";\nimport { findAllUsersForForms } from \"../../../redux/thunks/user.thunks\";\nimport { Success } from \"../../Success\";\nimport { FastTabs } from \"./fast-tabs\";\nimport { TestingDrugsUser } from \"./forms/testing-drugs-user\";\nimport { TestingGeneral } from \"./forms/testing-general\";\nimport { TestingMsm } from \"./forms/testing-msm\";\nimport noPride from './images/no-pride.jpg'\nimport pride from './images/pride.jpeg'\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nconst TestingForm = ({ pastTests }) => {\n    const defaultUser = localStorage.getItem('42_consultant')\n    const defaultCity = localStorage.getItem('46_city')\n    const history = useHistory();\n\n    const goTo = (path) => {\n        history.push(\"/\" + path.target.value)\n    }\n\n    const [users, setUsers] = useState([]);\n    const [prep, setPrep] = useState(false);\n    const [city, setCity] = useState(null);\n    const [expanded, setExpanded] = useState(true);\n    const [general, setGeneral] = useState(false);\n    const [drugsUsers, setDrugsUsers] = useState(false);\n    const [submitting, setSubmitting] = useState(false)\n    const [successful, setSuccessful] = useState(false);\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n    const subdivisionTestingForm = '2';\n\n    useEffect(() => {\n        findAllUsersForForms().then((data) => {\n            if (city) {\n                localStorage.removeItem('42_consultant')\n                setUsers(data.data.filter(i => i.city === city && i.subdivision.includes(subdivisionTestingForm)));\n                form.setFieldsValue({ \"42_consultant\": \"\" });\n            } else {\n                setUsers(data.data.filter(i => i.city === defaultCity && i.subdivision.includes(subdivisionTestingForm)));\n                form.setFieldsValue({ \"42_consultant\": defaultUser });\n            }\n        })\n\n        return () => {\n            dispatch(resetFilterState())\n        }\n        // eslint-disable-next-line\n    }, [city, defaultCity, dispatch]);\n\n    // if (localStorage.getItem('TESTING_FORM')) {\n    //     initialValues = {\n    //         ...JSON.parse(localStorage.getItem('TESTING_FORM')),\n    //         ...initialValues\n    //     }\n    // }\n\n    const resetForm = () => {\n        // initialValues = {}\n        // localStorage.removeItem(\"TESTING_FORM\")\n        dispatch(resetFilterState())\n        setSuccessful(false);\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFormLayoutChange = (values) => {\n        if (values[\"33_you_are_a_used_PrEP\"] !== \"Нет\") {\n            setPrep(true)\n        } else {\n            setPrep(false)\n        }\n    };\n\n    const onFinish = async (values) => {\n\n        const stateForm = new Object({\n            \"1_code\": values[\"1_code\"].replace(/[. /_]/g, '').toUpperCase(),\n            \"3_gender\": values[\"3_gender\"],\n            \"4_age\": values[\"4_age\"],\n            \"7_constant_sexual_partner\": values[\"7_constant_sexual_partner\"],\n            \"8_sex_using_a_condom\": values[\"8_sex_using_a_condom\"],\n            \"9_condom_for_sex_with_a_permanent\": values[\"9_condom_for_sex_with_a_permanent\"],\n            \"10_condom_for_sex_with_a_club\": values[\"10_condom_for_sex_with_a_club\"],\n            \"11_condom_for_last_sex\": values[\"11_condom_for_last_sex\"],\n            \"12_using_condom\": values[\"12_using_condom\"] ? values[\"12_using_condom\"].toString() : null,\n            \"14_now_there_is_a_condom\": values[\"14_now_there_is_a_condom\"],\n            \"15_with_whom_sex\": values[\"15_with_whom_sex\"] ? values[\"15_with_whom_sex\"].toString() : null,\n            \"17_drugs_for_sex\": values[\"17_drugs_for_sex\"],\n            \"18_drugs_or_money_in_exchange_for_sex\": values[\"18_drugs_or_money_in_exchange_for_sex\"],\n            \"19_sexually_transmitted_diseases\": values[\"19_sexually_transmitted_diseases\"],\n            \"20_med_sexually_transmitted_diseases\": values[\"20_med_sexually_transmitted_diseases\"],\n            \"22_diagnosed_with_syphilis\": values[\"22_diagnosed_with_syphilis\"],\n            \"23_hiv_tested\": values[\"23_hiv_tested\"],\n            \"24_how_often_hiv_tested\": values[\"24_how_often_hiv_tested\"],\n            \"25_do_you_know_your_hiv_status\": values[\"25_do_you_know_your_hiv_status\"],\n            \"26_you_are_a_citizen_of_russia\": values[\"26_you_are_a_citizen_of_russia\"],\n            \"28_you_education\": values[\"28_you_education\"],\n            \"29_the_nature_of_your_work\": values[\"29_the_nature_of_your_work\"],\n            \"30_marital_status\": values[\"30_marital_status\"],\n            \"31_you_are_a_listen_PrEP\": values[\"31_you_are_a_listen_PrEP\"],\n            \"32_you_are_a_interest_PrEP\": values[\"32_you_are_a_interest_PrEP\"],\n            \"33_you_are_a_used_PrEP\": values[\"33_you_are_a_used_PrEP\"],\n            \"35_you_have_started_taking_prep\": values[\"35_you_have_started_taking_prep\"],\n            \"36_hiv_test_result\": values[\"36_hiv_test_result\"],\n            \"37_hepatitis_test_result\": values[\"37_hepatitis_test_result\"],\n            \"38_syphilis_test_result\": values[\"38_syphilis_test_result\"],\n            \"39_consulting_on_regular_testing_provided\": values[\"39_consulting_on_regular_testing_provided\"] ? values[\"39_consulting_on_regular_testing_provided\"][0] : null,\n            \"40_prevention_counseling_provided\": values[\"40_prevention_counseling_provided\"] ? values[\"40_prevention_counseling_provided\"][0] : null,\n            \"41_provided_counseling_on_receiving_treatment_for_hiv\": values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"] ? values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"][0] : null,\n            \"42_consultant\": localStorage.getItem(\"42_consultant\"),\n            \"45_consultant_comment\": values[\"45_consultant_comment\"],\n            \"46_city\": localStorage.getItem(\"46_city\"),\n            \"47_type_form\": expanded ? \"MSM\" : drugsUsers ? \"PWID\" : \"short\",\n            \"47_how_long_have_you_been_using_drugs\": values[\"47_how_long_have_you_been_using_drugs\"],\n            \"62_have_you_used_drugs_in_past_12_m\": values[\"62_have_you_used_drugs_in_past_12_m\"],\n            \"48_ways_of_using_drugs\": values[\"48_ways_of_using_drugs\"] ? values[\"48_ways_of_using_drugs\"][0]: null,\n            \"51_shared_the_same_syringe_with_other_people\": values[\"51_shared_the_same_syringe_with_other_people\"],\n            \"52_who_did_they_share_the_syringe_with\": values[\"52_who_did_they_share_the_syringe_with\"] ? values[\"52_who_did_they_share_the_syringe_with\"][0]: null,\n            \"54_you_usually_disinfect_the_container\": values[\"54_you_usually_disinfect_the_container\"],\n            \"56_where_do_you_usually_get_syringes\": values[\"56_where_do_you_usually_get_syringes\"] ? values[\"56_where_do_you_usually_get_syringes\"][0] : null,\n            \"59_have_had_sex_in_the_past_12_months_using_a_condom\": values[\"59_have_had_sex_in_the_past_12_months_using_a_condom\"],\n            \"60_diagnosed_with_tuberculosis\": values[\"60_diagnosed_with_tuberculosis\"] ? values[\"60_diagnosed_with_tuberculosis\"][0] : null,\n            \"61_hiv_tested_12_m\": values[\"61_hiv_tested_12_m\"],\n        })\n\n        const createOtherFields = () => {\n\n            // \"2_how_did_you_know\": [...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"]],\n            if (values[\"2_1_how_did_you_know\"]?.length && values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"]].toString()\n            } else if (values[\"2_1_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = values[\"2_1_how_did_you_know\"].toString()\n            } else if (values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [values[\"2_2_how_did_you_know\"]].toString()\n            } else {\n                stateForm[\"2_how_did_you_know\"] = null\n            }\n\n            // \"5_first_sex\": [...values[\"5_1_first_sex\"], values[\"5_2_first_sex\"]],\n            if (values[\"5_2_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_2_first_sex\"][0]\n            } else if (values[\"5_1_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_1_first_sex\"]\n            } else {\n                stateForm[\"5_first_sex\"] = null\n            }\n\n            // \"6_sexual_partners_from_6_months\": [...values[\"6_1_sexual_partners_from_6_months\"], values[\"6_2_sexual_partners_from_6_months\"]],\n            if (values[\"6_2_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_2_sexual_partners_from_6_months\"][0]\n            } else if (values[\"6_1_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_1_sexual_partners_from_6_months\"]\n            } else {\n                stateForm[\"6_sexual_partners_from_6_months\"] = null\n            }\n\n            // \"13_no_using_condom\": [...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"]],\n            if (values[\"13_1_no_using_condom\"]?.length && values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"]].toString()\n            } else if (values[\"13_1_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = values[\"13_1_no_using_condom\"].toString()\n            } else if (values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [values[\"13_2_no_using_condom\"]].toString()\n            } else {\n                stateForm[\"13_no_using_condom\"] = null\n            }\n\n            // \"50_what_drugs_did_you_use_injection\": [...values[\"50_1_what_drugs_did_you_use_injection\"], values[\"50_2_what_drugs_did_you_use_injection\"]],\n            if (values[\"50_1_what_drugs_did_you_use_injection\"]?.length && values[\"50_2_what_drugs_did_you_use_injection\"]?.length) {\n                stateForm[\"50_what_drugs_did_you_use_injection\"] = [...values[\"50_1_what_drugs_did_you_use_injection\"], values[\"50_2_what_drugs_did_you_use_injection\"]].toString()\n            } else if (values[\"50_1_what_drugs_did_you_use_injection\"]?.length) {\n                stateForm[\"50_what_drugs_did_you_use_injection\"] = values[\"50_1_what_drugs_did_you_use_injection\"].toString()\n            } else if (values[\"50_2_what_drugs_did_you_use_injection\"]?.length) {\n                stateForm[\"50_what_drugs_did_you_use_injection\"] = [values[\"50_2_what_drugs_did_you_use_injection\"]].toString()\n            } else {\n                stateForm[\"50_what_drugs_did_you_use_injection\"] = null\n            }\n\n            // \"49_what_drugs_did_you_use_non_injection\": [...values[\"49_1_what_drugs_did_you_use_non_injection\"], values[\"49_2_what_drugs_did_you_use_non_injection\"]],\n            if (values[\"49_1_what_drugs_did_you_use_non_injection\"]?.length && values[\"49_2_what_drugs_did_you_use_non_injection\"]?.length) {\n                stateForm[\"49_what_drugs_did_you_use_non_injection\"] = [...values[\"49_1_what_drugs_did_you_use_non_injection\"], values[\"49_2_what_drugs_did_you_use_non_injection\"]].toString()\n            } else if (values[\"49_1_what_drugs_did_you_use_non_injection\"]?.length) {\n                stateForm[\"49_what_drugs_did_you_use_non_injection\"] = values[\"49_1_what_drugs_did_you_use_non_injection\"].toString()\n            } else if (values[\"49_2_what_drugs_did_you_use_non_injection\"]?.length) {\n                stateForm[\"49_what_drugs_did_you_use_non_injection\"] = [values[\"49_2_what_drugs_did_you_use_non_injection\"]].toString()\n            } else {\n                stateForm[\"49_what_drugs_did_you_use_non_injection\"] = null\n            }\n\n            // \"16_used_drugs\": [...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"]],\n            if (values[\"16_1_used_drugs\"]?.length && values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"]].toString()\n            } else if (values[\"16_1_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = values[\"16_1_used_drugs\"].toString()\n            } else if (values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [values[\"16_2_used_drugs\"]].toString()\n            } else {\n                stateForm[\"16_used_drugs\"] = null\n            }\n\n            // ?! \"21_used_drugs\": [...values[\"21_1_used_drugs\"], values[\"21_2_used_drugs\"]],\n            if (values[\"21_1_diagnosed_gepatit\"]?.length && values[\"21_2_diagnosed_gepatit\"]?.length) {\n                stateForm[\"21_diagnosed_gepatit\"] = [...values[\"21_1_diagnosed_gepatit\"], values[\"21_2_diagnosed_gepatit\"]].toString()\n            } else if (values[\"21_1_diagnosed_gepatit\"]?.length) {\n                stateForm[\"21_diagnosed_gepatit\"] = values[\"21_1_diagnosed_gepatit\"].toString()\n            } else if (values[\"21_2_diagnosed_gepatit\"]?.length) {\n                stateForm[\"21_diagnosed_gepatit\"] = [values[\"21_2_diagnosed_gepatit\"]].toString()\n            } else {\n                stateForm[\"21_diagnosed_gepatit\"] = null\n            }\n\n            // \"53_why_do_you_use_the_same_syringe\": [...values[\"53_1_why_do_you_use_the_same_syringe\"], values[\"53_2_why_do_you_use_the_same_syringe\"]],\n            if (values[\"53_1_why_do_you_use_the_same_syringe\"]?.length && values[\"53_2_why_do_you_use_the_same_syringe\"]?.length) {\n                stateForm[\"53_why_do_you_use_the_same_syringe\"] = [...values[\"53_1_why_do_you_use_the_same_syringe\"], values[\"53_2_why_do_you_use_the_same_syringe\"]].toString()\n            } else if (values[\"53_1_why_do_you_use_the_same_syringe\"]?.length) {\n                stateForm[\"53_why_do_you_use_the_same_syringe\"] = values[\"53_1_why_do_you_use_the_same_syringe\"].toString()\n            } else if (values[\"53_2_why_do_you_use_the_same_syringe\"]?.length) {\n                stateForm[\"53_why_do_you_use_the_same_syringe\"] = [values[\"53_2_why_do_you_use_the_same_syringe\"]].toString()\n            } else {\n                stateForm[\"53_why_do_you_use_the_same_syringe\"] = null\n            }\n\n            // \"55_how_do_you_usually_disinfect_syringes_and_needles\": [...values[\"55_1_how_do_you_usually_disinfect_syringes_and_needles\"], values[\"55_2_how_do_you_usually_disinfect_syringes_and_needles\"]],\n            if (values[\"55_1_how_do_you_usually_disinfect_syringes_and_needles\"]?.length && values[\"55_2_how_do_you_usually_disinfect_syringes_and_needles\"]?.length) {\n                stateForm[\"55_how_do_you_usually_disinfect_syringes_and_needles\"] = [...values[\"55_1_how_do_you_usually_disinfect_syringes_and_needles\"], values[\"55_2_how_do_you_usually_disinfect_syringes_and_needles\"]].toString()\n            } else if (values[\"55_1_how_do_you_usually_disinfect_syringes_and_needles\"]?.length) {\n                stateForm[\"55_how_do_you_usually_disinfect_syringes_and_needles\"] = values[\"55_1_how_do_you_usually_disinfect_syringes_and_needles\"].toString()\n            } else if (values[\"55_2_how_do_you_usually_disinfect_syringes_and_needles\"]?.length) {\n                stateForm[\"55_how_do_you_usually_disinfect_syringes_and_needles\"] = [values[\"55_2_how_do_you_usually_disinfect_syringes_and_needles\"]].toString()\n            } else {\n                stateForm[\"55_how_do_you_usually_disinfect_syringes_and_needles\"] = null\n            }\n\n            // \"57_undergo_treatment_in_a_narcological_hospital\": [...values[\"57_1_undergo_treatment_in_a_narcological_hospital\"], values[\"57_2_undergo_treatment_in_a_narcological_hospital\"]],\n            if (values[\"57_2_undergo_treatment_in_a_narcological_hospital\"]?.length) {\n                stateForm[\"57_undergo_treatment_in_a_narcological_hospital\"] = values[\"57_2_undergo_treatment_in_a_narcological_hospital\"][0]\n            } else if (values[\"57_1_undergo_treatment_in_a_narcological_hospital\"]?.length) {\n                stateForm[\"57_undergo_treatment_in_a_narcological_hospital\"] = values[\"57_1_undergo_treatment_in_a_narcological_hospital\"]\n            } else {\n                stateForm[\"57_undergo_treatment_in_a_narcological_hospital\"] = null\n            }\n\n            // \"58_how_many_sexual_partners\": [...values[\"58_1_how_many_sexual_partners\"], values[\"58_2_how_many_sexual_partners\"]],\n            if (values[\"58_2_how_many_sexual_partners\"]?.length) {\n                stateForm[\"58_how_many_sexual_partners\"] = values[\"58_2_how_many_sexual_partners\"][0]\n            } else if (values[\"58_1_how_many_sexual_partners\"]?.length) {\n                stateForm[\"58_how_many_sexual_partners\"] = values[\"58_1_how_many_sexual_partners\"]\n            } else {\n                stateForm[\"58_how_many_sexual_partners\"] = null\n            }\n\n            // \"27_registration_on_the_territory\": [...values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"]],\n            if (values[\"27_1_registration_on_the_territory\"]?.length && values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"]].toString()\n            } else if (values[\"27_1_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = values[\"27_1_registration_on_the_territory\"].toString()\n            } else if (values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [values[\"27_2_registration_on_the_territory\"]].toString()\n            } else {\n                stateForm[\"27_registration_on_the_territory\"] = null\n            }\n\n            // \"34_for_prep_you_use\": [...values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"]],\n            if (values[\"34_1_for_prep_you_use\"]?.length && values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"]].toString()\n            } else if (values[\"34_1_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = values[\"34_1_for_prep_you_use\"].toString()\n            } else if (values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [values[\"34_2_for_prep_you_use\"]].toString()\n            } else {\n                stateForm[\"34_for_prep_you_use\"] = null\n            }\n\n            if (values[\"43_date\"]) {\n                stateForm[\"43_date\"] = values[\"43_date\"].format(\"YYYY-MM-DD HH:mm:ss\")\n            } else {\n                stateForm[\"43_date\"] = moment().format(\"YYYY-MM-DD HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n\n        setSubmitting(true)\n        dispatch(testing(fields))\n            .then((data) => {\n                setSubmitting(false)\n                localStorage.removeItem(\"TESTING_FORM\")\n                form.resetFields()\n                setSuccessful(data);\n            })\n            .catch(() => {\n                setSuccessful(false);\n            });\n    }\n\n    function callback(key) {\n        setGeneral(key === \"0\")\n        setExpanded(key === \"1\")\n        setDrugsUsers(key === \"2\")\n\n        form.setFieldsValue({\n            \"47_type_form\": key\n        });\n\n    }\n\n    function CodeInput(props) {\n        return <>\n            <MaskedInput\n                className={styles.code}\n                mask=\"W/WW/WW/WW.WW.WWWW\"\n                placeholder=\"П/ИИ/ММ/ДД.ДД.ДДДД\"\n                isRevealingMask={true}\n                size=\"18\"\n                {...props}\n                formatCharacters={{\n                    'W': {\n                        validate() {\n                            return true\n                        },\n                        transform(char) {\n                            return char.toUpperCase()\n                        }\n                    }\n                }}\n            />\n\n            <Input\n                {...props}\n                onChange={onChangeCode}/>\n        </>\n    }\n\n    const optionsWithDisabled = [\n        { label: 'Знакомые', value: 'Знакомые' },\n        { label: 'Поисковые системы', value: 'Поисковые системы' },\n        { label: 'Телеграм', value: 'Телеграм' },\n        { label: 'Тестировался здесь ранее', value: 'Тестировался здесь ранее' },\n        { label: 'Соцсети/сайт фонда', value: 'Соцсети/сайт фонда' },\n        { label: 'Хорнет', value: 'Хорнет' },\n        { label: 'Аутрич в клубах', value: 'Аутрич в клубах' },\n        { label: 'Экраны в клубах', value: 'Экраны в клубах' },\n        { label: 'Контекстная реклама в Гугле', value: 'Контекстная реклама в Гугле' },\n        { label: 'Видео-реклама в Инстаграм', value: 'Видео-реклама в Инстаграм' },\n    ];\n\n    const onChangeCode = (event) => {\n        const value = event.target.value\n        form.setFieldsValue({\n            \"1_code\": value\n        });\n        const valueClean = value.replace(/[. /_]/g, '')\n        if (valueClean.length === 13) {\n            dispatch(findTesting({\n                code: valueClean\n            })).then((data) => {\n                dispatch(findByCode(data.data))\n                form.setFieldsValue({\n                    \"1_code\": value\n                });\n            })\n        }\n    }\n\n    const setCityHandler = (city) => {\n        localStorage.setItem('46_city', city)\n        setCity(city)\n        form.setFieldsValue({\n            \"46_city\": city\n        });\n    }\n\n    const setUserHandler = (consultant) => {\n        localStorage.setItem('42_consultant', consultant)\n        form.setFieldsValue({\n            \"42_consultant\": consultant\n        });\n    }\n\n    const reloadForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n    }\n\n    const createResetValue = (name) => {\n        let values\n        if (typeof name === \"object\") {\n            values = name.map(i => ({ name: i }))\n        } else {\n            values = [{ name: name }]\n        }\n\n        const resetField = () => {\n            if (name === '1_code') dispatch(resetFilterState())\n            return values.map(item => form.setFieldsValue({ [item.name]: null }))\n        }\n\n        return (\n            <div className={styles.reset}>\n                <Button icon={<DeleteOutlined/>} onClick={name ? resetField : resetForm}/>\n            </div>\n        )\n    }\n\n    if (successful) {\n        return <Success reload={reloadForm} data={successful}/>\n    }\n\n    return (\n        <div className={styles.container}>\n\n            <FastTabs goTo={goTo}/>\n\n            <div className={styles.image}\n                 style={expanded ? { backgroundImage: `url(${pride})` } : { backgroundImage: `url(${noPride})` }}\n            />\n\n            <div className={styles.titleContainer}>\n                <div className={styles.line}/>\n                <h1 className={styles.h1}>Опрос тестируемых</h1>\n                <p className={styles.required}>* Обязательные поля</p>\n\n                {createResetValue()}\n            </div>\n\n            <Form\n                layout={'vertical'}\n                form={form}\n                onFinish={onFinish}\n                onValuesChange={onFormLayoutChange}\n                // initialValues={initialValues}\n            >\n\n                <div className={styles.tabs}>\n                    <Tabs size=\"large\" defaultActiveKey={expanded} onChange={callback}>\n                        <TabPane tab=\"МСМ\" key=\"1\"/>\n                        <TabPane tab=\"ПИН\" key=\"2\"/>\n                        <TabPane tab=\"Общая поп.\" key=\"0\"/>\n                    </Tabs>\n                </div>\n\n                <div>\n                    <Form.Item name=\"1_code\"\n                               label=\"Уникальный идентификационный код (УИК) респондента (пол, 2 буквы имени, 2 буквы имени матери, дата рождения):\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Поле является обязательным для сохранения',\n                                   },\n                               ]}\n                    >\n                        <CodeInput/>\n                    </Form.Item>\n\n                    {pastTests && <div>\n                        {pastTests.map(i => i[\"45_consultant_comment\"] &&\n                            <Alert message={i[\"45_consultant_comment\"]} type=\"info\" showIcon description={\n                                <div>{moment(i[\"43_date\"]).format('DD.MM.YYYY HH:mm')} {i[\"42_consultant\"] &&\n                                <span>({i[\"42_consultant\"]})</span>}</div>}/>)}\n                        {pastTests.length > 0 && <br/>}\n                        {pastTests.length > 0 ? [...pastTests].sort(function (a, b) {\n                                if (b[\"43_date\"] < a[\"43_date\"]) {\n                                    return -1;\n                                }\n                                if (b[\"43_date\"] > a[\"43_date\"]) {\n                                    return 1;\n                                }\n                                return -1;\n                            }).map(i =>\n                                <Tag>{moment(i[\"43_date\"], 'MM/DD/YYYY HH:mm:ss')\n                                    .format('DD.MM.YYYY HH:mm')}</Tag>)\n                            : <i style={{ color: \"gray\" }}>тестирований с этим кодом не найдено</i>\n                        }\n                    </div>}\n\n                    {createResetValue('1_code')}\n                </div>\n\n                {expanded && <TestingMsm\n                    optionsWithDisabled={optionsWithDisabled}\n                    createResetValue={createResetValue}\n                    prep={prep}\n                />}\n\n                {general && <TestingGeneral createResetValue={createResetValue}/>}\n\n                {drugsUsers && <TestingDrugsUser createResetValue={createResetValue}/>}\n\n                <Form.Item required name=\"43_date\" label={`Дата и Время`}>\n                    <DatePicker showNow defaultValue={moment()} showTime format={'DD.MM.YYYY HH:mm'}/>\n                </Form.Item>\n\n                <Form.Item name=\"46_city\" label=\"Город\">\n                    <Select defaultValue={defaultCity} onChange={setCityHandler}>\n                        <Option value=\"moscow\">Москва</Option>\n                        <Option value=\"spb\">Санкт-Петербург</Option>\n                        <Option value=\"nn\">Нижний Новгород</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item name=\"42_consultant\" label=\"Консультант\">\n                    {\n                        users.length\n                            ? (\n                                <Select onChange={setUserHandler}>\n                                    {users.map(user => <Option value={user.appointment}>{user.appointment}</Option>)}\n                                </Select>\n                            )\n                            : city\n                                ? <i>Для города не сохранены Консультанты</i>\n                                : <i>Выбор доступен после указания города</i>\n                    }\n                </Form.Item>\n\n                <div>\n                    <Form.Item name=\"45_consultant_comment\" label=\"Комментарий\">\n                        <Input.TextArea placeholder=\"Комментарий\"/>\n                    </Form.Item>\n                    {createResetValue('45_consultant_comment')}\n                </div>\n\n                <Form.Item style={{ textAlign: \"center\" }}>\n                    {submitting ? <Spin size=\"large\"/>\n                        : <Button htmlType=\"submit\" type=\"primary\" size=\"large\">Сохранить опрос</Button>}\n                </Form.Item>\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestingForm);\n","import React from \"react\";\nimport { Select, Form, Input, Button } from 'antd';\n\nimport AuthService from \"../../services/auth.service\";\n\nconst { Option } = Select;\n\nexport const Register = () => {\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n\n        if (!values.city) {\n\n        }\n\n        AuthService.register(values).then(() => {\n            window.location.reload();\n        })\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form\n            name=\"basic\"\n            layout=\"vertical\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Полное имя (для форм и списков)\"\n                name=\"appointment\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Пароль\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input password!',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Город\"\n                name=\"city\"\n            >\n                <Select placeholder=\"Город\" >\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"spb\">Санкт-Петербург</Option>\n                    <Option value=\"nn\">Нижний Новгород</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Добавить сотрудника\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Select, Form, Input, Button, message } from 'antd';\n\nimport AuthService from \"../../services/auth.service\";\n\nconst { Option } = Select;\n\nexport const ChangePassword = ({ setVisible, values }) => {\n    const [validate, setValidate] = useState(false)\nconsole.log('values', values)\n    const onFinish = (pass) => {\n        console.log('Success username:', {username: values.username, password: pass.password});\n        AuthService.changePassword({username: values.username, password: pass.password}).then(() => {\n            message.success(\"Пароль успешно изменён\")\n            setVisible(false)\n        })\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const onValuesChange = (changedValues, allValues) => {\n        console.log('changedValues, allValues', changedValues, allValues)\n        if (allValues.password === allValues[\"password_2\"] && allValues.password) {\n            setValidate(true)\n        } else {\n            setValidate(false)\n        }\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            layout=\"vertical\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            onValuesChange={onValuesChange}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Пароль\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        min: 6,\n                        message: 'Минимальная длинна 6 символов',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Повторить пароль\"\n                name=\"password_2\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input password!',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item>\n                {validate ? <Button type=\"primary\" htmlType=\"submit\">\n                    Изменить пароль сотрудника\n                </Button> : \"Введенные пароли не совпадают или пароль не введён\"}\n\n            </Form.Item>\n\n        </Form>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { Modal, Table, Select, PageHeader, message } from \"antd\";\nimport { findAllRoles, findAllUsers, findRoles, findSubdivisions } from \"../../../redux/thunks/user.thunks\";\nimport { Button } from 'antd';\nimport styles from \"../../reports/testing/styles.module.scss\";\nimport { Register } from \"../../Forms/Register\";\nimport { ChangePassword } from \"../../Forms/ChangePassword\";\nimport AuthService from \"../../../services/auth.service\";\n\nconst { Option } = Select;\n\nexport const UserManagement = () => {\n\n    const [users, setUsers] = useState(null)\n    const [roles, setRoles] = useState(null)\n    const [subdivisions, setSubdivisions] = useState(null)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [isModalChangePasswordVisible, setIsModalChangePasswordVisible] = useState(false);\n\n    const cities = [\n        {\n            name: 'Москва',\n            code: 'moscow'\n        },\n        {\n            name: 'Санкт-Петербург',\n            code: 'spb'\n        },\n        {\n            name: 'Нижний Новгород',\n            code: 'nn'\n        },\n    ]\n\n    useEffect(() => {\n\n        findRoles().then(roles => setRoles(roles.data))\n        findSubdivisions().then(subdivisions => setSubdivisions(subdivisions.data))\n\n        findAllUsers().then((dataUsers) => {\n            findAllRoles().then((dataRoles) => {\n\n                setUsers(dataUsers.data.map(user => ({\n                        ...user,\n                        roleId: dataRoles.data.find(role => user.id === role.userId).roleId,\n                        subdivisionId: dataRoles.data.find(role => user.id === role.userId).subdivisionId,\n                    })\n                ).sort((a, b) => b.roleId - a.roleId))\n            })\n        })\n    }, [])\n\n    console.log('users', users)\n    console.log('roles', roles)\n    console.log('subdivisions', subdivisions)\n\n    const handleChangeCity = (city, user) => {\n        AuthService.changeCity({ username: user.username, city }).then(() => {\n            message.success(\"Город успешно изменён\")\n        })\n    }\n\n    const handleChangeRole = (role, user) => {\n        AuthService.changeRole({ userId: user.id, roleId: role }).then(() => {\n            message.success(\"Роль пользователя успешно изменена\")\n        })\n    }\n\n    const handleChangeSubdivisions = (subdivisionsId, user) => {\n        // const a = JSON.stringify(subdivisionsId)\n        console.log('subdivisionsId, user', subdivisionsId, user)\n        AuthService.changeSubdivisions({ userId: user.id, subdivisionsId: subdivisionsId.join(\".\") }).then(() => {\n            message.success(\"Подразделения пользователя успешно изменены\")\n        })\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleCancelChangePassword = () => {\n        setIsModalChangePasswordVisible(false);\n    };\n\n    const columns = [\n        {\n            title: 'Учётка (username)',\n            width: 100,\n            dataIndex: 'username',\n            key: 'username',\n            fixed: 'left',\n        },\n        {\n            title: 'Полное имя (в списках)',\n            width: 100,\n            dataIndex: 'appointment',\n            key: 'appointment'\n        },\n        {\n            title: 'Роль сотрудника',\n            dataIndex: 'roleId',\n            key: '2',\n            width: 150,\n            render: (data, values) => {\n                return (\n                    <Select defaultValue={data} style={{ width: 200 }}\n                            onChange={(val) => handleChangeRole(val, values)}>\n                        {roles.map(role => <Option value={role.id}>{role.label}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Доступны подразделения',\n            dataIndex: 'subdivisionId',\n            key: '1',\n            width: 150,\n            render: (data, values) => {\n                return (\n                    subdivisions && <Select\n                        mode=\"multiple\"\n                        defaultValue={\n                            !!data ? data.split('.').map(i => subdivisions.find(value => value.id === +i).id) : undefined\n                        }\n                        style={{ width: 250 }}\n                        onChange={(val) => handleChangeSubdivisions(val, values)}\n                    >\n                        {subdivisions.map(subdivision => <Option value={subdivision.id}>{subdivision.label}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Город',\n            dataIndex: 'city',\n            key: '2',\n            width: 150,\n            render: (data, values) => {\n                return (\n                    <Select defaultValue={data} style={{ width: 200 }}\n                            onChange={(val) => handleChangeCity(val, values)}>\n                        {cities.map(city => <Option value={city.code}>{city.name}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Создан',\n            width: 100,\n            dataIndex: 'createdAt',\n            key: 'createdAt'\n        },\n        {\n            key: 'operation',\n            fixed: 'right',\n            width: 100,\n            render: (event) => <>\n                <Button type=\"primary\" ghost size=\"small\" onClick={() => {\n                    setIsModalChangePasswordVisible(event)\n                }}>Изменить пароль</Button>\n                {/*<Button type=\"primary\" ghost size=\"small\" danger>Удалить</Button>*/}\n            </>,\n        }\n    ];\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Сотрудники\"\n                subTitle=\"Управление учётными записями и правами\"\n                extra={<Button onClick={showModal} type=\"primary\">Добавить сотрудника</Button>}\n            />\n            <br/>\n\n            <p>\n                <b>Роль сотрудника</b> <br/>\n                <i>Консультант</i>: может создавать формы в выбранных подразделениях <br/>\n                <i>Модератор</i>: как user + доступен раздел отчёты по его подразделениям <br/>\n                <i>Администратор</i>: абсолютный доступ КО ВСЕМУ, вкладка \"Админка\", управление пользователями\n            </p>\n\n            <Table\n                pagination={false}\n                size=\"small\"\n                columns={columns}\n                dataSource={users}\n            />\n\n            <Modal title=\"Регистрация нового сотрудника\" visible={isModalVisible} onCancel={handleCancel}\n                   footer={false}>\n                <Register/>\n            </Modal>\n\n            <Modal title={`Изменение пароля сотрудника ${isModalChangePasswordVisible.appointment}`}\n                   visible={!!isModalChangePasswordVisible} onCancel={handleCancelChangePassword}\n                   footer={false}>\n                <ChangePassword setVisible={setIsModalChangePasswordVisible} values={isModalChangePasswordVisible}/>\n            </Modal>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { ADMIN } from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport UserService from \"../services/user.service\";\nimport TestingReport from \"./reports/testing/TestingReport\";\nimport { UserManagement } from \"./admin/user-management\";\n\nconst { Content, Sider } = Layout;\nconst BoardAdmin = () => {\n    const [tab, setTab] = useState(\"1\");\n\n    const setActiveTab = (e) => {\n        setTab(e.key)\n    }\n\n    const setComponent = (tab) => {\n       switch (tab) {\n           case \"1\":\n               return <UserManagement/>\n           case \"2\":\n               return \"создание сущностей, редактирование, удаление, вход в ситему, просмотр отчета и т.д.\"\n           default:\n               return \"\"\n       }\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <Menu onSelect={setActiveTab} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[tab]}>\n                    <Menu.Item key=\"1\" >\n                       Сотрудники\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<UserOutlined/>}>\n                        Журнал действий\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout>\n                {/*<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}/>*/}\n                <Content style={{ margin: '24px 16px 0' }}>\n                    {setComponent(tab)}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nexport default useAuth(BoardAdmin, ADMIN);","import React from 'react';\nimport { Result, Button } from 'antd';\nimport { useHistory } from \"react-router-dom\";\n\nexport const Success = (props) => {\n    console.log('props successful', props.data)\n    const history = useHistory();\n\n    const goToForms = () => {\n        history.push(\"/forms\")\n    }\n\n    return (\n        <Result\n            status=\"success\"\n            title={`Обращение сохранено`}\n            subTitle={`Код обращения ${props.data.data.data.id}.`}\n            extra={[\n                <Button type=\"primary\" key=\"buy\" onClick={props.reload}>Добавить новое</Button>,\n            ]}\n        />\n    )\n}","import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Form, Input, Button, Checkbox, Radio, Select, Spin, DatePicker } from 'antd';\nimport moment from 'moment'\nimport React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { findByCode, resetFilterState } from \"../../../redux/reducers/filter.reducer\";\nimport { hotLineForm } from \"../../../redux/thunks/forms\";\nimport { findAllUsersForForms } from \"../../../redux/thunks/user.thunks\";\nimport { FastTabs } from \"../testing/fast-tabs\";\nimport noPride from \"./image.jpeg\";\nimport styles from './styles.module.scss'\nimport { Success } from \"./Success\";\n\nconst { Option } = Select;\n\nconst HotLineForm = () => {\n    const defaultCity = localStorage.getItem('1_city')\n    const defaultUser = localStorage.getItem('2_consultant')\n    const history = useHistory();\n\n    const goTo = (path) => {\n        history.push(\"/\" + path.target.value)\n    }\n\n    const [users, setUsers] = useState([])\n    const [city, setCity] = useState(null)\n    const [submitting, setSubmitting] = useState(false)\n    const [successful, setSuccessful] = useState(false);\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n    const subdivisionHotLineForm = '4'\n\n    const sortByName = (a, b) => {\n        var nameA = a.appointment.toUpperCase();\n        var nameB = b.appointment.toUpperCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n    }\n\n    useEffect(() => {\n        findAllUsersForForms().then((data) => {\n            if (city) {\n                localStorage.removeItem('2_consultant')\n                setUsers(data.data\n                    .filter(i => i.city === city && i.subdivision.includes(subdivisionHotLineForm))\n                    .sort((a, b) => sortByName(a, b)));\n\n                form.setFieldsValue({\n                    \"2_consultant\": \"\"\n                });\n            } else {\n                setUsers(data.data\n                    .filter(i => i.city === defaultCity && i.subdivision.includes(subdivisionHotLineForm))\n                    .sort((a, b) => sortByName(a, b)));\n\n                form.setFieldsValue({\n                    \"2_consultant\": defaultUser\n                });\n            }\n        })\n\n        return () => {\n            dispatch(resetFilterState())\n        }\n    }, [city, defaultCity, defaultUser, dispatch, form]);\n\n    useEffect(() => {\n        console.log('first')\n        defaultCity && form.setFieldsValue({\n            \"1_city\": defaultCity\n        });\n        if (defaultUser) {\n            form.setFieldsValue({\n                \"2_consultant\": defaultUser\n            });\n        }\n        // eslint-disable-next-line\n    }, [successful, dispatch])\n\n    const resetForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFinish = async (values) => {\n\n        const stateForm = new Object({\n            \"1_city\": localStorage.getItem(\"1_city\"),\n            \"2_consultant\": localStorage.getItem(\"2_consultant\"),\n            \"3_source_of_appeal\": values[\"3_source_of_appeal\"],\n            \"7_consulting_on_regular_testing_provided\": values[\"7_consulting_on_regular_testing_provided\"] ? values[\"7_consulting_on_regular_testing_provided\"][0] : null,\n            \"8_prevention_counseling_provided\": values[\"8_prevention_counseling_provided\"] ? values[\"8_prevention_counseling_provided\"][0] : null,\n            \"9_provided_counseling_on_receiving_treatment_for_hiv\": values[\"9_provided_counseling_on_receiving_treatment_for_hiv\"] ? values[\"9_provided_counseling_on_receiving_treatment_for_hiv\"][0] : null,\n            \"10_consultant_comment\": values[\"10_consultant_comment\"],\n        })\n\n        const createOtherFields = () => {\n\n            // 5_1_reason_for_petition 5_2_reason_for_petition\n            if (values[\"5_1_reason_for_petition\"]?.length && values[\"5_2_reason_for_petition\"]?.length) {\n                stateForm[\"5_reason_for_petition\"] = [...values[\"5_1_reason_for_petition\"], values[\"5_2_reason_for_petition\"]].toString()\n            } else if (values[\"5_1_reason_for_petition\"]?.length) {\n                stateForm[\"5_reason_for_petition\"] = values[\"5_1_reason_for_petition\"].toString()\n            } else if (values[\"5_2_reason_for_petition\"]?.length) {\n                stateForm[\"5_reason_for_petition\"] = [values[\"5_2_reason_for_petition\"]].toString()\n            } else {\n                stateForm[\"5_reason_for_petition\"] = null\n            }\n\n            // 6_1_consultation_results 6_2_consultation_results\n            if (values[\"6_1_consultation_results\"]?.length && values[\"6_2_consultation_results\"]?.length) {\n                stateForm[\"6_consultation_results\"] = [...values[\"6_1_consultation_results\"], values[\"6_2_consultation_results\"]].toString()\n            } else if (values[\"6_1_consultation_results\"]?.length) {\n                stateForm[\"6_consultation_results\"] = values[\"6_1_consultation_results\"].toString()\n            } else if (values[\"6_2_consultation_results\"]?.length) {\n                stateForm[\"6_consultation_results\"] = [values[\"6_2_consultation_results\"]].toString()\n            } else {\n                stateForm[\"6_consultation_results\"] = null\n            }\n\n            if (values[\"4_date\"]) {\n                stateForm[\"4_date\"] = values[\"4_date\"].format(\"YYYY-MM-DD HH:mm:ss\")\n            } else {\n                stateForm[\"4_date\"] = moment().format(\"YYYY-MM-DD HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n        setSubmitting(true)\n\n        dispatch(hotLineForm(fields))\n            .then((data) => {\n                setSubmitting(false)\n                form.resetFields()\n                setSuccessful(data);\n            })\n            .catch(() => {\n                setSuccessful(false);\n                setSubmitting(false)\n            });\n    }\n\n    const reasonForPetitionList = [\n        {\n            label: 'Опасный контакт (оценка рисков, рекомендации по профилактике)',\n            value: 'Опасный контакт (оценка рисков, рекомендации по профилактике)'\n        },\n        { label: 'Постконтактная профилактика', value: 'Постконтактная профилактика' },\n        { label: 'Доконтактная профилактика', value: 'Доконтактная профилактика' },\n        { label: 'Недавнее получение ВИЧ+ статуса', value: 'Недавнее получение ВИЧ+ статуса' },\n        {\n            label: 'Жизнь с ВИЧ (аспекты для людей, живущих с ВИЧ)',\n            value: 'Жизнь с ВИЧ (аспекты для людей, живущих с ВИЧ)'\n        },\n        {\n            label: 'Жизнь с ВИЧ (аспекты для родных, близких, партнёров ЛЖВ)',\n            value: 'Жизнь с ВИЧ (аспекты для родных, близких, партнёров ЛЖВ)'\n        },\n        { label: 'АРВТ и проблемы с ней', value: 'АРВТ и проблемы с ней' },\n        { label: 'Юридические вопросы и нарушение прав ЛЖВ', value: 'Юридические вопросы и нарушение прав ЛЖВ' },\n        { label: 'Консультации по тестированию', value: 'Консультации по тестированию' },\n    ];\n\n    const consultationResultsList = [\n        { label: 'Оказана информационная поддержка', value: 'Оказана информационная поддержка' },\n        { label: 'Оказана психологическая поддержка', value: 'Оказана психологическая поддержка' },\n        { label: 'Клиент направлен в региональный Центр СПИДа', value: 'Клиент направлен в региональный Центр СПИДа' },\n        {\n            label: 'Клиент направлен в другие региональные организации',\n            value: 'Клиент направлен в другие региональные организации'\n        },\n    ]\n\n    const setCityHandler = (city) => {\n        localStorage.setItem('1_city', city)\n        setCity(city)\n        form.setFieldsValue({\n            \"1_city\": city\n        });\n    }\n\n    const setUserHandler = (consultant) => {\n        localStorage.setItem('2_consultant', consultant)\n        form.setFieldsValue({\n            \"2_consultant\": consultant\n        });\n    }\n\n    const reloadForm = () => {\n        dispatch(resetFilterState())\n        setSuccessful(false);\n    }\n\n    const createResetValue = (name) => {\n        let values\n        if (typeof name === \"object\") {\n            values = name.map(i => ({ name: i }))\n        } else {\n            values = [{ name: name }]\n        }\n\n        const resetField = () => {\n            return values.map(item => form.setFieldsValue({ [item.name]: null }))\n        }\n\n        return (\n            <div className={styles.reset}>\n                <Button icon={<DeleteOutlined/>} onClick={name ? resetField : resetForm}/>\n            </div>\n        )\n    }\n\n    if (successful) {\n        return <Success reload={reloadForm} data={successful}/>\n    }\n\n    return (\n        <div className={styles.container}>\n\n            <FastTabs goTo={goTo}/>\n\n            <div className={styles.image}\n                 style={{ backgroundImage: `url(${noPride})` }}\n            />\n\n            <div className={styles.titleContainer}>\n                <div className={styles.line}/>\n                <h1 className={styles.h1}>Горячая линия</h1>\n                <p className={styles.required}>* Обязательные поля</p>\n\n                {createResetValue()}\n            </div>\n\n            <Form\n                layout={'vertical'}\n                form={form}\n                onFinish={onFinish}>\n\n                <div>\n                    <Form.Item name=\"1_city\" label=\"Филиал и Консультант\"\n                               rules={[{ required: true, message: 'Поле является обязательным' }]}>\n                        <Select defaultValue={defaultCity} value={form.getFieldsValue()[\"1_city\"]}\n                                onChange={setCityHandler}>\n                            <Option value=\"moscow\">Москва</Option>\n                            <Option value=\"spb\">Санкт-Петербург</Option>\n                            <Option value=\"nn\">Нижний Новгород</Option>\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item name=\"2_consultant\"\n                               style={{ margin: 0 }}\n                        // rules={[{ required: true, message: 'Поле является обязательным' }]}\n                    >\n                        {\n                            users.length\n                                ? (\n                                    <Select onChange={setUserHandler}>\n                                        {users.map(user => <Option value={user.appointment}>{user.appointment}</Option>)}\n                                    </Select>\n                                )\n                                : city\n                                    ? <i>Для города не сохранены Консультанты</i>\n                                    : <i>Выбор доступен после указания города</i>\n                        }\n                    </Form.Item>\n                </div>\n\n                <div>\n                    <Form.Item rules={[{ required: true, message: 'Поле является обязательным' }]}\n                               name=\"3_source_of_appeal\" label=\"Источник обращения\">\n                        <Radio.Group>\n                            <Radio value=\"Телефон\">Телефон</Radio>\n                            <Radio value=\"Мессенджеры (WhatsApp, Telegram, Viber)\">Мессенджеры (WhatsApp, Telegram,\n                                Viber)</Radio>\n                            <Radio value=\"Cоциальные сети (ВК, Facebook)\">Cоциальные сети (ВК, Facebook)</Radio>\n                            <Radio value=\"Cоциальные сети для ключевых групп (Hornet и пр.)\">Cоциальные сети для\n                                ключевых групп (Hornet и пр.)</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    {createResetValue('3_source_of_appeal')}\n                </div>\n\n                <Form.Item required name=\"4_date\" label={`Дата и Время`}>\n                    <DatePicker defaultValue={moment()} showTime format={'DD.MM.YYYY HH:mm'}/>\n                </Form.Item>\n\n                <div>\n                    <Form.Item name=\"5_1_reason_for_petition\" label=\"Причина обращения\">\n                        <Checkbox.Group>\n                            {reasonForPetitionList.map(option => <Checkbox\n                                value={option.value}>{option.label}</Checkbox>)}\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"5_2_reason_for_petition\">\n                        <Input placeholder=\"Другая\"/>\n                    </Form.Item>\n                    {createResetValue(['5_1_reason_for_petition', '5_2_reason_for_petition'])}\n                </div>\n\n                <div>\n                    <Form.Item rules={[{ required: true, message: 'Поле является обязательным' }]}\n                               name=\"6_1_consultation_results\" label=\"Результаты консультации\">\n                        <Checkbox.Group>\n                            {consultationResultsList.map(option => <Checkbox\n                                value={option.value}>{option.label}</Checkbox>)}\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"6_2_consultation_results\">\n                        <Input placeholder=\"Другой\"/>\n                    </Form.Item>\n                    {createResetValue(['6_1_consultation_results', '6_2_consultation_results'])}\n                </div>\n\n                <div>\n                    <Form.Item name=\"7_consulting_on_regular_testing_provided\"\n                               label=\"Оказано консультирование по регулярному тестированию\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Да\">Да</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    {createResetValue('7_consulting_on_regular_testing_provided')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"8_prevention_counseling_provided\"\n                               label=\"Оказано консультирование по профилактике\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Да\">Да</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    {createResetValue('8_prevention_counseling_provided')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"9_provided_counseling_on_receiving_treatment_for_hiv\"\n                               label=\"Оказано консультирование по получению лечения для ВИЧ+\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Да\">Да</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    {createResetValue('9_provided_counseling_on_receiving_treatment_for_hiv')}\n                </div>\n\n                <div>\n                    <Form.Item name=\"10_consultant_comment\" label=\"Комментарий\">\n                        <Input.TextArea placeholder=\"Комментарий\"/>\n                    </Form.Item>\n                    {createResetValue('10_consultant_comment')}\n                </div>\n\n                <Form.Item style={{ textAlign: \"center\" }}>\n                    {submitting ? <Spin size=\"large\"/>\n                        : <Button htmlType=\"submit\" type=\"primary\" size=\"large\">Сохранить</Button>}\n                </Form.Item>\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HotLineForm);\n","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    console.log('user', user);\n\n    if (user && user.accessToken) {\n        return {'x-access-token': user.accessToken};\n    } else {\n        return {};\n    }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport moment from \"moment\";\n\nconst APP_REDUCER_NAME = 'filter'\n\nconst initialState = {\n    usedDrugs: false,\n    usedPrep: false,\n    sexWorked: false,\n    rangePeriod: [\n        moment().subtract(30,'d'),\n        moment()\n    ],\n    city: null,\n    findByCode: null,\n    searchOfCode: null,\n    formType: null,\n    age: null,\n    searchType: true,\n}\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: initialState,\n    reducers: {\n        findByCode(state, action) {\n            state.findByCode = action.payload\n        },\n        setTestingDrugUsed(state, action) {\n            state.usedDrugs = action.payload\n        },\n        setTestingPrepUsed(state, action) {\n            state.usedPrep = action.payload\n        },\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        setTestingSexWorked(state, action) {\n            state.sexWorked = action.payload\n        },\n        setSearchOfCode(state, action) {\n            state.searchOfCode = action.payload\n        },\n        setFormType(state, action) {\n            state.formType = action.payload\n        },\n        setAge(state, action) {\n            state.age = action.payload\n        },\n        setSearchType(state, action) {\n            state.searchType = action.payload\n        },\n        resetFilterState(state) {\n            state.findByCode = null\n        }\n    }\n})\n\nexport const {\n    findByCode,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked,\n    setRangePeriod,\n    setTestingCity,\n    setSearchOfCode,\n    setFormType,\n    setAge,\n    setSearchType,\n    resetFilterState\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createSlice} from '@reduxjs/toolkit'\nimport {START} from \"../../constants/others.constants\";\n\nconst APP_REDUCER_NAME = 'app'\n\nconst appSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: {\n        loaded: false,\n        create: {\n            files: [],\n            metro: [],\n            typeOfApplicant: null\n        },\n        user: null\n    },\n    reducers: {\n        setLoadedFiles(state, action) {\n            state.create.files = [\n                ...state.create.files,\n                ...action.payload\n            ]\n        },\n        resetFiles(state, payload) {\n            state.create.files = []\n        },\n        setMetroStation(state, action) {\n            state.create.metro = action.payload\n        },\n        setLoading(state, action) {\n            state.loaded = action.payload !== START\n        },\n        setOneUserData(state, action) {\n            state.user = action.payload\n            state.loaded = true\n        }\n    }\n})\n\nexport const {\n    setLoadedFiles,\n    resetFiles,\n    setMetroStation,\n    setLoading,\n    setOneUserData\n} = appSlice.actions\n\nexport default appSlice.reducer\n","export const START = 'start'\nexport const FINISH = 'finish'","import {combineReducers} from 'redux'\nimport user from './reducers/user.reducer'\nimport app from './reducers/app.reducer'\nimport filter from './reducers/filter.reducer'\nimport filterHotLine from './reducers/filterHotLine.reducer'\nimport filterGroupsHiv from './reducers/filterGroupsHiv.reducer'\nimport filterDrugs from \"./reducers/filterDrugs.reducer\"\nimport findGroupsTG from './reducers/filterGroupsTG.reducer'\n\nexport default combineReducers({\n    app,\n    user,\n    filter,\n    filterHotLine,\n    filterGroupsHiv,\n    filterDrugs,\n    findGroupsTG\n});\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport rootReducer from './reducer'\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger'\n// And use redux-batch as an example of adding enhancers\nimport {reduxBatch} from '@manaflair/redux-batch'\n\nconst middleware = [...getDefaultMiddleware(), logger]\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers: [reduxBatch]\n})\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport {YMInitializer} from 'react-yandex-metrika';\nimport * as Sentry from '@sentry/browser';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\nif (process.env.NODE_ENV === 'production') {\n    Sentry.init({dsn: \"https://80ec2091533941ef80154e3220bae060@o392602.ingest.sentry.io/5240421\"});\n}\n\nReactDOM.render(\n    <React.Fragment>\n        {process.env.NODE_ENV === 'production'\n            ? <YMInitializer accounts={[62759980]} options={{clickmap: true, webvisor: true}} version=\"2\"/>\n            : null}\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.Fragment>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import baseUrl from \"../baseurl\";\n\nconst host = baseUrl();\n\nconst API_URL = `${host}/api`;\n\nexport const API_FETCH_LOAD_FILES = `${API_URL}/upload`;\n\nexport const API_VIDEO_FIRST_LIST = `${API_URL}/video/first-list`;\nexport const API_FETCH_OFFSET_VIDOES = `${API_URL}/video/offset`;\nexport const API_FETCH_UP_VIDEO_COUNT = `${API_URL}/video/count`;\nexport const API_FETCH_VOTE_VIDEO = `${API_URL}/video/vote`;\nexport const API_UPLOAD_VIDEO = `${API_URL}/upload/video`;\nexport const API_CREATE_VIDEO = `${API_URL}/video/create`;\n\nexport const API_AUTH_SIGNIN = `${API_URL}/auth/signin`;\nexport const API_ALL_USERS = `${API_URL}/user/all-users-data`;\nexport const API_ALL_USERS_FOR_FORMS = `${API_URL}/user/all-users-for-forms-data`;\nexport const API_ALL_ROLES = `${API_URL}/user/all-roles-data`;\n\nexport const API_ROLES = `${API_URL}/roles`;\nexport const API_SUBDIVISIONS = `${API_URL}/subdivisions`;\n\nexport const API_PATIENTS = `${API_URL}/patients`;\nexport const API_VISITS = `${API_URL}/visits`;\nexport const API_QUESTIONS = `${API_URL}/questions`;\nexport const API_PATIENT_VISITS = `${API_URL}/patient_visits`;\n\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/form/`;\n\nconst testing = (fields) => {\n    return axios.post(API_URL + \"testing\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst hotLineForm = (fields) => {\n    return axios.post(API_URL + \"hot-line\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst groupsHivForm = (fields) => {\n    return axios.post(API_URL + \"groups-hiv\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst groupsTGForm = (fields) => {\n    return axios.post(API_URL + \"groups-tg\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst drugsForm = (fields) => {\n    return axios.post(API_URL + \"drugstore\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst findTesting = (filters = {}) => {\n    return axios.post(API_URL + \"find/testing\", filters, { headers: authHeader() });\n};\n\nconst findHotLine = (filters = {}) => {\n    return axios.post(API_URL + \"find/hot-line\", filters, { headers: authHeader() });\n};\n\nconst findGroupsHiv = (filters = {}) => {\n    return axios.post(API_URL + \"find/groups-hiv\", filters, { headers: authHeader() });\n};\n\nconst findGroupsTG = (filters = {}) => {\n    return axios.post(API_URL + \"find/groups-tg\", filters, { headers: authHeader() });\n};\n\nconst findDrugstore = (filters = {}) => {\n    return axios.post(API_URL + \"find/drugstore\", filters, { headers: authHeader() });\n};\n\nexport default {\n    testing,\n    findTesting,\n    hotLineForm,\n    groupsHivForm,\n    groupsTGForm,\n    findGroupsTG,\n    findHotLine,\n    findGroupsHiv,\n    drugsForm,\n    findDrugstore\n};\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    SET_MESSAGE,\n} from \"./types\";\nimport FormService from \"./../../services/form.service\";\n\nexport const testing = (fields) => (dispatch) => {\n    return FormService.testing(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const hotLineForm = (fields) => (dispatch) => {\n    return FormService.hotLineForm(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const groupsHivForm = (fields) => (dispatch) => {\n    return FormService.groupsHivForm(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const groupsTGForm = (fields) => (dispatch) => {\n    return FormService.groupsTGForm(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const drugsForm = (fields) => (dispatch) => {\n    return FormService.drugsForm(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findTesting = (filters) => (dispatch) => {\n    return FormService.findTesting(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findDrugstore = (filters) => (dispatch) => {\n    return FormService.findDrugstore(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findHotLine = (filters) => (dispatch) => {\n    return FormService.findHotLine(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findGroupsHiv = (filters) => (dispatch) => {\n    return FormService.findGroupsHiv(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findGroupsTG = (filters) => (dispatch) => {\n    return FormService.findGroupsTG(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"styles_filters__1HMjR\",\"firstLine\":\"styles_firstLine__wavmH\",\"secondLine\":\"styles_secondLine__1vFlW\",\"groups\":\"styles_groups__Orx8P\",\"groupsSearch\":\"styles_groupsSearch__UgsGB\"};","import { fetchRole } from \"../reducers/user.reducer\";\nimport axios from \"axios\";\nimport {\n    API_AUTH_SIGNIN,\n    API_ALL_USERS,\n    API_ALL_ROLES,\n    API_ROLES,\n    API_SUBDIVISIONS,\n    API_ALL_USERS_FOR_FORMS\n} from \"../../constants/api.constants\";\nimport authHeader from \"../../services/auth-header\";\n\nexport const setRole = data => async dispatch => {\n    dispatch(fetchRole(data))\n}\n\nexport const fetchLoginForm = async ({ username, password }) => {\n\n    return axios.post(API_AUTH_SIGNIN, { username, password })\n        .then(response => {\n            if (response.data.accessToken) {\n\n                localStorage.setItem(\"user\", JSON.stringify({\n                    accessToken: response.data.accessToken,\n                    appointment: response.data.appointment,\n                    city: response.data.city,\n                    id: response.data.id,\n                    roles: response.data.roles,\n                    username: response.data.username\n                }));\n\n                return response.data;\n            }\n        });\n}\n\nexport const findAllUsers = async () => {\n    return axios.post(API_ALL_USERS, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findAllUsersForForms = async () => {\n    return axios.post(API_ALL_USERS_FOR_FORMS, {}).then(response => response)\n}\n\nexport const findAllRoles = async () => {\n    return axios.post(API_ALL_ROLES, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findRoles = async () => {\n    return axios.post(API_ROLES, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findSubdivisions = async () => {\n    return axios.post(API_SUBDIVISIONS, {}, { headers: authHeader() }).then(response => response)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-forms\":\"slyles_all-forms__1Uiq4\",\"link\":\"slyles_link__35xrf\",\"card\":\"slyles_card__1pu6e\",\"title\":\"slyles_title__3zA94\",\"image\":\"slyles_image__1ACh0\"};","export const ADMIN = 'admin'\nexport const MODERATOR = 'mod'\nexport const USER = 'user'","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2FOWG\",\"date\":\"styles_date__2sNyW\",\"tabs\":\"styles_tabs__NgpE7\",\"ant-tabs-tab\":\"styles_ant-tabs-tab__1OKyT\",\"ant-tabs-tab-active\":\"styles_ant-tabs-tab-active__32r0M\",\"ant-tabs-tab-btn\":\"styles_ant-tabs-tab-btn__3gsOA\",\"image\":\"styles_image__3ny7X\",\"titleContainer\":\"styles_titleContainer__2gq1o\",\"required\":\"styles_required__66V7T\",\"line\":\"styles_line__1wQyX\",\"h1\":\"styles_h1__2mmg6\",\"resetForm\":\"styles_resetForm__6DmAC\",\"reset\":\"styles_reset__2n-4F\",\"code\":\"styles_code__3mZmY\"};","import axios from \"axios\";\nimport baseUrl from \"./../baseurl\";\n\nconst host = baseUrl()\nconst API_URL = `${host}/api/auth/`;\n\nclass AuthService {\n  // login(email, password) {\n  //   return axios\n  //     .post(API_URL + \"signin\", {\n  //       email,\n  //       password\n  //     })\n  //     .then(response => {\n  //       if (response.data.accessToken) {\n  //         localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //       }\n  //\n  //       return response.data;\n  //     });\n  // }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(values) {\n    return axios.post(API_URL + \"signup\", {\n      username: values.username,\n      appointment: values.appointment,\n      password: values.password,\n      city: values.city\n    });\n  }\n\n  changePassword(values) {\n    return axios.post(API_URL + \"change-password\", {\n      username: values.username,\n      password: values.password,\n    });\n  }\n\n  changeCity(values) {\n    return axios.post(API_URL + \"change-city\", {\n      username: values.username,\n      city: values.city,\n    });\n  }\n\n  changeRole(values) {\n    return axios.post(API_URL + \"change-role\", {\n      userId: values.userId,\n      roleId: values.roleId,\n    });\n  }\n\n  changeSubdivisions(values) {\n    return axios.post(API_URL + \"change-subdivision\", {\n      userId: values.userId,\n      subdivisionsId: values.subdivisionsId,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n"],"sourceRoot":""}