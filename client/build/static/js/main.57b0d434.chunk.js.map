{"version":3,"sources":["components/Forms/testing/styles.module.scss","redux/thunks/user.thunks.js","components/all-forms/slyles.module.scss","services/user.service.js","components/diagrams/styles.module.scss","components/reports/testing/styles.module.scss","services/form.service.js","redux/thunks/forms.js","components/filters/styles.module.scss","redux/reducers/user.reducer.js","components/Header/Header.jsx","components/Layouts/Default.jsx","constants/others.constants.js","services/diagram.service.js","components/diagrams/pie.js","components/diagrams/bar.js","components/filters/filters.js","components/reports/testing/TestingReport.jsx","redux/thunks/diagrams.js","components/Forms/Register.jsx","components/Forms/ChangePassword.jsx","components/admin/user-management/index.jsx","components/Forms/Login.jsx","App.jsx","components/all-forms/all-forms.js","components/all-forms/test.jpeg","components/Forms/testing/TestingForm.jsx","components/Forms/testing/images/pride.jpeg","components/Forms/testing/images/no-pride.jpg","images/logo-white.svg","images/logo-black.svg","components/Profile.jsx","components/Header/styles.module.scss","components/Board-user.jsx","components/Board-moderator.jsx","components/Board-admin.jsx","serviceWorker.js","redux/reducers/app.reducer.js","redux/reducer.js","redux/store.js","index.js","constants/roles.constants.js","services/auth-header.js","redux/thunks/types.js","services/auth.service.js","redux/reducers/filter.reducer.js","constants/api.constants.js","baseurl.js","components/Welcome/WelcomeCard.jsx","components/Welcome/WelcomeGrid.jsx","redux/reducers/video.reducer.js","components/Welcome/index.jsx","redux/thunks/video.thunks.js","hooks/useAuth.js"],"names":["module","exports","setRole","data","dispatch","a","fetchRole","fetchLoginForm","username","password","axios","post","API_AUTH_SIGNIN","then","response","accessToken","localStorage","setItem","JSON","stringify","appointment","city","id","roles","findAllUsers","API_ALL_USERS","headers","authHeader","findAllRoles","API_ALL_ROLES","findRoles","API_ROLES","findSubdivisions","API_SUBDIVISIONS","host","baseUrl","API_URL","UserService","get","catch","baseurl","fields","filters","testing","FormService","type","REGISTER_SUCCESS","SET_MESSAGE","payload","message","Promise","resolve","error","toString","REGISTER_FAIL","reject","findTesting","userSlice","createSlice","name","initialState","userData","isAuthenticated","role","reducers","state","action","actions","Header","props","className","classes","children","Default","START","Chart","register","registerables","createData","keyValue","multiplicity","hash","map","v","value","valueParse","parseInt","match","Math","ceil","createMultiplicityValue","obj","forEach","res","Object","keys","assign","find","c","sort","b","labels","i","datasets","label","backgroundColor","datalabels","anchor","plugins","ChartDataLabels","options","height","context","dataset","borderColor","borderRadius","borderWidth","color","display","count","length","dataIndex","formatter","ctx","sum","reduce","previousValue","currentValue","toFixed","font","weight","padding","legend","position","aspectRatio","cutoutPercentage","layout","elements","line","fill","point","hoverRadius","radius","PieDiagram","title","chartContainer","useRef","useState","chartInstance","setChartInstance","autoUpdate","setAutoUpdate","setMultiplicity","updateDataset","useCallback","update","useEffect","current","newChartInstance","styles","container","showSelectorWithRounding","Group","onChange","e","target","Button","checked","onClick","ref","arrayType","rounding","itemsArrayType","split","aa","push","trim","includes","round","floor","filter","singleValuesLabels","indexAxis","responsive","scaleShowValues","scales","y","ticks","autoSkip","fontSize","max","stepSize","top","left","right","bottom","align","offset","BarDiagram","setRounding","Option","Select","Search","Input","RangePicker","DatePicker","connect","periodType","usedDrugs","sexWorked","usedPrep","formType","setDrugUsed","used","setTestingDrugUsed","setPrepUsed","setTestingPrepUsed","setSexWorked","setTestingSexWorked","setRangePeriod","period","setCity","setTestingCity","setSearchOfCode","code","setFormType","firstLine","locale","showTime","format","groups","style","width","placeholder","defaultValue","onClear","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","secondLine","onSearch","allowClear","enterButton","Panel","Collapse","TabPane","Tabs","TestingReport","useDispatch","selectorFiltersTesting","useSelector","setTesting","columnsForm","setColumnsForm","rangePeriodStart","rangePeriod","rangePeriodEnd","searchByCode","searchOfCode","DiagramService","DIAGRAM_SUCCESS","DIAGRAM_FAIL","findDiagram","columns","column","key","order","comments","undefined","subTitle","tabs","defaultActiveKey","tab","header","dataSource","bordered","size","scroll","x","tableLayout","pagination","Register","initialValues","remember","onFinish","values","console","log","AuthService","window","location","reload","onFinishFailed","errorInfo","autoComplete","Item","rules","required","Password","htmlType","ChangePassword","setVisible","validate","setValidate","pass","changePassword","success","onValuesChange","changedValues","allValues","min","UserManagement","users","setUsers","setRoles","subdivisions","setSubdivisions","isModalVisible","setIsModalVisible","isModalChangePasswordVisible","setIsModalChangePasswordVisible","cities","dataUsers","dataRoles","user","roleId","userId","subdivisionId","fixed","render","val","changeRole","mode","subdivisionsId","changeSubdivisions","join","subdivision","changeCity","event","ghost","extra","visible","onCancel","footer","Login","handleLogin","bind","onChangeEmail","onChangePassword","email","loading","this","setState","preventDefault","form","validateAll","checkBtn","_errors","history","resMessage","src","alt","onSubmit","htmlFor","validations","disabled","Component","App","logOut","process","versions","node","showModeratorBoard","showAdminBoard","currentUser","readyToRedirect","parse","getItem","getCurrentUser","prevProps","prevState","snapshot","logout","to","backgroundImage","logoWhite","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","href","exact","path","component","Profile","AllForms","TestingForm","BoardUser","BoardModerator","AdminPanel","logoBlack","withRouter","textDecoration","card","image","test","useAuth","pastTests","findByCode","expanded","setExpanded","now","setNow","submitting","setSubmitting","setSuccessful","useHistory","Form","useForm","resetFields","stateForm","createOtherFields","moment","removeItem","CodeInput","mask","isRevealingMask","formatCharacters","transform","char","toUpperCase","onChangeCode","setFieldsValue","valueClean","replace","resetForm","pride","noPride","titleContainer","h1","getFieldsValue","showIcon","description","TextArea","USER","Content","Layout","Sider","setTab","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","onSelect","theme","defaultSelectedKeys","icon","margin","setComponent","MODERATOR","ADMIN","Boolean","hostname","appSlice","loaded","create","files","metro","typeOfApplicant","setLoadedFiles","resetFiles","setMetroStation","setLoading","setOneUserData","combineReducers","app","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","enhancers","reduxBatch","Sentry","dsn","ReactDOM","Fragment","accounts","clickmap","webvisor","version","document","getElementById","navigator","serviceWorker","ready","registration","unregister","filterSlice","API_VIDEO_FIRST_LIST","API_FETCH_OFFSET_VIDOES","API_FETCH_UP_VIDEO_COUNT","API_FETCH_VOTE_VIDEO","API_CREATE_VIDEO","useStyles","makeStyles","root","maxWidth","media","WelcomeCard","video","folder","Card","CardActionArea","CardMedia","CardContent","Typography","variant","createStyles","flexGrow","paper","spacing","textAlign","palette","text","secondary","WelcomeGrid","Grid","videos","index","item","xs","sm","videoSlice","single","setVideos","setFirstVideos","isLoading","setSingleVideo","fetchFirst","fetchOffset","fetchOffsetToStore","page","pageSize","limit","total","showTotal","range","defaultPageSize","defaultCurrent","WrappedComponent","Authenticate","getUser","getAdminBoard","getModeratorBoard","getUserBoard","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,eAAe,6BAA6B,sBAAsB,oCAAoC,mBAAmB,iCAAiC,MAAQ,sBAAsB,eAAiB,+BAA+B,SAAW,yBAAyB,KAAO,qBAAqB,GAAK,mBAAmB,UAAY,0BAA0B,KAAO,uB,oTCIpbC,EAAU,SAAAC,GAAI,8CAAI,WAAMC,GAAN,SAAAC,EAAA,sDAC3BD,EAASE,YAAUH,IADQ,2CAAJ,uDAIdI,EAAc,uCAAG,+BAAAF,EAAA,6DAASG,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAnB,kBAEnBC,IAAMC,KAAKC,IAAiB,CAAEJ,WAAUC,aAC1CI,MAAK,SAAAC,GACF,GAAIA,EAASX,KAAKY,YAWd,OATAC,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,CACxCJ,YAAaD,EAASX,KAAKY,YAC3BK,YAAaN,EAASX,KAAKiB,YAC3BC,KAAMP,EAASX,KAAKkB,KACpBC,GAAIR,EAASX,KAAKmB,GAClBC,MAAOT,EAASX,KAAKoB,MACrBf,SAAUM,EAASX,KAAKK,YAGrBM,EAASX,SAfF,2CAAH,sDAoBdqB,EAAY,uCAAG,sBAAAnB,EAAA,+EACjBK,IAAMC,KAAKc,IAAe,GAAI,CAAEC,QAASC,gBAAgBd,MAAK,SAAAC,GAAQ,OAAIA,MADzD,2CAAH,qDAIZc,EAAY,uCAAG,sBAAAvB,EAAA,+EACjBK,IAAMC,KAAKkB,IAAe,GAAI,CAAEH,QAASC,gBAAgBd,MAAK,SAAAC,GAAQ,OAAIA,MADzD,2CAAH,qDAIZgB,EAAS,uCAAG,sBAAAzB,EAAA,+EACdK,IAAMC,KAAKoB,IAAW,GAAI,CAAEL,QAASC,gBAAgBd,MAAK,SAAAC,GAAQ,OAAIA,MADxD,2CAAH,qDAITkB,EAAgB,uCAAG,sBAAA3B,EAAA,+EACrBK,IAAMC,KAAKsB,IAAkB,GAAI,CAAEP,QAASC,gBAAgBd,MAAK,SAAAC,GAAQ,OAAIA,MADxD,2CAAH,sD,oBCxC7Bd,EAAOC,QAAU,CAAC,YAAY,0BAA0B,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,wB,sFCGhJiC,EAAOC,cAEPC,EAAO,UAAMF,EAAN,cAEPG,E,gGACF,WACI,OAAO3B,IAAM4B,IAAIF,EAAU,S,0BAG/B,WACI,OAAO1B,IAAM4B,IAAIF,EAAU,OAAQ,CAACV,QAASC,kB,+BAGjD,WACI,OAAOjB,IAAM4B,IAAIF,EAAU,MAAO,CAACV,QAASC,gBACvCY,OAAM,WACH,OAAO7B,IAAM4B,IAAIF,EAAU,QAAS,CAACV,QAASC,qB,2BAI1D,WACI,OAAOjB,IAAM4B,IAAIF,EAAU,QAAS,CAACV,QAASC,oB,KAIvC,QAAIU,G,oBC5BnBrC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,IAAM,oBAAoB,MAAQ,wB,oBCA1FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,KAAO,uB,sFCGjDiC,EAAOM,cACPJ,EAAO,UAAMF,EAAN,cAYE,EAVC,SAACO,GACb,OAAO/B,IAAMC,KAAKyB,EAAU,UAArB,eACAK,GACJ,CAAEf,QAASC,iBAOH,EAJK,WAAmB,IAAlBe,EAAiB,uDAAP,GAC3B,OAAOhC,IAAMC,KAAKyB,EAAU,eAAgBM,EAAS,CAAEhB,QAASC,iBCdpE,oEAOO,IAAMgB,EAAU,SAACF,GAAD,OAAY,SAACrC,GAChC,OAAOwC,EAAoBH,GAAQ5B,MAC/B,SAACC,GAUG,OATAV,EAAS,CACLyC,KAAMC,MAGV1C,EAAS,CACLyC,KAAME,IACNC,QAASlC,EAASX,KAAK8C,UAGpBC,QAAQC,aAEnB,SAACC,GACG,IAAMH,EACDG,EAAMtC,UACHsC,EAAMtC,SAASX,MACfiD,EAAMtC,SAASX,KAAK8C,SACxBG,EAAMH,SACNG,EAAMC,WAWV,OATAjD,EAAS,CACLyC,KAAMS,MAGVlD,EAAS,CACLyC,KAAME,IACNC,QAASC,IAGNC,QAAQK,cAKdC,EAAc,SAACd,GAAD,OAAa,SAACtC,GACrC,OAAOwC,EAAwBF,GAAS7B,MACpC,SAACC,GAUG,OATAV,EAAS,CACLyC,KAAMC,MAGV1C,EAAS,CACLyC,KAAME,IACNC,QAASlC,EAASX,KAAK8C,UAGpBC,QAAQC,QAAQrC,MAE3B,SAACsC,GACG,IAAMH,EACDG,EAAMtC,UACHsC,EAAMtC,SAASX,MACfiD,EAAMtC,SAASX,KAAK8C,SACxBG,EAAMH,SACNG,EAAMC,WAWV,OATAjD,EAAS,CACLyC,KAAMS,MAGVlD,EAAS,CACLyC,KAAME,IACNC,QAASC,IAGNC,QAAQK,e,oBCzE3BvD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,UAAY,0BAA0B,WAAa,2BAA2B,OAAS,yB,iCCD3I,8CAIMwD,EAAYC,YAAY,CAC1BC,KAHuB,OAIvBC,aAAc,CACVC,SAAU,KACVC,gBAAiB,KACjBC,KAAM,MAEVC,SAAU,CACN1D,UADM,SACI2D,EAAOC,GACbD,EAAMJ,SAAWK,EAAOlB,QAAQa,SAChCI,EAAMH,gBAAkBI,EAAOlB,QAAQc,gBACvCG,EAAMF,KAAOG,EAAOlB,QAAQe,SAMpCzD,EACAmD,EAAUU,QADV7D,UAGWmD,MAAf,S,iCCxBA,sCAWeW,IARA,SAAAC,GACX,OACI,yBAAKC,UAAWC,IAAQH,QACnBC,EAAMG,Y,iCCNnB,oBAUeC,IARC,SAAAJ,GACZ,OACI,yBAAKC,UAAU,aACVD,EAAMG,Y,iCCLnB,kCAAO,IAAME,EAAQ,S,0ICIfxC,EAAOM,cACPJ,EAAO,UAAMF,EAAN,iBAME,EAJK,WAAgB,IAAfW,EAAc,uDAAP,GACxB,OAAOnC,IAAMC,KAAKyB,EAASS,EAAM,CAAEnB,QAASC,iB,2ECFhDgD,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAElB,IAAMC,EAAa,SAAC3E,EAAM4E,EAAUC,GAEhC,IAYMC,EAAO9E,EAAK+E,KAAI,SAAAC,GAAC,OAZS,SAACC,GAC7B,IAAMC,EAAaD,GAASE,SAASF,EAAMG,MAAM,QACjD,OAAQP,GACJ,IAAK,IACD,OAAoC,EAA5BQ,KAAKC,KAAKJ,EAAa,GACnC,IAAK,KACD,OAAqC,GAA7BG,KAAKC,KAAKJ,EAAa,IACnC,QACI,OAAOD,GAIQM,CAAwBP,EAAEJ,OAC/CY,EAAM,GAEZV,EAAKW,SAAQ,SAAAT,GAAC,OAAKQ,EAAIR,GAAkBQ,EAAIR,KAAjBQ,EAAIR,GAAK,KACrC,IAAMU,EAAMC,OAAOC,KAAKJ,GAAKT,KAAI,SAAAC,GAAC,MAAI,CAACW,OAAOE,OAAO,GAAI7F,EAAK8F,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,IAAaI,MAAKQ,EAAIR,OAC3FgB,MAAK,SAAC9F,EAAG+F,GAAJ,OAAUA,EAAE,GAAK/F,EAAE,MAK7B,MAAO,CACHwC,KAAM,WACN1C,KAAM,CACFkG,OANOR,EAAIX,KAAI,SAAAoB,GAAC,OAAIA,EAAE,GAAGvB,MAOzBwB,SAAU,CACN,CACIC,MAAO,aACPrG,KATG0F,EAAIX,KAAI,SAAAoB,GAAC,OAAIA,EAAE,MAUlBG,gBAAiB,CACb,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,WAAY,CACRC,OAAQ,UAKxBC,QAAS,CAACC,KACVC,QAAS,CACLF,QAAS,CACLG,OAAQ,IACRL,WAAY,CACRD,gBAAiB,SAAUO,GACvB,OAAOA,EAAQC,QAAQR,iBAE3BS,YAAa,QACbC,aAAc,GACdC,YAAa,EACbC,MAAO,QACPC,QAAS,SAAUN,GACf,IAAIC,EAAUD,EAAQC,QAClBM,EAAQN,EAAQ9G,KAAKqH,OAEzB,OADYP,EAAQ9G,KAAK6G,EAAQS,WACV,IAARF,GAEnBG,UAAW,SAAUtC,EAAOuC,GACxB,IAAIC,EAAMD,EAAIV,QAAQ9G,KAAK0H,QAAO,SAACC,EAAeC,GAAhB,OAAiCD,EAAgBC,KAEnF,MAAM,GAAN,QAAmB,IAAR3C,EAAcwC,GAAKI,QAAQ,GAAK,MAE/CC,KAAM,CACFC,OAAQ,QAEZC,QAAS,GAEbC,OAAQ,CACJC,SAAU,SAKlBC,YAAa,EACbC,iBAAkB,GAClBC,OAAQ,CACJL,QAAS,IAEbM,SAAU,CACNC,KAAM,CACFC,MAAM,GAEVC,MAAO,CACHC,YAAa,EACbC,OAAQ,OA8DbC,EAvDI,SAAC,GAA+B,IAA7B5I,EAA4B,EAA5BA,KAAM6I,EAAsB,EAAtBA,MAAOjE,EAAe,EAAfA,SAEzBkE,EAAiBC,iBAAO,MAC9B,EAA0CC,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAS,KAAjD,mBAAOnE,EAAP,KAAqBwE,EAArB,KAeMC,EAAgBC,uBAAY,WAC9BN,EAAcjJ,KAAO2E,EAAW3E,EAAM4E,EAAUC,GAAc7E,KAC9DiJ,EAAcO,YAclB,OAXAC,qBAAU,WACN,GAAIX,GAAkBA,EAAeY,SAAW1J,IAASiJ,EAAe,CACpE,IAAMU,EAAmB,IAAInF,IAAMsE,EAAeY,QAAS/E,EAAW3E,EAAM4E,EAAUC,IACtFqE,EAAiBS,MAEtB,CAACb,EAAgBG,EAAejJ,EAAM4E,EAAUC,IAEnD4E,qBAAU,WACNR,GAAiBE,GAAcG,MAChC,CAACtJ,EAAMmJ,EAAYtE,EAAcoE,EAAeK,IAG/C,yBAAKnF,UAAWyF,IAAOC,WACnB,wBAAI1F,UAAWyF,IAAOf,OAAQA,GA/BL,WAC7B,OAAQjE,GACJ,IAAK,cACD,OAAO,EACX,QACI,OAAO,GA4BVkF,IAA8B,kBAAC,IAAMC,MAAP,CAAa9E,MAAOJ,EAAcmF,SAxB3C,SAACC,GAC3BZ,EAAgBY,EAAEC,OAAOjF,SAwBjB,kBAAC,IAAMkF,OAAP,CAAclF,MAAM,KAApB,yFACA,kBAAC,IAAMkF,OAAP,CAAclF,MAAM,KAApB,oDACA,kBAAC,IAAMkF,OAAP,CAAclF,MAAM,MAApB,sDANR,eASI,kBAAC,IAAD,CAAUmF,QAASjB,EAAYa,SAAU,kBAAMZ,GAAeD,KAA9D,0KAEEA,GAAc,4BAAQkB,QAASf,GAAjB,oDAEhB,4BAAQgB,IAAKxB,M,SCtJzBtE,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAElB,IAAMC,EAAa,SAAC3E,EAAM4E,EAAU2F,EAAW7H,EAAM8H,GAEjD,IAkBI9E,EAFAZ,EAAO,GACP2F,EAAiB,GAGjBjF,EAAM,GAEV,GAAI+E,EAAW,CACXzF,EAAO9E,EAAK+E,KAAI,SAAAC,GAAC,OAAIA,EAAEJ,MACvB,IAAK,IAAIuB,EAAI,EAAGA,GAAKrB,EAAKuC,OAAQlB,IAAK,CACnC,GAAIrB,EAAKqB,GACKrB,EAAKqB,GAAGuE,MAAM,KACtB3F,KAAI,SAAA4F,GAAE,OAAIF,EAAeG,KAAKD,EAAGE,WAI3CJ,EAAehF,SAAQ,SAAAT,GAAC,OAAKQ,EAAIR,GAAkBQ,EAAIR,KAAjBQ,EAAIR,GAAK,KAC/CU,EAAMC,OAAOC,KAAKJ,GAAKT,KAAI,SAAAC,GAAC,MAAI,CAACW,OAAOE,OAAO,GAAI7F,EAAK8F,MAAK,SAAAC,GACzD,GAAIA,EAAEnB,IAAamB,EAAEnB,GAAUkG,SAAS9F,GAEpC,OADAe,EAAEnB,GAAYI,EACPe,EAAEnB,GAAUkG,SAAS9F,OAE/BQ,EAAIR,OACJgB,MAAK,SAAC9F,EAAG+F,GAAJ,OAAUA,EAAE,GAAK/F,EAAE,WAI7B4E,EAAO9E,EAAK+E,KAAI,SAAAC,GAAC,OA1CW,SAACC,GAC7B,IAAMC,EAAaD,GAASE,SAASF,EAAMG,MAAM,QAEjD,GAAiB,oCAAbR,EACA,OAAQ4F,GACJ,IAAK,IACD,OAAqC,EAA7BnF,KAAK0F,MAAM7F,EAAa,GACpC,IAAK,IACD,OAAoC,EAA5BG,KAAKC,KAAKJ,EAAa,GACnC,IAAK,KACD,OAAqC,EAA7BG,KAAK2F,MAAM9F,EAAa,GAG5C,OAAOD,EA6BcM,CAAwBP,EAAEJ,QAE1Ca,SAAQ,SAAAT,GAAC,OAAKQ,EAAIR,GAAkBQ,EAAIR,KAAjBQ,EAAIR,GAAK,KACrCU,EAAMC,OAAOC,KAAKJ,GAAKT,KAAI,SAAAC,GAAC,MAAI,CAACW,OAAOE,OAAO,GAAI7F,EAAK8F,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,IAAaI,MAAKQ,EAAIR,OACrFgB,MAAK,SAAC9F,EAAG+F,GAAJ,OAAUA,EAAE,GAAK/F,EAAE,MAGjC,IAAMgG,EAASR,EAAIuF,QAAO,SAAA9E,GAAC,OAAIA,EAAE,GAAK,KAAGpB,KAAI,SAAAoB,GACzC,OAAOA,EAAE,GAAGvB,MAGVsG,EAAqBxF,EAAIuF,QAAO,SAAA9E,GAAC,OAAa,IAATA,EAAE,MAAUpB,KAAI,SAAAoB,GACvD,OAAOA,EAAE,GAAGvB,MAKhB,MAAO,CACHlC,KAAM,MACN1C,KAAM,CACFkG,SACAE,SAAU,CACN,CACIC,MAAO,aACPrG,KATG0F,EAAIuF,QAAO,SAAA9E,GAAC,OAAIA,EAAE,GAAK,KAAGpB,KAAI,SAAAoB,GAAC,OAAIA,EAAE,MAUxCG,gBAAiB,CACb,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,WAAY,CACRC,OAAQ,SAIpB0E,mBAAoBA,GAExBzE,QAAS,CAACC,KACVC,QAAS,CACLwE,UAAWzI,EAAO,IAAM,IACxB0I,YAAY,EACZ3E,QAAS,CACL4E,iBAAiB,EACjBC,OAAQ,CACJC,EAAG7I,EAAO,GAAK,CACX8I,MAAO,CACHC,UAAU,EACVC,SAAU,GACVC,IAAK,KACLC,SAAU,GAEd5D,QAAS,CAAE6D,IAAK,GAAIC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,KAGvDpF,OAAQ,IACRqB,QAAQ,EAER1B,WAAY,CACR0F,MAAO,MACPC,OAAQ,KAGhB9D,iBAAkB,GAClBC,OAAQ,CACJL,QAAS,IAEbM,SAAU,CACNC,KAAM,CACFC,MAAM,GAEVC,MAAO,CACHC,YAAa,EACbC,OAAQ,OAiEbwD,EA1DI,SAAC,GAAgD,IAA9CnM,EAA6C,EAA7CA,KAAM6I,EAAuC,EAAvCA,MAAOjE,EAAgC,EAAhCA,SAAU2F,EAAsB,EAAtBA,UAAW7H,EAAW,EAAXA,KAE9CoG,EAAiBC,iBAAO,MAC9B,EAA0CC,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,KAAzC,mBAAOwB,EAAP,KAAiB4B,EAAjB,KAeM9C,EAAgB,WAClBL,EAAcjJ,KAAO2E,EAAW3E,EAAM4E,EAAU2F,EAAW7H,EAAM8H,GAAUxK,KAC3EiJ,EAAcO,UAclB,OAXAC,qBAAU,WACN,GAAIX,GAAkBA,EAAeY,SAAW1J,IAASiJ,EAAe,CACpE,IAAMU,EAAmB,IAAInF,IAAMsE,EAAeY,QAAS/E,EAAW3E,EAAM4E,EAAU2F,EAAW7H,EAAM8H,IACvGtB,EAAiBS,MAEtB,CAACb,EAAgB9I,IAEpByJ,qBAAU,WACNR,GAAiBE,GAAcG,MAChC,CAACtJ,EAAMmJ,EAAYqB,IAGlB,yBAAKrG,UAAWyF,IAAOC,WACnB,wBAAI1F,UAAWyF,IAAOf,OAAQA,GACf,oCAAbjE,GACF,gSAjCyB,WAC7B,OAAQA,GACJ,IAAK,kCACD,OAAO,EACX,QACI,OAAO,GA8BVkF,IAA8B,kBAAC,IAAMC,MAAP,CAAa9E,MAAOuF,EAAUR,SA1B3C,SAACC,GACvBmC,EAAYnC,EAAEC,OAAOjF,SA0Bb,kBAAC,IAAMkF,OAAP,CAAclF,MAAM,KAApB,0IACA,kBAAC,IAAMkF,OAAP,CAAclF,MAAM,KAApB,gGACA,kBAAC,IAAMkF,OAAP,CAAclF,MAAM,MAApB,iGARR,eAWI,kBAAC,IAAD,CAAUmF,QAASjB,EAAYa,SAAU,kBAAMZ,GAAeD,KAA9D,0KAEEA,GAAc,4BAAQkB,QAASf,GAAjB,oDAEhB,4BAAQgB,IAAKxB,IACZG,GAAiBA,EAAcjJ,KAAKkL,mBAAmBnG,KAAI,SAAAoB,GAAC,OAAI,kBAAC,IAAD,6BAAqBA,Q,wFC5K1FkG,EAAWC,IAAXD,OACAE,EAAWC,IAAXD,OACAE,EAAgBC,IAAhBD,YAqHOE,eAlBS,SAAC7I,GAAD,MAAY,CAChC8I,WAAY9I,EAAMmH,OAAO2B,WACzBC,UAAW/I,EAAMmH,OAAO4B,UACxBC,UAAWhJ,EAAMmH,OAAO6B,UACxBC,SAAUjJ,EAAMmH,OAAO8B,SACvBC,SAAUlJ,EAAMmH,OAAO+B,aAGA,SAAC/M,GAAD,MAAe,CACtCgN,YAAa,SAACC,GAAD,OAAUjN,EAASkN,YAAmBD,KACnDE,YAAa,SAACF,GAAD,OAAUjN,EAASoN,YAAmBH,KACnDI,aAAc,SAACJ,GAAD,OAAUjN,EAASsN,YAAoBL,KACrDM,eAAgB,SAACC,GAAD,OAAYxN,EAASuN,YAAeC,KACpDC,QAAS,SAACxM,GAAD,OAAUjB,EAAS0N,YAAezM,KAC3C0M,gBAAiB,SAACC,GAAD,OAAU5N,EAAS2N,YAAgBC,KACpDC,YAAa,SAACpL,GAAD,OAAUzC,EAAS6N,YAAYpL,QAGjCiK,EAlHC,SAAC,GAaO,IAZHG,EAYE,EAZFA,UACAC,EAWE,EAXFA,SACAF,EAUE,EAVFA,UACAD,EASE,EATFA,WACAI,EAQE,EARFA,SACAc,EAOE,EAPFA,YACAb,EAME,EANFA,YACAG,EAKE,EALFA,YACAE,EAIE,EAJFA,aACAE,EAGE,EAHFA,eACAE,EAEE,EAFFA,QACAE,EACE,EADFA,gBA6BjB,OACI,yBAAKzJ,UAAWyF,IAAOrH,SACnB,yBAAK4B,UAAWyF,IAAOmE,WACH,QAAfnB,GAAwB,kBAAC,IAAD,CAAgBoB,OAAQA,KAC7C,kBAACvB,EAAD,CAAawB,UAAQ,EAACjE,SApBV,SAACyD,GACzBD,EAAeC,IAmBkDS,OA/CtD,yBAiDH,yBAAK/J,UAAWyF,IAAOuE,QACnB,kBAAC,IAAD,CAAUnE,SAjCD,WACrBiD,GAAaJ,KAgCD,cACA,kBAAC,IAAD,CAAU7C,SA/BD,WACrBoD,GAAaL,KA8BD,aACA,kBAAC,IAAD,CAAU/C,SA7BA,WACtBsD,GAAcR,KA4BF,gBAGJ,kBAAC,IAAD,CACIsB,MAAO,CAAEC,MAAO,KAChBC,YAAY,+FACZC,aAAa,GACbC,QAAS,aAETC,iBAAiB,WACjBzE,SA/BK,SAAC9I,GAClBwM,EAAQxM,IA+BIwN,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAOvK,SAASwK,cAAcC,QAAQH,EAAME,gBAAkB,IAGlE,kBAACxC,EAAD,CAAQpH,MAAM,IAAd,iEACA,kBAACoH,EAAD,CAAQpH,MAAM,UAAd,wCACA,kBAACoH,EAAD,CAAQpH,MAAM,MAAd,yFACA,kBAACoH,EAAD,CAAQpH,MAAM,OAAd,2FAMR,yBAAKd,UAAWyF,IAAOmF,YAEnB,kBAACxC,EAAD,CACI+B,YAAY,sGAAsBU,SAxC3B,SAAC/J,GACpB2I,EAAgB3I,IAuCwDgK,YAAU,EAACb,MAAO,CAAEC,MAAO,KACvFa,aAAW,IAEf,kBAAC,IAAD,CACId,MAAO,CAAEC,MAAO,KAChBC,YAAY,0DACZC,aAAcvB,GAAsB,GACpChD,SAnDS,SAACtH,GACtBoL,EAAYpL,KAoDA,kBAAC2J,EAAD,CAAQpH,MAAM,IAAd,0FACA,kBAACoH,EAAD,CAAQpH,MAAM,YAAd,qGACA,kBAACoH,EAAD,CAAQpH,MAAM,SAAd,2G,kBClGZkK,EAAUC,IAAVD,MACAE,EAAYC,IAAZD,QAoHOE,IAlHO,WAClB,IAAMtP,EAAWuP,cACXC,EAAyBC,aAAY,SAAC5L,GAAD,OAAWA,EAAMmH,UAC5D,EAA8BjC,mBAAS,MAAvC,mBAAOxG,EAAP,KAAgBmN,EAAhB,KACA,EAAsC3G,mBAAS,MAA/C,mBAAO4G,EAAP,KAAoBC,EAApB,KACMtN,EAAU,CACZuN,iBAAkBL,EAAuBM,aAAeN,EAAuBM,YAAY,GAAG7B,OAAO,qBAAqBhL,WAC1H8M,eAAgBP,EAAuBM,aAAeN,EAAuBM,YAAY,GAAG7B,OAAO,qBAAqBhL,WACxH2J,UAAW4C,EAAuB5C,UAClCE,SAAU0C,EAAuB1C,SACjCD,UAAW2C,EAAuB3C,UAClC5L,KAAMuO,EAAuBvO,KAC7B+O,aAAcR,EAAuBS,aACrClD,SAAUyC,EAAuBzC,UAGrCvD,qBAAU,WACNxJ,EAASoD,YAAYd,IAAU7B,MAAK,SAACV,GACjC2P,EAAW3P,EAAKA,SAGpBC,EC/BmB,SAACsC,GAAD,OAAa,SAACtC,GACrC,OAAOkQ,EAA2B5N,GAAS7B,MACvC,SAACC,GAUG,OATAV,EAAS,CACLyC,KAAM0N,MAGVnQ,EAAS,CACLyC,KAAME,IACNC,QAASlC,EAASX,KAAK8C,UAGpBC,QAAQC,QAAQrC,MAE3B,SAACsC,GACG,IAAMH,EACDG,EAAMtC,UACHsC,EAAMtC,SAASX,MACfiD,EAAMtC,SAASX,KAAK8C,SACxBG,EAAMH,SACNG,EAAMC,WAWV,OATAjD,EAAS,CACLyC,KAAM2N,MAGVpQ,EAAS,CACLyC,KAAME,IACNC,QAASC,IAGNC,QAAQK,aDAVkN,CAAY,CAAE5N,KAAM,aAAchC,MAAK,SAACV,GAC7C6P,EAAe7P,EAAKA,WAGzB,CAACyP,IAEJ,IAAMc,EAAUX,GAAeA,EAAY7K,KAAI,SAAAyL,GAAM,MAAK,CACtD3H,MAAO2H,EAAO3H,MACdvB,UAAWkJ,EAAO3C,KAClB4C,IAAKD,EAAO3C,KACZ6C,MAAOF,EAAOE,MACdrC,MAAO,QAENrI,MAAK,SAAC9F,EAAG+F,GAAJ,OAAU/F,EAAEwQ,MAAQzK,EAAEyK,SAE1BC,EAAWnO,GAAWA,EAAQyI,QAAO,SAAA9E,GAAC,OAAMA,EAAE,0BAA4BA,EAAE,iBAAoB,CAClG,wBAAyBA,EAAE,yBAC3B,gBAAiBA,EAAE,iBACnB,UAAWA,EAAE,iBACbyK,KAEJ,OACI,6BACI,kBAAC,IAAD,CACIzM,UAAWyF,IAAOf,MAClBA,MAAM,oGACNgI,UAAiB,OAAPrO,QAAO,IAAPA,OAAA,EAAAA,EAAS6E,SAAU,+HAAyB,kCAAI7E,QAAJ,IAAIA,OAAJ,EAAIA,EAAS6E,WAEvE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAMlD,UAAWyF,IAAOkH,KAAMC,iBAAiB,KAC3C,kBAAC1B,EAAD,CAAS2B,IAAI,6HAAyBP,IAAI,KAErCb,GAAeA,EAAY7K,KAAI,SAAAyL,GAC5B,MAAoB,QAAhBA,EAAO9N,KACA,kBAAC,EAAD,CACHmG,MAAO2H,EAAO3H,MACdjE,SAAU4L,EAAO3C,KACjB7N,KAAMwC,IAEHgO,EAAO9N,MAAQ8N,EAAO9N,KAAKoI,SAAS,OACpC,kBAAC,EAAD,CACHjC,MAAO2H,EAAO3H,MACdjE,SAAU4L,EAAO3C,KACjBnL,KAAM8N,EAAO9N,KAAKoI,SAAS,KAC3B9K,KAAMwC,EACN+H,UAAWqF,EAAY9J,MAAK,SAAAK,GAAC,OAAIA,EAAE0H,OAAS2C,EAAO3C,QAAxC,YAEQ,UAAhB2C,EAAO9N,KACP,kBAAC,IAAD,KACH,kBAACyM,EAAD,CAAO8B,OAAO,iHAAuBR,IAAI,KACrC,kBAAC,IAAD,CAAOS,WACHP,EAAUJ,QAAS,CACnB,CACI1H,MAAO,8IACPvB,UAAW,wBACXmJ,IAAK,yBAET,CACI5H,MAAO,qEACPvB,UAAW,gBACXmJ,IAAK,iBAET,CACI5H,MAAO,2BACPvB,UAAW,UACXmJ,IAAK,qBAlBlB,MA2Bf,kBAACpB,EAAD,CAAS2B,IAAI,6EAAiBP,IAAI,KAC9B,kBAAC,IAAD,CACIU,UAAQ,EACR9I,OAAO,OACP+I,KAAK,QACLC,OAAQ,CAAEC,EAAG,qBAAsB/F,EAAG,QACtCgF,QAASA,EACTW,WAAY1O,EACZ+O,YAAY,OACZC,YAAU,EACV3F,IAAI,OACJG,OAAO,qB,8KElHvBK,EAAWC,IAAXD,OAEKoF,EAAW,WAapB,OACI,kBAAC,IAAD,CACIjO,KAAK,QACL6E,OAAO,WACPqJ,cAAe,CACXC,UAAU,GAEdC,SAlBS,SAACC,GACdC,QAAQC,IAAI,WAAYF,GACxBG,IAAYvN,SAASoN,GAAQnR,MAAK,WAC9BuR,OAAOC,SAASC,aAgBhBC,eAZe,SAACC,GACpBP,QAAQC,IAAI,UAAWM,IAYnBC,aAAa,OAEb,kBAAC,IAAKC,KAAN,CACIlM,MAAM,WACN7C,KAAK,WACLgP,MAAO,CACH,CACIC,UAAU,EACV3P,QAAS,4BAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAKyP,KAAN,CACIlM,MAAM,0JACN7C,KAAK,cACLgP,MAAO,CACH,CACIC,UAAU,EACV3P,QAAS,4BAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAKyP,KAAN,CACIlM,MAAM,uCACN7C,KAAK,WACLgP,MAAO,CACH,CACIC,UAAU,EACV3P,QAAS,4BAIjB,kBAAC,IAAM4P,SAAP,OAGJ,kBAAC,IAAKH,KAAN,CACIlM,MAAM,iCACN7C,KAAK,QAEL,kBAAC,IAAD,CAAQ8K,YAAY,iCAAQC,aAAa,UACrC,kBAAClC,EAAD,CAAQpH,MAAM,UAAd,wCACA,kBAACoH,EAAD,CAAQpH,MAAM,OAAd,yFACA,kBAACoH,EAAD,CAAQpH,MAAM,MAAd,2FAIR,kBAAC,IAAKsN,KAAN,KACI,kBAAC,IAAD,CAAQ7P,KAAK,UAAUiQ,SAAS,UAAhC,oHC3EHC,GAFMtG,IAAXD,OAEsB,SAAC,GAA4B,IAA1BwG,EAAyB,EAAzBA,WAAYhB,EAAa,EAAbA,OACzC,EAAgC7I,oBAAS,GAAzC,mBAAO8J,EAAP,KAAiBC,EAAjB,KACJjB,QAAQC,IAAI,SAAUF,GAsBlB,OACI,kBAAC,IAAD,CACIrO,KAAK,QACL6E,OAAO,WACPqJ,cAAe,CACXC,UAAU,GAEdC,SA5BS,SAACoB,GACdlB,QAAQC,IAAI,oBAAqB,CAAC1R,SAAUwR,EAAOxR,SAAUC,SAAU0S,EAAK1S,WAC5E0R,IAAYiB,eAAe,CAAC5S,SAAUwR,EAAOxR,SAAUC,SAAU0S,EAAK1S,WAAWI,MAAK,WAClFoC,IAAQoQ,QAAQ,8HAChBL,GAAW,OAyBXT,eArBe,SAACC,GACpBP,QAAQC,IAAI,UAAWM,IAqBnBc,eAlBe,SAACC,EAAeC,GACnCvB,QAAQC,IAAI,2BAA4BqB,EAAeC,GACnDA,EAAU/S,WAAa+S,EAAS,YAAkBA,EAAU/S,SAC5DyS,GAAY,GAEZA,GAAY,IAcZT,aAAa,OAEb,kBAAC,IAAKC,KAAN,CACIlM,MAAM,uCACN7C,KAAK,WACLgP,MAAO,CACH,CACIC,UAAU,EACVa,IAAK,EACLxQ,QAAS,gKAIjB,kBAAC,IAAM4P,SAAP,OAGJ,kBAAC,IAAKH,KAAN,CACIlM,MAAM,8FACN7C,KAAK,aACLgP,MAAO,CACH,CACIC,UAAU,EACV3P,QAAS,4BAIjB,kBAAC,IAAM4P,SAAP,OAGJ,kBAAC,IAAKH,KAAN,KACKO,EAAW,kBAAC,IAAD,CAAQpQ,KAAK,UAAUiQ,SAAS,UAAhC,sJAEA,gR,yCC/D5B,IAAQtG,EAAWC,IAAXD,OAEKkH,EAAiB,WAE1B,MAA0BvK,mBAAS,MAAnC,mBAAOwK,EAAP,KAAcC,EAAd,KACA,EAA0BzK,mBAAS,MAAnC,mBAAO5H,EAAP,KAAcsS,EAAd,KACA,EAAwC1K,mBAAS,MAAjD,mBAAO2K,EAAP,KAAqBC,EAArB,KACA,EAA4C5K,oBAAS,GAArD,mBAAO6K,EAAP,KAAuBC,EAAvB,KACA,EAAwE9K,oBAAS,GAAjF,mBAAO+K,EAAP,KAAqCC,EAArC,KAEMC,EAAS,CACX,CACIzQ,KAAM,uCACNqK,KAAM,UAEV,CACIrK,KAAM,wFACNqK,KAAM,OAEV,CACIrK,KAAM,wFACNqK,KAAM,OAIdpE,qBAAU,WAEN9H,cAAYjB,MAAK,SAAAU,GAAK,OAAIsS,EAAStS,EAAMpB,SACzC6B,cAAmBnB,MAAK,SAAAiT,GAAY,OAAIC,EAAgBD,EAAa3T,SAErEqB,cAAeX,MAAK,SAACwT,GACjBzS,cAAef,MAAK,SAACyT,GAEjBV,EAASS,EAAUlU,KAAK+E,KAAI,SAAAqP,GAAI,kCACrBA,GADqB,IAExBC,OAAQF,EAAUnU,KAAK8F,MAAK,SAAAlC,GAAI,OAAIwQ,EAAKjT,KAAOyC,EAAK0Q,UAAQD,OAC7DE,cAAeJ,EAAUnU,KAAK8F,MAAK,SAAAlC,GAAI,OAAIwQ,EAAKjT,KAAOyC,EAAK0Q,UAAQC,mBAE1EvO,MAAK,SAAC9F,EAAG+F,GAAJ,OAAUA,EAAEoO,OAASnU,EAAEmU,mBAGvC,IAEHvC,QAAQC,IAAI,QAASyB,GACrB1B,QAAQC,IAAI,QAAS3Q,GACrB0Q,QAAQC,IAAI,eAAgB4B,GAE5B,IAgCMpD,EAAU,CACZ,CACI1H,MAAO,kDACPwF,MAAO,IACP/G,UAAW,WACXmJ,IAAK,WACL+D,MAAO,QAEX,CACI3L,MAAO,8GACPwF,MAAO,IACP/G,UAAW,cACXmJ,IAAK,eAET,CACI5H,MAAO,wFACPvB,UAAW,SACXmJ,IAAK,IACLpC,MAAO,IACPoG,OAAQ,SAACzU,EAAM6R,GACX,OACI,kBAAC,IAAD,CAAQtD,aAAcvO,EAAMoO,MAAO,CAAEC,MAAO,KACpCrE,SAAU,SAAC0K,GAAD,OAhDR9Q,EAgDkC8Q,EAhD5BN,EAgDiCvC,OA/C7DG,IAAY2C,WAAW,CAAEL,OAAQF,EAAKjT,GAAIkT,OAAQzQ,IAAQlD,MAAK,WAC3DoC,IAAQoQ,QAAQ,oMAFC,IAACtP,EAAMwQ,IAiDXhT,EAAM2D,KAAI,SAAAnB,GAAI,OAAI,kBAAC,EAAD,CAAQqB,MAAOrB,EAAKzC,IAAKyC,EAAKyC,aAKjE,CACIwC,MAAO,kIACPvB,UAAW,gBACXmJ,IAAK,IACLpC,MAAO,IACPoG,OAAQ,SAACzU,EAAM6R,GACX,OACI8B,GAAgB,kBAAC,IAAD,CACZiB,KAAK,WACLrG,aACMvO,EAAOA,EAAK0K,MAAM,KAAK3F,KAAI,SAAAoB,GAAC,OAAIwN,EAAa7N,MAAK,SAAAb,GAAK,OAAIA,EAAM9D,MAAQgF,KAAGhF,WAAMyP,EAExFxC,MAAO,CAAEC,MAAO,KAChBrE,SAAU,SAAC0K,GAAD,OA7DIG,EA6D8BH,EA7DdN,EA6DmBvC,EA3DjEC,QAAQC,IAAI,uBAAwB8C,EAAgBT,QACpDpC,IAAY8C,mBAAmB,CAAER,OAAQF,EAAKjT,GAAI0T,eAAgBA,EAAeE,KAAK,OAAQrU,MAAK,WAC/FoC,IAAQoQ,QAAQ,0PAJS,IAAC2B,EAAgBT,IA+D7BT,EAAa5O,KAAI,SAAAiQ,GAAW,OAAI,kBAAC,EAAD,CAAQ/P,MAAO+P,EAAY7T,IAAK6T,EAAY3O,aAK7F,CACIwC,MAAO,iCACPvB,UAAW,OACXmJ,IAAK,IACLpC,MAAO,IACPoG,OAAQ,SAACzU,EAAM6R,GACX,OACI,kBAAC,IAAD,CAAQtD,aAAcvO,EAAMoO,MAAO,CAAEC,MAAO,KACpCrE,SAAU,SAAC0K,GAAD,OAxFRxT,EAwFkCwT,EAxF5BN,EAwFiCvC,OAvF7DG,IAAYiD,WAAW,CAAE5U,SAAU+T,EAAK/T,SAAUa,SAAQR,MAAK,WAC3DoC,IAAQoQ,QAAQ,2HAFC,IAAChS,EAAMkT,IAyFXH,EAAOlP,KAAI,SAAA7D,GAAI,OAAI,kBAAC,EAAD,CAAQ+D,MAAO/D,EAAK2M,MAAO3M,EAAKsC,YAKpE,CACIqF,MAAO,uCACPwF,MAAO,IACP/G,UAAW,YACXmJ,IAAK,aAET,CACIA,IAAK,YACL+D,MAAO,QACPnG,MAAO,IACPoG,OAAQ,SAACS,GAAD,OAAW,oCACf,kBAAC,IAAD,CAAQxS,KAAK,UAAUyS,OAAK,EAAC/D,KAAK,QAAQ/G,QAAS,WAC/C2J,EAAgCkB,KADpC,6FAQZ,OACI,6BACI,kBAAC,IAAD,CACI/Q,UAAWyF,IAAOf,MAClBA,MAAM,+DACNgI,SAAS,mNACTuE,MAAO,kBAAC,IAAD,CAAQ/K,QAnGT,WACdyJ,GAAkB,IAkGyBpR,KAAK,WAAjC,mHAEX,6BAEA,2BACI,oHADJ,IAC2B,6BACvB,iGAFJ,6QAEyE,6BACrE,qFAHJ,+QAG8E,6BAC1E,6GAJJ,+XAOA,kBAAC,IAAD,CAAO0O,KAAK,QAAQb,QAASA,EAASW,WAAYsC,EAAOnC,OAAQ,CAAEC,EAAG,KAAM/F,EAAG,OAE/E,kBAAC,IAAD,CAAO1C,MAAM,uKAAgCwM,QAASxB,EAAgByB,SA5GzD,WACjBxB,GAAkB,IA4GPyB,QAAQ,GACX,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAO1M,MAAK,mKAAiCkL,EAA6B9S,aACnEoU,UAAWtB,EAA8BuB,SA9GrB,WAC/BtB,GAAgC,IA8GrBuB,QAAQ,GACX,kBAAC,EAAD,CAAgB1C,WAAYmB,EAAiCnC,OAAQkC,Q,0KC5L/EtB,EAAW,SAAAxN,GACb,IAAKA,EACD,OACI,yBAAKd,UAAU,qBAAqBP,KAAK,SAAzC,uJAON4R,E,kDACF,WAAYtR,GAAQ,IAAD,8BACf,cAAMA,IACDuR,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAK5R,MAAQ,CACT+R,MAAO,GACPvV,SAAU,GACVwV,SAAS,EACThT,QAAS,IAVE,E,iDAcnB,SAAcmH,GACV8L,KAAKC,SAAS,CACVH,MAAO5L,EAAEC,OAAOjF,U,8BAIxB,SAAiBgF,GACb8L,KAAKC,SAAS,CACV1V,SAAU2J,EAAEC,OAAOjF,U,yBAI3B,SAAYgF,GAAI,IAAD,OACXA,EAAEgM,iBAEFF,KAAKC,SAAS,CACVlT,QAAS,GACTgT,SAAS,IAGbC,KAAKG,KAAKC,cAEmC,IAAzCJ,KAAKK,SAASvP,QAAQwP,QAAQhP,OAC9BjH,YAAe,CAACC,SAAU0V,KAAKjS,MAAM+R,MAAOvV,SAAUyV,KAAKjS,MAAMxD,WAAWI,MACxE,SAACuJ,GACOA,EAAE7I,MAAMiG,SACR,EAAKnD,MAAMoS,QAAQ1L,KAAK,UACxBqH,OAAOC,SAASC,aAGxB,SAAAlP,GACI,IAAMsT,EACDtT,EAAMtC,UACHsC,EAAMtC,SAASX,MACfiD,EAAMtC,SAASX,KAAK8C,SACxBG,EAAMH,SACNG,EAAMC,WAEV,EAAK8S,SAAS,CACVF,SAAS,EACThT,QAASyT,OAKrBR,KAAKC,SAAS,CACVF,SAAS,M,oBAKrB,WAAU,IAAD,OACL,OACI,yBAAK3R,UAAU,aACX,yBACIA,UAAU,sBACVqS,IAAI,yDACJC,IAAI,gBAGR,yBAAKtS,UAAU,uBAMX,wBAAIA,UAAU,yBAAd,iFAEA,kBAAC,IAAD,CACIuS,SAAWX,KAAKN,YAChBnL,IAAM,SAAAvE,GACF,EAAKmQ,KAAOnQ,IAIhB,yBAAK5B,UAAU,cACX,2BAAOwS,QAAQ,SAAf,0DACA,kBAAC,IAAD,CACIjU,KAAK,OACLyB,UAAU,eACVX,KAAK,QACLyB,MAAQ8Q,KAAKjS,MAAM+R,MACnB7L,SAAW+L,KAAKJ,cAChBiB,YAAc,CAAEnE,MAIxB,yBAAKtO,UAAU,cACX,2BAAOwS,QAAQ,YAAf,wCACA,kBAAC,IAAD,CACIjU,KAAK,WACLyB,UAAU,eACVX,KAAK,WACLyB,MAAQ8Q,KAAKjS,MAAMxD,SACnB0J,SAAW+L,KAAKH,iBAChBgB,YAAc,CAAEnE,MAIxB,yBAAKtO,UAAU,cACX,4BACIA,UAAU,4BACV0S,SAAWd,KAAKjS,MAAMgS,SAEpBC,KAAKjS,MAAMgS,SACT,0BAAM3R,UAAU,qCAEpB,kEAIN4R,KAAKjS,MAAMhB,SACT,yBAAKqB,UAAU,cACX,yBAAKA,UAAU,qBAAqBP,KAAK,SACnCmS,KAAKjS,MAAMhB,UAIzB,kBAAC,IAAD,CACIsL,MAAQ,CAACjH,QAAS,QAClBmD,IAAM,SAAAvE,GACF,EAAKqQ,SAAWrQ,Y,GAxI5B+Q,aAkJLtB,O,6PChJTuB,E,kDACF,WAAY7S,GAAQ,IAAD,8BACf,cAAMA,IACD8S,OAAS,EAAKA,OAAOtB,KAAZ,gBACd5D,QAAQC,IAAI,wBAAyBkF,EAAQC,SAASC,MACtD,EAAKrT,MAAQ,CACTsT,oBAAoB,EACpBC,gBAAgB,EAChBC,iBAAa1G,EACb2G,gBAAiB,MARN,E,qDAYnB,WACI,IAAM7T,EAAW3C,KAAKyW,MAAM3W,aAAa4W,QAAQ,SACjD3F,QAAQC,IAAI,WAAYrO,GACxB,IAAM0Q,EAAOpC,IAAY0F,iBAErBtD,GACA2B,KAAKC,SAAS,CACVsB,YAAatF,IAAY0F,iBACzBN,mBAAoBhD,EAAKhT,MAAM0J,SAAS,kBACxCuM,eAAgBjD,EAAKhT,MAAM0J,SAAS,kB,gCAKhD,SAAmB6M,EAAWC,EAAWC,GACH,OAA9BD,EAAUL,iBACVxB,KAAKC,SAAS,CACVuB,gBAAiB,S,oBAK7B,WACIvF,IAAY8F,W,oBAGhB,WACI,MAA4D/B,KAAKjS,MAAzDwT,EAAR,EAAQA,YAAaF,EAArB,EAAqBA,mBAAoBC,EAAzC,EAAyCA,eAEzC,OACI,kBAAC,IAAD,KACI,6BACI,yBAAKlT,UAAU,+CACX,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAM4T,GAAI,IAAK5T,UAAU,gBACrB,yBAAKA,UAAU,OAAOiK,MAAO,CAAE4J,gBAAgB,OAAD,OAASC,IAAT,SAElD,4BAAQ9T,UAAU,iBAAiBzB,KAAK,SAASwV,iBAAe,WACxDC,iBAAe,0BAA0BC,gBAAc,yBACvDC,gBAAc,QAAQC,aAAW,qBACrC,0BAAMnU,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BhD,GAAG,0BAMzC,wBAAIgD,UAAU,mCAUTmT,GACG,wBAAInT,UAAU,YACV,kBAAC,IAAD,CAAM4T,GAAI,SAAU5T,UAAU,YAA9B,0CAMNiT,GAAsBC,IACpB,wBAAIlT,UAAU,YACV,kBAAC,IAAD,CAAM4T,GAAI,OAAQ5T,UAAU,YAA5B,yCAMPkT,GACG,wBAAIlT,UAAU,YACV,kBAAC,IAAD,CAAM4T,GAAI,SAAU5T,UAAU,YAA9B,+CAMPmT,EACG,yBAAKnT,UAAU,sBACX,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAM4T,GAAI,WAAY5T,UAAU,YAAYmT,EAAYrW,YAAxD,KAAuEqW,EAAYjX,SAAnF,MAEJ,wBAAI8D,UAAU,YACV,uBAAGoU,KAAK,SAASpU,UAAU,WACxBkG,QAAS0L,KAAKiB,QADjB,oCAKR,yBAAK7S,UAAU,sBACX,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAM4T,GAAI,SAAU5T,UAAU,YAA9B,wCAYxB4R,KAAKjS,MAAMyT,gBACL,kBAAC,IAAD,CAAUQ,GAAIhC,KAAKjS,MAAMyT,kBACzB,KAGV,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,UAAWlD,MAC9C,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,SAASC,UAAWlD,MACtC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,WAAWC,UAAWC,MACxC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWE,MACtC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,WAAWC,UAAWG,MACxC,kBAAC,IAAD,CAAOJ,KAAK,QAAQC,UAAWI,MAC/B,kBAAC,IAAD,CAAOL,KAAK,OAAOC,UAAWK,MAC9B,kBAAC,IAAD,CAAON,KAAK,SAASC,UAAWM,QAIxC,yBAAK7U,UAAU,UACX,yBAAKA,UAAU,OAAOiK,MAAO,CAAE4J,gBAAgB,OAAD,OAASiB,IAAT,c,GA1IhDnC,aAyJHoC,gBAAWvM,aART,SAAA7I,GAAK,MAAK,MAIP,SAAA7D,GAAQ,MAAK,KAIP0M,CAA+BoK,M,mDC9KzD,wEAuCe6B,IAjCE,WAEb,OADA9G,QAAQC,IAAI,QAER,yBAAK5N,UAAWyF,IAAO,cACnB,6BACA,0GAEA,kBAAC,IAAD,CAASmO,GAAG,WAAW3J,MAAO,CAAE+K,eAAgB,SAC5C,yBAAKhV,UAAWyF,IAAOwP,MACnB,yBAAKjV,UAAWyF,IAAOyP,MAAOjL,MAAO,CAAC4J,gBAAgB,OAAD,OAASsB,IAAT,QACrD,uBAAGnV,UAAWyF,IAAOf,OAArB,uKAIR,6BAXJ,6HAcI,kBAAC,IAAD,CAASgO,UAAQ,EAACkB,GAAG,UAAU3J,MAAO,CAAE+K,eAAgB,SACpD,yBAAKhV,UAAWyF,IAAOwP,MAAvB,gGAKJ,kBAAC,IAAD,CAASvC,UAAQ,EAACkB,GAAG,YAAY3J,MAAO,CAAE+K,eAAgB,SACtD,yBAAKhV,UAAWyF,IAAOwP,MAAvB,iJ,oBC9BhBvZ,EAAOC,QAAU,IAA0B,mC,8UC8BnCuP,GADW/C,IAAXD,OACYiD,IAAZD,SAgzBOkK,gBAAQ5M,aARC,SAAC7I,GAAD,MAAY,CAChC0V,UAAW1V,EAAMmH,OAAOwO,eAGD,SAACxZ,GAAD,MAAe,CACtCwZ,WAAY,SAAC5L,GAAD,OAAU5N,EAASwZ,YAAW5L,QAGvBlB,EA9yBH,SAAC,GAAmB,IAAjB6M,EAAgB,EAAhBA,UACnB,EAAgCxQ,oBAAS,GAAzC,mBAAO0Q,EAAP,KAAiBC,EAAjB,KACA,EAAsB3Q,oBAAS,GAA/B,mBAAO4Q,EAAP,KAAYC,EAAZ,KACA,EAAoC7Q,oBAAS,GAA7C,mBAAO8Q,EAAP,KAAmBC,EAAnB,KACA,EAAoC/Q,oBAAS,GAA7C,mBAAmBgR,GAAnB,WACM/Z,EAAWuP,cACX8G,EAAU2D,cAChB,EAAeC,IAAKC,UAAbjE,EAAP,oBACM9B,EAAOrT,KAAKyW,MAAM3W,aAAa4W,QAAQ,SACzC/F,EAAgB,GAGpBjI,qBAAU,kBAAMyM,EAAKkE,gBAAe,CAAClE,EAAMxE,EAAeoI,IAEtDjZ,aAAa4W,QAAQ,kBACrB/F,EAAa,2BACN3Q,KAAKyW,MAAM3W,aAAa4W,QAAQ,kBAChC/F,IAIX,IAkBME,EAAQ,uCAAG,WAAOC,GAAP,mBAAA3R,EAAA,6DACb4R,QAAQC,IAAI,SAAUF,GAEhBwI,EAAY,IAAI1U,OAAO,CACzB,SAAUkM,EAAO,UACjB,WAAYA,EAAO,YACnB,QAASA,EAAO,SAChB,4BAA6BA,EAAO,6BACpC,uBAAwBA,EAAO,wBAC/B,oCAAqCA,EAAO,qCAC5C,gCAAiCA,EAAO,iCACxC,yBAA0BA,EAAO,0BACjC,kBAAmBA,EAAO,mBAAqBA,EAAO,mBAAmB3O,WAAa,KACtF,2BAA4B2O,EAAO,4BACnC,mBAAoBA,EAAO,oBAAsBA,EAAO,oBAAoB3O,WAAa,KACzF,mBAAoB2O,EAAO,oBAC3B,wCAAyCA,EAAO,yCAChD,mCAAoCA,EAAO,oCAC3C,uCAAwCA,EAAO,wCAC/C,6BAA8BA,EAAO,8BACrC,gBAAiBA,EAAO,iBACxB,0BAA2BA,EAAO,2BAClC,iCAAkCA,EAAO,kCACzC,iCAAkCA,EAAO,kCACzC,mBAAoBA,EAAO,oBAC3B,6BAA8BA,EAAO,8BACrC,oBAAqBA,EAAO,qBAC5B,2BAA4BA,EAAO,4BACnC,6BAA8BA,EAAO,8BACrC,yBAA0BA,EAAO,0BACjC,kCAAmCA,EAAO,mCAC1C,qBAAsBA,EAAO,sBAC7B,2BAA4BA,EAAO,4BACnC,0BAA2BA,EAAO,2BAClC,4CAA6CA,EAAO,6CAA+CA,EAAO,6CAA6C,GAAK,KAC5J,oCAAqCA,EAAO,qCAAuCA,EAAO,qCAAqC,GAAK,KACpI,wDAAyDA,EAAO,yDAA2DA,EAAO,yDAAyD,GAAK,KAChM,gBAAiBuC,EAAK/T,SACtB,wBAAyBwR,EAAO,yBAChC,UAAWuC,EAAKlT,KAChB,eAAgBwY,EAAW,WAAa,UAGtCY,EAAoB,WAAO,IAAD,wDA4F5B,OAzFI,UAAAzI,EAAO,+BAAP,eAAgCxK,UAAhC,UAA0CwK,EAAO,+BAAjD,aAA0C,EAAgCxK,QAC1EgT,EAAU,sBAAwB,sBAAIxI,EAAO,yBAAX,CAAoCA,EAAO,0BAAyB3O,YACnG,UAAI2O,EAAO,+BAAX,aAAI,EAAgCxK,QACvCgT,EAAU,sBAAwBxI,EAAO,wBAAwB3O,YAC9D,UAAI2O,EAAO,+BAAX,aAAI,EAAgCxK,QACvCgT,EAAU,sBAAwB,CAACxI,EAAO,yBAAyB3O,WAEnEmX,EAAU,sBAAwB,MAItC,UAAIxI,EAAO,wBAAX,aAAI,EAAyBxK,QACzBgT,EAAU,eAAiBxI,EAAO,iBAAiB,IAChD,UAAIA,EAAO,wBAAX,aAAI,EAAyBxK,QAChCgT,EAAU,eAAiBxI,EAAO,iBAElCwI,EAAU,eAAiB,MAI/B,UAAIxI,EAAO,4CAAX,aAAI,EAA6CxK,QAC7CgT,EAAU,mCAAqCxI,EAAO,qCAAqC,IACxF,UAAIA,EAAO,4CAAX,aAAI,EAA6CxK,QACpDgT,EAAU,mCAAqCxI,EAAO,qCAEtDwI,EAAU,mCAAqC,MAI/C,UAAAxI,EAAO,+BAAP,eAAgCxK,UAAhC,UAA0CwK,EAAO,+BAAjD,aAA0C,EAAgCxK,QAC1EgT,EAAU,sBAAwB,sBAAIxI,EAAO,yBAAX,CAAoCA,EAAO,0BAAyB3O,YACnG,UAAI2O,EAAO,+BAAX,aAAI,EAAgCxK,QACvCgT,EAAU,sBAAwBxI,EAAO,wBAAwB3O,YAC9D,UAAI2O,EAAO,+BAAX,aAAI,EAAgCxK,QACvCgT,EAAU,sBAAwB,CAACxI,EAAO,yBAAyB3O,WAEnEmX,EAAU,sBAAwB,MAIlC,UAAAxI,EAAO,0BAAP,eAA2BxK,UAA3B,UAAqCwK,EAAO,0BAA5C,aAAqC,EAA2BxK,QAChEgT,EAAU,iBAAmB,sBAAIxI,EAAO,oBAAX,CAA+BA,EAAO,qBAAoB3O,YACpF,UAAI2O,EAAO,0BAAX,aAAI,EAA2BxK,QAClCgT,EAAU,iBAAmBxI,EAAO,mBAAmB3O,YACpD,UAAI2O,EAAO,0BAAX,aAAI,EAA2BxK,QAClCgT,EAAU,iBAAmB,CAACxI,EAAO,oBAAoB3O,WAEzDmX,EAAU,iBAAmB,MAI7B,UAAAxI,EAAO,0BAAP,eAA2BxK,UAA3B,UAAqCwK,EAAO,0BAA5C,aAAqC,EAA2BxK,QAChEgT,EAAU,iBAAmB,sBAAIxI,EAAO,oBAAX,CAA+BA,EAAO,qBAAoB3O,YACpF,UAAI2O,EAAO,0BAAX,aAAI,EAA2BxK,QAClCgT,EAAU,iBAAmBxI,EAAO,mBAAmB3O,YACpD,UAAI2O,EAAO,0BAAX,aAAI,EAA2BxK,QAClCgT,EAAU,iBAAmB,CAACxI,EAAO,oBAAoB3O,WAEzDmX,EAAU,iBAAmB,MAI7B,UAAAxI,EAAO,6CAAP,eAA8CxK,UAA9C,UAAwDwK,EAAO,6CAA/D,aAAwD,EAA8CxK,QACtGgT,EAAU,oCAAsC,CAACxI,EAAO,sCAAuCA,EAAO,uCAAuC3O,YAC1I,UAAI2O,EAAO,6CAAX,aAAI,EAA8CxK,QACrDgT,EAAU,oCAAsCxI,EAAO,sCAAsC3O,YAC1F,UAAI2O,EAAO,6CAAX,aAAI,EAA8CxK,QACrDgT,EAAU,oCAAsC,CAACxI,EAAO,uCAAuC3O,WAE/FmX,EAAU,oCAAsC,MAIhD,UAAAxI,EAAO,gCAAP,eAAiCxK,UAAjC,UAA2CwK,EAAO,gCAAlD,aAA2C,EAAiCxK,QAC5EgT,EAAU,uBAAyB,CAACxI,EAAO,yBAA0BA,EAAO,0BAA0B3O,YACnG,UAAI2O,EAAO,gCAAX,aAAI,EAAiCxK,QACxCgT,EAAU,uBAAyBxI,EAAO,yBAAyB3O,YAChE,UAAI2O,EAAO,gCAAX,aAAI,EAAiCxK,QACxCgT,EAAU,uBAAyB,CAACxI,EAAO,0BAA0B3O,WAErEmX,EAAU,uBAAyB,KAGnCxI,EAAM,KACNwI,EAAU,WAAaxI,EAAM,KAAS3D,OAAO,qBAE7CmM,EAAU,WAAaE,MAASrM,OAAO,qBAGpCmM,GAvIE,SA0IQC,IA1IR,OA0IPhY,EA1IO,OA4IbyX,GAAc,GACd9Z,EAASuC,YAAQF,IACZ5B,MAAK,WACFqZ,GAAc,GACdC,GAAc,GACdnZ,aAAa2Z,WAAW,gBACxBtE,EAAKkE,cACL9D,EAAQ1L,KAAK,UACb9H,IAAQoQ,QAAQ,oJAEnB9Q,OAAM,WACH4X,GAAc,MAvJT,2CAAH,sDAsKd,SAASS,EAAUvW,GACf,OAAO,oCACH,kBAAC,IAAD,eACIC,UAAWyF,IAAOiE,KAClB6M,KAAK,qBACLpM,YAAY,sFACZqM,iBAAiB,EACjBvJ,KAAK,MACDlN,EANR,CAOI0W,iBAAkB,CACd,EAAK,CACD9H,SADC,WAEG,OAAO,GAEX+H,UAJC,SAISC,GACN,OAAOA,EAAKC,oBAM5B,kBAAC,IAAD,iBACQ7W,EADR,CAEI8F,SAAUgR,MAItB,IAaMA,EAAe,SAAC9F,GAClB,IAAMjQ,EAAQiQ,EAAMhL,OAAOjF,MAC3BiR,EAAK+E,eAAe,CAChB,SAAUhW,IAEd,IAAMiW,EAAajW,EAAMkW,QAAQ,UAAW,IAClB,KAAtBD,EAAW7T,QACXpH,EAASoD,YAAY,CACjBwK,KAAMqN,KACNxa,MAAK,SAACV,GACNC,EAASwZ,YAAWzZ,EAAKA,OACzBkW,EAAK+E,eAAe,CAChB,SAAUhW,QAM1B,OACI,yBAAKd,UAAWyF,IAAOC,WAEnB,yBAAK1F,UAAWyF,IAAOwR,UAAW/Q,QArPxB,WAMd,OALAyH,QAAQC,IAAI,aACZlR,aAAa2Z,WAAW,gBACxB9I,EAAgB,GAChB5O,IAAQoQ,QAAQ,4GAChBjB,OAAOC,SAASC,SACT+D,EAAKkE,gBA+OR,6EAEA,yBAAKjW,UAAWyF,IAAOyP,MAClBjL,MAAOsL,EAAW,CAAE1B,gBAAgB,OAAD,OAASqD,IAAT,MAAsB,CAAErD,gBAAgB,OAAD,OAASsD,IAAT,QAG/E,yBAAKnX,UAAWyF,IAAO2R,gBACnB,yBAAKpX,UAAWyF,IAAOrB,OACvB,wBAAIpE,UAAWyF,IAAO4R,IAAtB,qKACA,uBAAGrX,UAAWyF,IAAO6I,UAArB,uGACA,mIAAwB,uBAAG8F,KAAK,UAAS,2BAAInE,EAAKnT,cAAlD,KAAyEmT,EAAKlT,KAA9E,MAGJ,kBAAC,IAAD,CACImH,OAAQ,WACR6N,KAAMA,EACNxE,cAAeA,EACfyB,eA7Pe,SAACtB,GAEpBA,EAAM,MAAYA,EAAM,MAI5BhR,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUkV,EAAKuF,oBAwPjD7J,SAAUA,GAGV,yBAAKzN,UAAWyF,IAAOkH,MACnB,kBAAC,IAAD,CAAMM,KAAK,QAAQL,iBAAkB2I,EAAU1P,SA9F/D,SAAkByG,GACdkJ,EAAoB,MAARlJ,GAEZyF,EAAK+E,eAAe,CAChB,eAAgBxK,IAIpBqB,QAAQC,IAAI,WAAY2H,KAuFR,kBAACrK,EAAD,CAAS2B,IAAI,qEAAcP,IAAI,MAC/B,kBAACpB,EAAD,CAAS2B,IAAI,qEAAcP,IAAI,QAIvC,6BACI,kBAAC,IAAK8B,KAAN,CAAW/O,KAAK,SACL6C,MAAM,yhBACNmM,MAAO,CACH,CACIC,UAAU,EACV3P,QAAS,iLAIxB,kBAAC2X,EAAD,OAGHjB,GAAa,6BACTA,EAAUzU,KAAI,SAAAoB,GAAC,OAAIA,EAAE,0BAClB,kBAAC,IAAD,CAAOrD,QAASqD,EAAE,yBAA0BzD,KAAK,OAAOgZ,UAAQ,EAACC,YAC7D,6BAAMpB,IAAOpU,EAAE,YAAY+H,OAAO,oBAAlC,IAAwD/H,EAAE,kBAC1D,kCAAQA,EAAE,iBAAV,WACPqT,EAAUnS,OAAS,GAAK,6BACxBmS,EAAUnS,OAAS,EAAI,YAAImS,GAAWxT,MAAK,SAAU9F,EAAG+F,GACjD,OAAIA,EAAE,WAAa/F,EAAE,YACT,EAER+F,EAAE,WAAa/F,EAAE,WACV,GAEH,KACT6E,KAAI,SAAAoB,GAAC,OACJ,kBAAC,IAAD,KAAMoU,IAAOpU,EAAE,WAAY,uBAAuB+H,OAAO,wBAC3D,uBAAGE,MAAO,CAAElH,MAAO,SAAnB,qMAMbwS,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,uBAAuB6C,MAAM,2KACzC,kBAAC,IAAS0D,MAAV,KAnGQ,CACxB,CAAE1D,MAAO,mFAAmBpB,MAAO,oFACnC,CAAEoB,MAAO,mFAAmBpB,MAAO,oFACnC,CAAEoB,MAAO,qGAAsBpB,MAAO,sGACtC,CAAEoB,MAAO,uCAAUpB,MAAO,wCAC1B,CAAEoB,MAAO,mDAAYpB,MAAO,oDAC5B,CAAEoB,MAAO,mDAAYpB,MAAO,oDAC5B,CAAEoB,MAAO,sJAA+BpB,MAAO,uJAC/C,CAAEoB,MAAO,0IAA6BpB,MAAO,2IAC7C,CAAEoB,MAAO,oGAAqBpB,MAAO,qGACrC,CAAEoB,MAAO,yIAA4BpB,MAAO,2IA0FHF,KAAI,SAAA6J,GAAM,OAAI,kBAAC,IAAD,CAC/B3J,MAAO2J,EAAO3J,OAAQ2J,EAAOvI,YAGzC,kBAAC,IAAKkM,KAAN,CAAW/O,KAAK,wBACZ,kBAAC,IAAD,CAAO8K,YAAY,2CAI1BoL,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,WAAW6C,MAAM,0CACnD,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,QAAb,8CACA,kBAAC,IAAD,CAAOA,MAAM,UAAb,gDAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,QAAQ6C,MAAM,kEAChD,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,4BAAb,4BACA,kBAAC,IAAD,CAAOA,MAAM,kDAAb,oDAIPyU,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,gBAAgB6C,MAAM,2RAClC,kBAAC,IAAD,CAAOiI,YAAY,gDAEvB,kBAAC,IAAKiE,KAAN,CAAW/O,KAAK,gBAAgB6C,MAAM,yCAClC,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,6CAK3ByU,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,oCACL6C,MAAM,4ZACb,kBAAC,IAAD,CAAOiI,YAAY,sIAEvB,kBAAC,IAAKiE,KAAN,CAAW/O,KAAK,oCAAoC6C,MAAM,sBACtD,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,0BAK3ByU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,4BACd6C,MAAM,+OAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,uBACd6C,MAAM,2YAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,8GAAb,8GACA,kBAAC,IAAD,CAAOA,MAAM,wHAAb,wHACA,kBAAC,IAAD,CAAOA,MAAM,uJAAb,uJACA,kBAAC,IAAD,CAAOA,MAAM,wHAAb,wHACA,kBAAC,IAAD,CAAOA,MAAM,8CAAb,gDAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,oCACd6C,MAAM,iVAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,gCACd6C,MAAM,6VAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,yBACd6C,MAAM,iTAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,kBACL6C,MAAM,8VAC1B,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,qGAAhB,qGACA,kBAAC,IAAD,CAAUA,MAAM,mFAAhB,mFACA,kBAAC,IAAD,CAAUA,MAAM,mFAAhB,mFACA,kBAAC,IAAD,CAAUA,MAAM,uEAAhB,yEAIPyU,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,uBACL6C,MAAM,4kBACb,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,gGAAhB,gGACA,kBAAC,IAAD,CAAUA,MAAM,4FAAhB,4FACA,kBAAC,IAAD,CAAUA,MAAM,6OAAhB,6OAGA,kBAAC,IAAD,CAAUA,MAAM,4GAAhB,4GACA,kBAAC,IAAD,CAAUA,MAAM,kPAAhB,kPAEA,kBAAC,IAAD,CAAUA,MAAM,8JAAhB,8JACA,kBAAC,IAAD,CAAUA,MAAM,oNAAhB,oNAEA,kBAAC,IAAD,CAAUA,MAAM,uNAAhB,uNAEA,kBAAC,IAAD,CAAUA,MAAM,2IAAhB,2IACA,kBAAC,IAAD,CAAUA,MAAM,iIAAhB,iIACA,kBAAC,IAAD,CAAUA,MAAM,sEAAhB,wEAGR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,wBACZ,kBAAC,IAAD,CAAO8K,YAAY,2CAI1BoL,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,2BACd6C,MAAM,2MAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GACD,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,mBAAmB6C,MAAM,iRACrC,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,8CAAhB,8CACA,kBAAC,IAAD,CAAUA,MAAM,8CAAhB,8CACA,kBAAC,IAAD,CAAUA,MAAM,4EAAhB,4EACA,kBAAC,IAAD,CAAUA,MAAM,yCAAhB,2CAIPyU,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,kBACL6C,MAAM,4UACb,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,6EAAhB,6EACA,kBAAC,IAAD,CAAUA,MAAM,wCAAhB,wCACA,kBAAC,IAAD,CAAUA,MAAM,wCAAhB,wCACA,kBAAC,IAAD,CAAUA,MAAM,0DAAhB,0DACA,kBAAC,IAAD,CAAUA,MAAM,yEAAhB,yEACA,kBAAC,IAAD,CAAUA,MAAM,oDAAhB,oDACA,kBAAC,IAAD,CAAUA,MAAM,0DAAhB,0DACA,kBAAC,IAAD,CAAUA,MAAM,4EAAhB,4EACA,kBAAC,IAAD,CAAUA,MAAM,8CAAhB,gDAGR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,mBACZ,kBAAC,IAAD,CAAO8K,YAAY,2CAI1BoL,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,mBACd6C,MAAM,0MAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,wCACd6C,MAAM,skBAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,uDAAb,uDACA,kBAAC,IAAD,CAAOA,MAAM,mEAAb,mEACA,kBAAC,IAAD,CAAOA,MAAM,mEAAb,mEACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,mCACd6C,MAAM,8YAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,uCACd6C,MAAM,ibAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,kBACL6C,MAAM,uaACb,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,sBAAhB,sBACA,kBAAC,IAAD,CAAUA,MAAM,iIAAhB,mIAGR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,mBACZ,kBAAC,IAAD,CAAO8K,YAAY,2CAI1BoL,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,6BACd6C,MAAM,6NAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,gBACd6C,MAAM,qPAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,0BACd6C,MAAM,mOAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,oEAAb,oEACA,kBAAC,IAAD,CAAOA,MAAM,0EAAb,0EACA,kBAAC,IAAD,CAAOA,MAAM,2EAAb,2EACA,kBAAC,IAAD,CAAOA,MAAM,qJAAb,qJACA,kBAAC,IAAD,CAAOA,MAAM,2DAAb,6DAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,iCACd6C,MAAM,oJAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,4GAAb,4GACA,kBAAC,IAAD,CAAOA,MAAM,4GAAb,4GACA,kBAAC,IAAD,CAAOA,MAAM,iIAAb,mIAKPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,iCACd6C,MAAM,6GAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,qCACL6C,MAAM,2kBACb,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,mIAAb,mIACA,kBAAC,IAAD,CAAOA,MAAM,6HAAb,6HACA,kBAAC,IAAD,CAAOA,MAAM,yFAAb,2FAGR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,sCACZ,kBAAC,IAAD,CAAO8K,YAAY,2CAI1BoL,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,mBACd6C,MAAM,gGAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,wWAAb,wWAGA,kBAAC,IAAD,CACIA,MAAM,wYADV,wYAGA,kBAAC,IAAD,CACIA,MAAM,0XADV,0XAGA,kBAAC,IAAD,CACIA,MAAM,6eADV,6eAIA,kBAAC,IAAD,CAAOA,MAAM,qTAAb,qTAGA,kBAAC,IAAD,CAAOA,MAAM,mMAAb,mMACA,kBAAC,IAAD,CAAOA,MAAM,wQAAb,0QAMPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,6BACd6C,MAAM,2eAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,+FAAb,+FACA,kBAAC,IAAD,CAAOA,MAAM,kKAAb,kKACA,kBAAC,IAAD,CACIA,MAAM,weADV,weAGA,kBAAC,IAAD,CACIA,MAAM,mmBADV,mmBAIA,kBAAC,IAAD,CAAOA,MAAM,gIAAb,gIACA,kBAAC,IAAD,CAAOA,MAAM,8IAAb,gJAKPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,oBACd6C,MAAM,qIAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,6GAAb,6GACA,kBAAC,IAAD,CAAOA,MAAM,yTAAb,yTAGA,kBAAC,IAAD,CAAOA,MAAM,6EAAb,6EACA,kBAAC,IAAD,CAAOA,MAAM,sNAAb,sNAEA,kBAAC,IAAD,CAAOA,MAAM,6LAAb,6LACA,kBAAC,IAAD,CAAOA,MAAM,0JAAb,0JACA,kBAAC,IAAD,CAAOA,MAAM,uEAAb,yEAKPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,2BACd6C,MAAM,2RAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gBAAb,gBACA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAKPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,6BACd6C,MAAM,uOAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gIAAb,gIACA,kBAAC,IAAD,CAAOA,MAAM,kWAAb,kWAGA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,yBACd6C,MAAM,0UAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gIAAb,gIACA,kBAAC,IAAD,CAAOA,MAAM,kWAAb,kWAGA,kBAAC,IAAD,CAAOA,MAAM,sBAAb,wBAKPyU,GAAY,6BACT,kBAAC,IAAKnH,KAAN,CAAW/O,KAAK,wBACL6C,MAAM,4GACb,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,WAAb,WACA,kBAAC,IAAD,CAAOA,MAAM,kEAAb,kEACA,kBAAC,IAAD,CAAOA,MAAM,mUAAb,qUAKR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,yBACZ,kBAAC,IAAD,CAAO8K,YAAY,2CAK1BoL,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,kCACd6C,MAAM,0FAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,gSAAb,gSAGA,kBAAC,IAAD,CAAOA,MAAM,iGAAb,iGACA,kBAAC,IAAD,CAAOA,MAAM,mMAAb,qMAIR,kBAAC,IAAKsN,KAAN,CAAWE,UAAQ,EAACjP,KAAK,qBACd6C,MAAM,0HACb,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,kFAAb,kFACA,kBAAC,IAAD,CAAOA,MAAM,kFAAb,oFAKPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,2BACd6C,MAAM,yJAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,kFAAb,kFACA,kBAAC,IAAD,CAAOA,MAAM,kFAAb,oFAIPyU,GAAY,kBAAC,IAAKnH,KAAN,CAAWE,UAAQ,EAACjP,KAAK,0BACd6C,MAAM,kJAC1B,kBAAC,IAAM0D,MAAP,KACI,kBAAC,IAAD,CAAO9E,MAAM,kFAAb,kFACA,kBAAC,IAAD,CAAOA,MAAM,kFAAb,oFAKR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,4CACL6C,MAAM,wSACb,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,gBAAhB,kBAIR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,oCAAoC6C,MAAM,qOACtD,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,gBAAhB,kBAIR,kBAAC,IAAKsN,KAAN,CAAW/O,KAAK,wDACL6C,MAAM,qSACb,kBAAC,IAAS0D,MAAV,KACI,kBAAC,IAAD,CAAU9E,MAAM,gBAAhB,kBAIR,6BACI,kBAAC,IAAD,CAAQmF,QAASwP,EAAK5P,SAAU,kBAAM6P,GAAQD,MADlD,eAC2E,2BAAOjD,QAAQ,IAAf,uPAOtEiD,GAAO,oCACJ,kBAAC,IAAKrH,KAAN,CAAWC,MAAO,CACd,CACIC,UAAU,EACV3P,QAAS,gLAEdU,KAAK,OAAO6C,MAAK,kEAChB,kBAAC,IAAD,CAAY4H,UAAQ,EAACC,OAAQ,uBAMzC,kBAAC,IAAKqE,KAAN,CAAW/O,KAAK,wBAAwB6C,MAAK,uJAA+B+N,EAAKnT,YAApC,kDAA2DmT,EAAKlT,KAAhE,MACzC,kBAAC,IAAM0a,SAAP,CAAgBtN,YAAY,wEAG/BwL,EAAa,aAAe,kBAAC,IAAKvH,KAAN,KACzB,kBAAC,IAAD,CAAQI,SAAS,SAASjQ,KAAK,WAA/B,+FAgB8DmZ,M,oBC90BlFhc,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,iCCA3C,sDAwBeyZ,iBAlBC,WAEZ,IAAMjC,EAAcvW,KAAKyW,MAAM3W,aAAa4W,QAAQ,SAEpD,OACI,6BACI,kBAAC,IAAD,KACI,uFAEJ,kBAAC,IAAD,KACI,2BAAG,yCAAH,KAA4BH,EAAYzB,OACxC,gFACA,mHAMgBgG,M,oBCvBhChc,EAAOC,QAAU,CAAC,OAAS,yB,iCCD3B,sDAkBeyZ,iBAZI,WACf,OAAQ,6BACA,kBAAC,IAAD,KACI,sEAEJ,kBAAC,IAAD,mBAOuBsC,M,yHCT3BC,G,OAAmBC,IAAnBD,SAASE,EAAUD,IAAVC,MAwDFzC,iBAvDQ,WACnB,MAAsBvQ,mBAAS,KAA/B,mBAAOgI,EAAP,KAAYiL,EAAZ,KAiBA,OACI,kBAAC,IAAD,KACI,kBAACD,EAAD,CACIE,WAAW,KACXC,eAAe,IACfC,aAAc,SAAAC,GACVvK,QAAQC,IAAIsK,IAEhBC,WAAY,SAACC,EAAW7Z,GACpBoP,QAAQC,IAAIwK,EAAW7Z,KAG3B,kBAAC,IAAD,CAAM8Z,SA3BG,SAACvS,GAClBgS,EAAOhS,EAAEwG,MA0B6BgM,MAAM,OAAO7H,KAAK,SAAS8H,oBAAqB,CAAC1L,IAI3E,kBAAC,IAAKuB,KAAN,CAAW9B,IAAI,IAAIkM,KAAM,kBAAC,IAAD,OAAzB,sEAGA,kBAAC,IAAKpK,KAAN,CAAW9B,IAAI,KAAf,8GAQR,kBAAC,IAAD,KAEI,kBAACqL,EAAD,CAAS1N,MAAO,CAAEwO,OAAQ,gBAxCjB,SAAC5L,GAClB,OAAQA,GACJ,IAAK,IACD,OAAO,kBAAC,IAAD,MACX,IAAK,IACD,MAAO,slBACX,QACI,MAAO,IAkCF6L,CAAa7L,QAOK8L,M,gICxD/BhB,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MAkDFzC,iBAjDI,WACf,MAAsBvQ,mBAAS,KAA/B,mBAAOgI,EAAP,KAAYiL,EAAZ,KAiBA,OACI,kBAAC,IAAD,KACI,kBAACD,EAAD,CACIE,WAAW,KACXC,eAAe,IACfC,aAAc,SAAAC,GACVvK,QAAQC,IAAIsK,IAEhBC,WAAY,SAACC,EAAW7Z,GACpBoP,QAAQC,IAAIwK,EAAW7Z,KAG3B,kBAAC,IAAD,CAAM8Z,SA3BG,SAACvS,GAClBgS,EAAOhS,EAAEwG,MA0B6BgM,MAAM,OAAO7H,KAAK,SAAS8H,oBAAqB,CAAC1L,IAC3E,kBAAC,IAAKuB,KAAN,CAAW9B,IAAI,KAAf,gEAGA,kBAAC,IAAK8B,KAAN,CAAW9B,IAAI,IAAIkM,KAAM,kBAAC,IAAD,OAAzB,2FAKR,kBAAC,IAAD,KAEI,kBAACb,EAAD,CAAS1N,MAAO,CAAEwO,OAAQ,gBAlCjB,SAAC5L,GACnB,OAAQA,GACJ,IAAK,IACD,OAAO,kBAAC,IAAD,MACX,IAAK,IACD,MAAO,qaACX,QACI,MAAO,IA4BD6L,CAAa7L,QAOC+L,M,4LC/CfC,QACW,cAA7B/K,OAAOC,SAAS+K,UAEe,UAA7BhL,OAAOC,SAAS+K,UAEhBhL,OAAOC,SAAS+K,SAAS7X,MACvB,2D,sDCbA8X,EAAW3Z,YAAY,CACzBC,KAHqB,MAIrBC,aAAc,CACV0Z,QAAQ,EACRC,OAAQ,CACJC,MAAO,GACPC,MAAO,GACPC,gBAAiB,MAErBnJ,KAAM,MAEVvQ,SAAU,CACN2Z,eADM,SACS1Z,EAAOC,GAClBD,EAAMsZ,OAAOC,MAAb,sBACOvZ,EAAMsZ,OAAOC,OADpB,YAEOtZ,EAAOlB,WAGlB4a,WAPM,SAOK3Z,EAAOjB,GACdiB,EAAMsZ,OAAOC,MAAQ,IAEzBK,gBAVM,SAUU5Z,EAAOC,GACnBD,EAAMsZ,OAAOE,MAAQvZ,EAAOlB,SAEhC8a,WAbM,SAaK7Z,EAAOC,GACdD,EAAMqZ,OAASpZ,EAAOlB,UAAY0B,KAEtCqZ,eAhBM,SAgBS9Z,EAAOC,GAClBD,EAAMsQ,KAAOrQ,EAAOlB,QACpBiB,EAAMqZ,QAAS,MAKpB,EAMHD,EAASlZ,QAEEkZ,GARR,EACHM,eADG,EAEHC,WAFG,EAGHC,gBAHG,EAIHC,WAJG,EAKHC,eAGWV,EAAf,S,QCzCeW,cAAgB,CAC3BC,MACA1J,SAEAnJ,a,2BCHE8S,EAAU,sBAAOC,eAAP,CAA+BC,MAShCC,EAPDC,YAAe,CACzBC,QAASC,EACTN,aACAO,UAAUrH,EACVsH,UAAW,CAACC,gBCCZC,IAAY,CAACC,IAAK,8EAGtBC,IAASlK,OACL,kBAAC,IAAMmK,SAAP,KAEU,kBAAC,gBAAD,CAAeC,SAAU,CAAC,UAAWlY,QAAS,CAACmY,UAAU,EAAMC,UAAU,GAAOC,QAAQ,MAE9F,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUd,MAAOA,GACb,kBAACnH,EAAA,EAAD,SAIZkI,SAASC,eAAe,SJuGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3e,MAAK,SAAA4e,GACJA,EAAaC,gBAEdnd,OAAM,SAAAa,GACL6O,QAAQ7O,MAAMA,EAAMH,a,gCKzI5B,sGAAO,IAAMia,EAAQ,QACRD,EAAY,MACZjB,EAAO,Q,gCCFL,SAASra,IACpB,IAAM4S,EAAOrT,KAAKyW,MAAM3W,aAAa4W,QAAQ,SAE7C,OAAIrD,GAAQA,EAAKxT,YACN,CAAC,iBAAkBwT,EAAKxT,aAExB,GANf,mC,gCCAA,0KAAO,IAAM+B,EAAmB,mBACnBQ,EAAgB,gBAMhBP,EAAc,cAUdyN,EAAe,eACfD,EAAkB,mB,6ECfzBrO,EAAOC,cACPC,EAAO,UAAMF,EAAN,cAEPiQ,E,sFAgBJ,WACEnR,aAAa2Z,WAAW,U,sBAG1B,SAAS3I,GACP,OAAOtR,IAAMC,KAAKyB,EAAU,SAAU,CACpC5B,SAAUwR,EAAOxR,SACjBY,YAAa4Q,EAAO5Q,YACpBX,SAAUuR,EAAOvR,SACjBY,KAAM2Q,EAAO3Q,S,4BAIjB,SAAe2Q,GACb,OAAOtR,IAAMC,KAAKyB,EAAU,kBAAmB,CAC7C5B,SAAUwR,EAAOxR,SACjBC,SAAUuR,EAAOvR,a,wBAIrB,SAAWuR,GACT,OAAOtR,IAAMC,KAAKyB,EAAU,cAAe,CACzC5B,SAAUwR,EAAOxR,SACjBa,KAAM2Q,EAAO3Q,S,wBAIjB,SAAW2Q,GACT,OAAOtR,IAAMC,KAAKyB,EAAU,cAAe,CACzCqS,OAAQzC,EAAOyC,OACfD,OAAQxC,EAAOwC,W,gCAInB,SAAmBxC,GACjB,OAAOtR,IAAMC,KAAKyB,EAAU,qBAAsB,CAChDqS,OAAQzC,EAAOyC,OACfO,eAAgBhD,EAAOgD,mB,4BAI3B,WACE,OAAO9T,KAAKyW,MAAM3W,aAAa4W,QAAQ,a,KAI5B,QAAIzF,G,gCCpEnB,4RAKMwN,GALN,OAKoBjc,YAAY,CAC5BC,KAHqB,SAIrBC,aAAc,CACVoJ,WAAW,EACXE,UAAU,EACVD,WAAW,EACXiD,YAAa,KACb7O,KAAM,KACNuY,WAAY,KACZvJ,aAAc,KACdlD,SAAU,MAEdnJ,SAAU,CACN4V,WADM,SACK3V,EAAOC,GACdD,EAAM2V,WAAa1V,EAAOlB,SAE9BsK,mBAJM,SAIarJ,EAAOC,GACtBD,EAAM+I,UAAY9I,EAAOlB,SAE7BwK,mBAPM,SAOavJ,EAAOC,GACtBD,EAAMiJ,SAAWhJ,EAAOlB,SAE5B2K,eAVM,SAUS1J,EAAOC,GAClBD,EAAMiM,YAAchM,EAAOlB,SAE/B8K,eAbM,SAaS7J,EAAOC,GAClBD,EAAM5C,KAAO6C,EAAOlB,SAExB0K,oBAhBM,SAgBczJ,EAAOC,GACvBD,EAAMgJ,UAAY/I,EAAOlB,SAE7B+K,gBAnBM,SAmBU9J,EAAOC,GACnBD,EAAMoM,aAAenM,EAAOlB,SAEhCiL,YAtBM,SAsBMhK,EAAOC,GACfD,EAAMkJ,SAAWjJ,EAAOlB,aAK7B,EASH2c,EAAYxb,QARZyV,EADG,EACHA,WACAtM,EAFG,EAEHA,mBACAE,EAHG,EAGHA,mBACAE,EAJG,EAIHA,oBACAC,EALG,EAKHA,eACAG,EANG,EAMHA,eACAC,EAPG,EAOHA,gBACAE,EARG,EAQHA,YAGW0R,MAAf,S,gCCxDA,gWAEMzd,EAAOC,cAEPC,EAAO,UAAMF,EAAN,QAIA0d,GAFoB,UAAMxd,EAAN,WAEA,UAAMA,EAAN,sBACpByd,EAAuB,UAAMzd,EAAN,iBACvB0d,EAAwB,UAAM1d,EAAN,gBACxB2d,EAAoB,UAAM3d,EAAN,eAEpB4d,GADgB,UAAM5d,EAAN,iBACA,UAAMA,EAAN,kBAEhBxB,EAAe,UAAMwB,EAAN,gBACfX,EAAa,UAAMW,EAAN,wBACbP,EAAa,UAAMO,EAAN,wBAEbL,EAAS,UAAMK,EAAN,UACTH,EAAgB,UAAMG,EAAN,kB,gCCbdD,IAPC,WAGC,MAAO,gC,8MCMlB8d,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,KAEdC,MAAO,CACHtZ,OAAQ,OAIHuZ,EAAc,SAAAjc,GACvB,IAAME,EAAU0b,IAChB,OACI,kBAAC,IAAD,CAAM/H,GAAE,iBAAY7T,EAAMkc,MAAMC,SAC5B,kBAACC,EAAA,EAAD,CAAMnc,UAAWC,EAAQ4b,MACrB,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIrc,UAAWC,EAAQ8b,MACnB7G,MAAK,8CAAyCnV,EAAMkc,MAAMC,OAArD,gBACLxX,MAAM,0BAEV,kBAAC4X,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQzZ,MAAM,gBAAgBwR,UAAU,KACvDxU,EAAMkc,MAAMvX,MADjB,WAC2B3E,EAAMkc,MAAMjf,SC1BzD2e,EAAYC,aAAW,SAACtD,GAAD,OACzBmE,YAAa,CACTZ,KAAM,CACFa,SAAU,GAEdC,MAAO,CACH9Y,QAASyU,EAAMsE,QAAQ,GACvBC,UAAW,SACX9Z,MAAOuV,EAAMwE,QAAQC,KAAKC,gBAKzBC,EAAc,SAAAld,GACvB,IAAME,EAAU0b,IAChB,OACI,yBAAK3b,UAAWC,EAAQ4b,MACpB,kBAACqB,EAAA,EAAD,CAAMxX,WAAS,EAACkX,QAAS,GACpB7c,EAAMod,OAAOvc,KAAI,SAACqb,EAAOmB,GAAR,OAAkB,kBAACF,EAAA,EAAD,CAAM5Q,IAAK2P,EAAMC,OAASkB,EAAOC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACjF,kBAAC,EAAD,CAAatB,MAAOA,W,2ECpBlCuB,EAAape,YAAY,CAC3BC,KAHuB,QAIvBC,aAAc,CACV6d,OAAQ,KACRla,MAAO,KACP0O,SAAS,EACT8L,OAAQ,MAEZ/d,SAAU,CACNge,UADM,SACI/d,EAAOC,GACbD,EAAMwd,OAASvd,EAAOlB,QAAQye,QAElCQ,eAJM,SAIShe,EAAOC,GAClBD,EAAMwd,OAASvd,EAAOlB,QAAQye,OAC9Bxd,EAAMsD,MAAQrD,EAAOlB,QAAQuE,MAC7BtD,EAAMgS,SAAU,GAEpBiM,UATM,SASIje,EAAOC,GACbD,EAAMgS,QAAU/R,EAAOlB,SAE3Bmf,eAZM,SAYSle,EAAOC,GAClBD,EAAM8d,OAAS7d,EAAOlB,QACtBiB,EAAMgS,SAAU,MAKrB,EAKH6L,EAAW3d,QAJX6d,EADG,EACHA,UACAC,EAFG,EAEHA,eACAC,EAHG,EAGHA,UAHG,EAIHC,eAGWL,EAAf,QCQehV,aAXS,SAAA7I,GAAK,MAAK,CAC9Bwd,OAAQxd,EAAMsc,MAAMkB,OACpBla,MAAOtD,EAAMsc,MAAMhZ,MACnB0O,QAAShS,EAAMsc,MAAMtK,YAGE,SAAA7V,GAAQ,MAAK,CACpCgiB,WAAY,kBAAMhiB,EC1BW,uCAAM,WAAMA,GAAN,eAAAC,EAAA,6DACnCD,EAAS8hB,GAAU,IADgB,SAEZxhB,IAAMC,KAAKif,KAFC,cAE7B9e,EAF6B,yBAG5BV,EAAS6hB,EAAenhB,EAASX,QAHL,2CAAN,wDD2B7BkiB,YAAa,SAACliB,GAAD,OAAUC,ECrBO,SAAAD,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,sEACfK,IAAMC,KAAKkf,IAAyB1f,GADrB,cAChCW,EADgC,yBAE/BV,EAAS4hB,EAAUlhB,EAASX,QAFG,2CAAJ,sDDqBFmiB,CAAmBniB,QAGxC2M,EAxCC,SAAAzI,GAEZuF,qBAAU,WACDvF,EAAM4R,SAAY5R,EAAMod,QACzBpd,EAAM+d,eAEX,CAAC/d,IASJ,OACIA,EAAMod,OAAS,oCACX,kBAAC,EAAD,CAAaA,OAAQpd,EAAMod,SAC3B,kBAAC,IAAD,CACItX,SAXe,SAACoY,EAAMC,GAC9Bne,EAAMge,YAAY,CACdhW,OAAQkW,EAAO,EACfE,MAAOD,KASHE,MAAOre,EAAMkD,MACbob,UAAW,SAACD,EAAOE,GAAR,gBAAqBA,EAAM,GAA3B,YAAiCA,EAAM,GAAvC,yBAAgDF,EAAhD,oCACXG,gBAAiB,GACjBC,eAAgB,KAElB,QEvBC,SAASpJ,EAAQqJ,EAAkBhf,GAAO,IAC/Cif,EAD8C,4MAGhDC,QAAU,kBAAM/hB,KAAKyW,MAAM3W,aAAa4W,QAAQ,UAHA,uDAKhD,WAAqB,IAAD,OAChB,OAAQ7T,GACJ,KAAKmZ,IACD,OAAO7a,IAAY6gB,gBAAgBriB,MAAK,WAChC,EAAKwD,MAAMnE,QAAQ,CACf2D,SAAU,EAAKof,UACfnf,iBAAiB,EACjBC,KAAMmZ,SAGhB3a,OAAM,WACJ,EAAK8B,MAAMnE,QAAQ,CACf4D,iBAAiB,EACjBC,KAAM,UAGlB,KAAKkZ,IACD,OAAO5a,IAAY8gB,oBAAoBtiB,MAAK,WACpC,EAAKwD,MAAMnE,QAAQ,CACf2D,SAAU,EAAKof,UACfnf,iBAAiB,EACjBC,KAAMkZ,SAGhB1a,OAAM,WACJ,EAAK8B,MAAMnE,QAAQ,CACf4D,iBAAiB,EACjBC,KAAM,UAGlB,KAAKiY,IACD,OAAO3Z,IAAY+gB,eAAeviB,MAAK,WAC/B,EAAKwD,MAAMnE,QAAQ,CACf2D,SAAU,EAAKof,UACfnf,iBAAiB,EACjBC,KAAMiY,SAGhBzZ,OAAM,WACJ,EAAK8B,MAAMnE,QAAQ,CACf4D,iBAAiB,EACjBC,KAAM,UAGlB,QACImS,KAAK7R,MAAMnE,QAAQ,CACf4D,iBAAiB,EACjBC,KAAM,sBApD0B,oBAyDhD,WACI,OACmC,OAA/BmS,KAAK7R,MAAMP,gBAA2BoS,KAAK7R,MAAMP,gBAC7C,kBAACif,EAAqB7M,KAAK7R,OAAY,kBAAC,IAAD,CAAU6T,GAAI,MAAS,SA5D1B,GACzBmL,IAAMpM,WAyEjC,OAAOnK,aATU,SAAA7I,GAAK,MAAK,CACvBH,gBAAiBG,EAAMsQ,KAAKzQ,gBAC5BC,KAAME,EAAMsQ,KAAKxQ,SAGD,SAAA3D,GAAQ,MAAK,CAC7BF,QAAS,SAAAkK,GAAC,OAAIhK,EAASF,YAAQkK,QAG5B0C,CAA+BkW,G","file":"static/js/main.57b0d434.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__38MaE\",\"tabs\":\"styles_tabs__1iaNG\",\"ant-tabs-tab\":\"styles_ant-tabs-tab__1fvBs\",\"ant-tabs-tab-active\":\"styles_ant-tabs-tab-active__2Yg96\",\"ant-tabs-tab-btn\":\"styles_ant-tabs-tab-btn__1Owmp\",\"image\":\"styles_image__2gr_S\",\"titleContainer\":\"styles_titleContainer__x5hAm\",\"required\":\"styles_required__3hjvh\",\"line\":\"styles_line__5_JyL\",\"h1\":\"styles_h1__UJ0BG\",\"resetForm\":\"styles_resetForm__kMHmu\",\"code\":\"styles_code__3q6xo\"};","import { fetchRole } from \"../reducers/user.reducer\";\nimport axios from \"axios\";\nimport { API_AUTH_SIGNIN, API_ALL_USERS, API_ALL_ROLES, API_ROLES, API_SUBDIVISIONS } from \"../../constants/api.constants\";\nimport authHeader from \"../../services/auth-header\";\n\nexport const setRole = data => async dispatch => {\n    dispatch(fetchRole(data))\n}\n\nexport const fetchLoginForm = async ({ username, password }) => {\n\n    return axios.post(API_AUTH_SIGNIN, { username, password })\n        .then(response => {\n            if (response.data.accessToken) {\n\n                localStorage.setItem(\"user\", JSON.stringify({\n                    accessToken: response.data.accessToken,\n                    appointment: response.data.appointment,\n                    city: response.data.city,\n                    id: response.data.id,\n                    roles: response.data.roles,\n                    username: response.data.username\n                }));\n\n                return response.data;\n            }\n        });\n}\n\nexport const findAllUsers = async () => {\n    return axios.post(API_ALL_USERS, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findAllRoles = async () => {\n    return axios.post(API_ALL_ROLES, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findRoles = async () => {\n    return axios.post(API_ROLES, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findSubdivisions = async () => {\n    return axios.post(API_SUBDIVISIONS, {}, { headers: authHeader() }).then(response => response)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-forms\":\"slyles_all-forms__1Uiq4\",\"link\":\"slyles_link__35xrf\",\"card\":\"slyles_card__1pu6e\",\"title\":\"slyles_title__3zA94\",\"image\":\"slyles_image__1ACh0\"};","import axios from 'axios';\nimport authHeader from './auth-header';\nimport baseUrl from '../baseurl';\n\nconst host = baseUrl()\n\nconst API_URL = `${host}/api/test/`;\n\nclass UserService {\n    getPublicContent() {\n        return axios.get(API_URL + 'all');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL + 'user', {headers: authHeader()});\n    }\n\n    getModeratorBoard() {\n        return axios.get(API_URL + 'mod', {headers: authHeader()})\n            .catch(() => {\n                return axios.get(API_URL + 'admin', {headers: authHeader()});\n            });\n    }\n\n    getAdminBoard() {\n        return axios.get(API_URL + 'admin', {headers: authHeader()});\n    }\n}\n\nexport default new UserService();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3BziL\",\"pie\":\"styles_pie__2SD_O\",\"title\":\"styles_title___y4nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__jZ6X4\",\"tabs\":\"styles_tabs__2Mm4v\"};","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/form/`;\n\nconst testing = (fields) => {\n    return axios.post(API_URL + \"testing\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst findTesting = (filters = {}) => {\n    return axios.post(API_URL + \"find/testing\", filters, { headers: authHeader() });\n};\n\nexport default {\n    testing,\n    findTesting\n};\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    SET_MESSAGE,\n} from \"./types\";\nimport FormService from \"./../../services/form.service\";\n\nexport const testing = (fields) => (dispatch) => {\n    return FormService.testing(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve();\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findTesting = (filters) => (dispatch) => {\n    return FormService.findTesting(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"styles_filters__1HMjR\",\"firstLine\":\"styles_firstLine__wavmH\",\"secondLine\":\"styles_secondLine__1vFlW\",\"groups\":\"styles_groups__Orx8P\"};","import {createSlice} from '@reduxjs/toolkit'\n\nconst TODOS_REDUCER_NAME = 'user'\n\nconst userSlice = createSlice({\n    name: TODOS_REDUCER_NAME,\n    initialState: {\n        userData: null,\n        isAuthenticated: null,\n        role: null\n    },\n    reducers: {\n        fetchRole(state, action) {\n            state.userData = action.payload.userData\n            state.isAuthenticated = action.payload.isAuthenticated\n            state.role = action.payload.role\n        },\n    }\n})\n\nexport const {\n    fetchRole,\n} = userSlice.actions\n\nexport default userSlice.reducer\n","import React from 'react';\nimport classes from './styles.module.scss'\n\nconst Header = props => {\n    return (\n        <div className={classes.Header}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Default = props => {\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default Default;\n","export const START = 'start'\nexport const FINISH = 'finish'","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/diagrams`;\n\nconst findDiagram = (type = {}) => {\n    return axios.post(API_URL, type, { headers: authHeader() });\n};\n\nexport default {\n    findDiagram\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport styles from \"./styles.module.scss\";\nimport { Checkbox, Radio } from \"antd\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, multiplicity) => {\n\n    const createMultiplicityValue = (value) => {\n        const valueParse = value && parseInt(value.match(/\\d+/))\n        switch (multiplicity) {\n            case \"5\":\n                return (Math.ceil(valueParse / 5) * 5);\n            case \"10\":\n                return (Math.ceil(valueParse / 10) * 10);\n            default:\n                return value;\n        }\n    }\n\n    const hash = data.map(v => createMultiplicityValue(v[keyValue]))\n    const obj = {};\n\n    hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n    const res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n        .sort((a, b) => b[1] - a[1]);\n\n    const labels = res.map(i => i[0][keyValue])\n    const dataValues = res.map(i => i[1])\n\n    return {\n        type: 'doughnut',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ]\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            plugins: {\n                height: 400,\n                datalabels: {\n                    backgroundColor: function (context) {\n                        return context.dataset.backgroundColor;\n                    },\n                    borderColor: 'white',\n                    borderRadius: 25,\n                    borderWidth: 2,\n                    color: 'white',\n                    display: function (context) {\n                        var dataset = context.dataset;\n                        var count = dataset.data.length;\n                        var value = dataset.data[context.dataIndex];\n                        return value > count * 1.5;\n                    },\n                    formatter: function (value, ctx) {\n                        let sum = ctx.dataset.data.reduce((previousValue, currentValue) => previousValue + currentValue);\n                        // return `${(value * 100 / sum).toFixed(2) + \"%\"} \\n(${value})`;\n                        return `${(value * 100 / sum).toFixed(2) + \"%\"}`;\n                    },\n                    font: {\n                        weight: 'bold'\n                    },\n                    padding: 6,\n                },\n                legend: {\n                    position: 'left',\n                },\n            },\n\n            // Core options\n            aspectRatio: 6 / 2,\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst PieDiagram = ({ data, title, keyValue }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [multiplicity, setMultiplicity] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '5_first_sex':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetMultiplicity = (e) => {\n        setMultiplicity(e.target.value);\n    };\n\n    const updateDataset = useCallback(() => {\n        chartInstance.data = createData(data, keyValue, multiplicity).data\n        chartInstance.update();\n    });\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, multiplicity));\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer, chartInstance, data, keyValue, multiplicity]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n    }, [data, autoUpdate, multiplicity, chartInstance, updateDataset])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n\n            {showSelectorWithRounding() && <Radio.Group value={multiplicity} onChange={handleSetMultiplicity}>\n                <Radio.Button value=\"0\">Без группировки</Radio.Button>\n                <Radio.Button value=\"5\">+ до кратн. 5</Radio.Button>\n                <Radio.Button value=\"10\">+ до кратн. 10</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n        </div>\n    );\n};\n\nexport default PieDiagram;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport styles from \"./styles.module.scss\";\nimport { Checkbox, Radio, Tag } from \"antd\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, arrayType, type, rounding) => {\n\n    const createMultiplicityValue = (value) => {\n        const valueParse = value && parseInt(value.match(/\\d+/))\n\n        if (keyValue === '6_sexual_partners_from_6_months') {\n            switch (rounding) {\n                case \"0\":\n                    return (Math.round(valueParse / 5) * 5);\n                case \"1\":\n                    return (Math.ceil(valueParse / 5) * 5);\n                case \"-1\":\n                    return (Math.floor(valueParse / 5) * 5);\n            }\n        }\n        return value\n    }\n\n    let hash = []\n    let itemsArrayType = []\n    let res\n\n    let obj = {};\n\n    if (arrayType) {\n        hash = data.map(v => v[keyValue])\n        for (let i = 0; i <= hash.length; i++) {\n            if (hash[i]) {\n                const a = hash[i].split(\",\")\n                a.map(aa => itemsArrayType.push(aa.trim()))\n            }\n        }\n\n        itemsArrayType.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => {\n            if (c[keyValue] && c[keyValue].includes(v)) {\n                c[keyValue] = v\n                return c[keyValue].includes(v)\n            }\n        })), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n\n\n    } else {\n        hash = data.map(v => createMultiplicityValue(v[keyValue]))\n\n        hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n    }\n\n    const labels = res.filter(i => i[1] > 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const singleValuesLabels = res.filter(i => i[1] === 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const dataValues = res.filter(i => i[1] > 1).map(i => i[1])\n\n    return {\n        type: 'bar',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ],\n            singleValuesLabels: singleValuesLabels\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            indexAxis: type ? \"x\" : \"y\",\n            responsive: true,\n            plugins: {\n                scaleShowValues: true,\n                scales: {\n                    y: type ? {} : {\n                        ticks: {\n                            autoSkip: false,\n                            fontSize: 10,\n                            max: 1003,\n                            stepSize: 1,\n                        },\n                        padding: { top: 30, left: 0, right: 0, bottom: 0 }\n                    },\n                },\n                height: 400,\n                legend: false,\n                // tooltip: { callbacks: { footer: footer } },\n                datalabels: {\n                    align: \"end\",\n                    offset: 10\n                }\n            },\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst BarDiagram = ({ data, title, keyValue, arrayType, type }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [rounding, setRounding] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '6_sexual_partners_from_6_months':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetRounding = (e) => {\n        setRounding(e.target.value);\n    };\n\n    const updateDataset = () => {\n        chartInstance.data = createData(data, keyValue, arrayType, type, rounding).data\n        chartInstance.update();\n    };\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, arrayType, type, rounding));\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer, data]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n    }, [data, autoUpdate, rounding])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n            {(keyValue === '6_sexual_partners_from_6_months') &&\n            <p>округление до ближайшего числа, кратного 5 (0 = 0, 1, 2, а 5 = 3, 4, 5, 6, 7)</p>}\n\n            {showSelectorWithRounding() && <Radio.Group value={rounding} onChange={handleSetRounding}>\n                <Radio.Button value=\"0\">округление до ближайшего</Radio.Button>\n                <Radio.Button value=\"1\">в бОльшую сторону</Radio.Button>\n                <Radio.Button value=\"-1\">в меньшую сторону</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n            {chartInstance && chartInstance.data.singleValuesLabels.map(i => <Tag>1️⃣&nbsp;&nbsp;{i}</Tag>)}\n        </div>\n    );\n};\n\nexport default BarDiagram;\n","import React from 'react';\nimport { ConfigProvider, DatePicker, Checkbox, Select, Input } from 'antd';\nimport 'moment/locale/ru';\nimport locale from 'antd/lib/locale/ru_RU';\nimport { connect } from \"react-redux\";\nimport {\n    setSearchOfCode,\n    setRangePeriod, setTestingCity,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked,\n    setFormType\n} from \"../../redux/reducers/filter.reducer\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY HH:mm:ss';\n\nconst Filters = ({\n                     sexWorked,\n                     usedPrep,\n                     usedDrugs,\n                     periodType,\n                     formType,\n                     setFormType,\n                     setDrugUsed,\n                     setPrepUsed,\n                     setSexWorked,\n                     setRangePeriod,\n                     setCity,\n                     setSearchOfCode\n                 }) => {\n\n    const onChangeDrugUsed = () => {\n        setDrugUsed(!usedDrugs)\n    }\n    const onChangePrepUsed = () => {\n        setPrepUsed(!usedPrep)\n    }\n    const onChangeSexWorked = () => {\n        setSexWorked(!sexWorked)\n    }\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    const onChangeFormType = (type) => {\n        setFormType(type)\n    }\n\n    const onSearchOfCode = (value) => {\n        setSearchOfCode(value)\n    }\n\n    return (\n        <div className={styles.filters}>\n            <div className={styles.firstLine}>\n                {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                    <RangePicker showTime onChange={onChangeRangePeriod} format={dateFormat}/>\n                </ConfigProvider>}\n                <div className={styles.groups}>\n                    <Checkbox onChange={onChangeDrugUsed}>Used drugs</Checkbox>\n                    <Checkbox onChange={onChangePrepUsed}>Used PrEP</Checkbox>\n                    <Checkbox onChange={onChangeSexWorked}>Sex workers</Checkbox>\n                </div>\n\n                <Select\n                    style={{ width: 200 }}\n                    placeholder=\"Фильтр по филиалу\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все филиалы</Option>\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"nn\">Нижний Новгород</Option>\n                    <Option value=\"spb\">Санкт-Петербург</Option>\n                </Select>\n\n                {/*накинуть фильтр по возрасту*/}\n            </div>\n\n            <div className={styles.secondLine}>\n\n                <Search\n                    placeholder=\"поиск анкет по коду\" onSearch={onSearchOfCode} allowClear style={{ width: 300 }}\n                    enterButton/>\n\n                <Select\n                    style={{ width: 200 }}\n                    placeholder=\"Тип опроса\"\n                    defaultValue={formType ? formType : \"\"}\n                    onChange={onChangeFormType}\n                >\n                    <Option value=\"\">Все типы опросов</Option>\n                    <Option value=\"expanded\">Расширенный опрос</Option>\n                    <Option value=\"short\">Сокращённый опрос</Option>\n                </Select>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    periodType: state.filter.periodType,\n    usedDrugs: state.filter.usedDrugs,\n    sexWorked: state.filter.sexWorked,\n    usedPrep: state.filter.usedPrep,\n    formType: state.filter.formType,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setDrugUsed: (used) => dispatch(setTestingDrugUsed(used)),\n    setPrepUsed: (used) => dispatch(setTestingPrepUsed(used)),\n    setSexWorked: (used) => dispatch(setTestingSexWorked(used)),\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n    setSearchOfCode: (code) => dispatch(setSearchOfCode(code)),\n    setFormType: (type) => dispatch(setFormType(type)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\n","import React, { useEffect, useState } from 'react';\nimport { Collapse, PageHeader, Table, Tabs } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findTesting } from \"../../../redux/thunks/forms\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport Filters from \"../../filters/filters\";\nimport styles from './styles.module.scss'\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst TestingReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filter);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('M/D/YYYY HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('M/D/YYYY HH:mm:ss').toString(),\n        usedDrugs: selectorFiltersTesting.usedDrugs,\n        usedPrep: selectorFiltersTesting.usedPrep,\n        sexWorked: selectorFiltersTesting.sexWorked,\n        city: selectorFiltersTesting.city,\n        searchByCode: selectorFiltersTesting.searchOfCode,\n        formType: selectorFiltersTesting.formType\n    }\n\n    useEffect(() => {\n        dispatch(findTesting(filters)).then((data) => {\n            setTesting(data.data)\n        })\n\n        dispatch(findDiagram({ type: \"testing\" })).then((data) => {\n            setColumnsForm(data.data)\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: 400,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Опрос тестируемых\"\n                subTitle={testing?.length && <span>с учётом фильтров: <b>{testing?.length}</b></span>}\n            />\n            <Filters/>\n            <Tabs className={styles.tabs} defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                                    <Table dataSource={\n                                        comments} columns={[\n                                        {\n                                            title: 'Комментарий консультанта',\n                                            dataIndex: '45_consultant_comment',\n                                            key: '45_consultant_comment',\n                                        },\n                                        {\n                                            title: 'Консультант',\n                                            dataIndex: '42_consultant',\n                                            key: '42_consultant',\n                                        },\n                                        {\n                                            title: 'Дата',\n                                            dataIndex: '43_date',\n                                            key: '43_date',\n                                        }\n                                    ]}/>\n                                </Panel>\n                            </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        pagination\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default TestingReport;\n","import DiagramService from \"../../services/diagram.service\";\nimport { DIAGRAM_FAIL, DIAGRAM_SUCCESS, SET_MESSAGE } from \"./types\";\n\nexport const findDiagram = (filters) => (dispatch) => {\n    return DiagramService.findDiagram(filters).then(\n        (response) => {\n            dispatch({\n                type: DIAGRAM_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: DIAGRAM_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};","import React from \"react\";\nimport { Select, Form, Input, Button } from 'antd';\n\nimport AuthService from \"../../services/auth.service\";\n\nconst { Option } = Select;\n\nexport const Register = () => {\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        AuthService.register(values).then(() => {\n            window.location.reload();\n        })\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form\n            name=\"basic\"\n            layout=\"vertical\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Полное имя (для форм и списков)\"\n                name=\"appointment\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Пароль\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input password!',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Город\"\n                name=\"city\"\n            >\n                <Select placeholder=\"Город\" defaultValue=\"moscow\">\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"spb\">Санкт-Петербург</Option>\n                    <Option value=\"nn\">Нижний Новгород</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Добавить сотрудника\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Select, Form, Input, Button, message } from 'antd';\n\nimport AuthService from \"../../services/auth.service\";\n\nconst { Option } = Select;\n\nexport const ChangePassword = ({ setVisible, values }) => {\n    const [validate, setValidate] = useState(false)\nconsole.log('values', values)\n    const onFinish = (pass) => {\n        console.log('Success username:', {username: values.username, password: pass.password});\n        AuthService.changePassword({username: values.username, password: pass.password}).then(() => {\n            message.success(\"Пароль успешно изменён\")\n            setVisible(false)\n        })\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const onValuesChange = (changedValues, allValues) => {\n        console.log('changedValues, allValues', changedValues, allValues)\n        if (allValues.password === allValues[\"password_2\"] && allValues.password) {\n            setValidate(true)\n        } else {\n            setValidate(false)\n        }\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            layout=\"vertical\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            onValuesChange={onValuesChange}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Пароль\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        min: 6,\n                        message: 'Минимальная длинна 6 символов',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Повторить пароль\"\n                name=\"password_2\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input password!',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item>\n                {validate ? <Button type=\"primary\" htmlType=\"submit\">\n                    Изменить пароль сотрудника\n                </Button> : \"Введенные пароли не совпадают или пароль не введён\"}\n\n            </Form.Item>\n\n        </Form>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { Modal, Table, Select, PageHeader, message } from \"antd\";\nimport { findAllRoles, findAllUsers, findRoles, findSubdivisions } from \"../../../redux/thunks/user.thunks\";\nimport { Button } from 'antd';\nimport styles from \"../../reports/testing/styles.module.scss\";\nimport { Register } from \"../../Forms/Register\";\nimport { ChangePassword } from \"../../Forms/ChangePassword\";\nimport AuthService from \"../../../services/auth.service\";\nimport { stringify } from \"nodemon/lib/utils\";\n\nconst { Option } = Select;\n\nexport const UserManagement = () => {\n\n    const [users, setUsers] = useState(null)\n    const [roles, setRoles] = useState(null)\n    const [subdivisions, setSubdivisions] = useState(null)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [isModalChangePasswordVisible, setIsModalChangePasswordVisible] = useState(false);\n\n    const cities = [\n        {\n            name: 'Москва',\n            code: 'moscow'\n        },\n        {\n            name: 'Санкт-Петербург',\n            code: 'spb'\n        },\n        {\n            name: 'Нижний Новгород',\n            code: 'nn'\n        },\n    ]\n\n    useEffect(() => {\n\n        findRoles().then(roles => setRoles(roles.data))\n        findSubdivisions().then(subdivisions => setSubdivisions(subdivisions.data))\n\n        findAllUsers().then((dataUsers) => {\n            findAllRoles().then((dataRoles) => {\n\n                setUsers(dataUsers.data.map(user => ({\n                        ...user,\n                        roleId: dataRoles.data.find(role => user.id === role.userId).roleId,\n                        subdivisionId: dataRoles.data.find(role => user.id === role.userId).subdivisionId,\n                    })\n                ).sort((a, b) => b.roleId - a.roleId))\n            })\n        })\n    }, [])\n\n    console.log('users', users)\n    console.log('roles', roles)\n    console.log('subdivisions', subdivisions)\n\n    const handleChangeCity = (city, user) => {\n        AuthService.changeCity({ username: user.username, city }).then(() => {\n            message.success(\"Город успешно изменён\")\n        })\n    }\n\n    const handleChangeRole = (role, user) => {\n        AuthService.changeRole({ userId: user.id, roleId: role }).then(() => {\n            message.success(\"Роль пользователя успешно изменена\")\n        })\n    }\n\n    const handleChangeSubdivisions = (subdivisionsId, user) => {\n        // const a = JSON.stringify(subdivisionsId)\n        console.log('subdivisionsId, user', subdivisionsId, user)\n        AuthService.changeSubdivisions({ userId: user.id, subdivisionsId: subdivisionsId.join(\".\") }).then(() => {\n            message.success(\"Подразделения пользователя успешно изменены\")\n        })\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleCancelChangePassword = () => {\n        setIsModalChangePasswordVisible(false);\n    };\n\n    const columns = [\n        {\n            title: 'Учётка (username)',\n            width: 100,\n            dataIndex: 'username',\n            key: 'username',\n            fixed: 'left',\n        },\n        {\n            title: 'Полное имя (в списках)',\n            width: 100,\n            dataIndex: 'appointment',\n            key: 'appointment'\n        },\n        {\n            title: 'Роль сотрудника',\n            dataIndex: 'roleId',\n            key: '2',\n            width: 150,\n            render: (data, values) => {\n                return (\n                    <Select defaultValue={data} style={{ width: 200 }}\n                            onChange={(val) => handleChangeRole(val, values)}>\n                        {roles.map(role => <Option value={role.id}>{role.label}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Доступны подразделения',\n            dataIndex: 'subdivisionId',\n            key: '1',\n            width: 150,\n            render: (data, values) => {\n                return (\n                    subdivisions && <Select\n                        mode=\"multiple\"\n                        defaultValue={\n                            !!data ? data.split('.').map(i => subdivisions.find(value => value.id === +i).id) : undefined\n                        }\n                        style={{ width: 250 }}\n                        onChange={(val) => handleChangeSubdivisions(val, values)}\n                    >\n                        {subdivisions.map(subdivision => <Option value={subdivision.id}>{subdivision.label}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Город',\n            dataIndex: 'city',\n            key: '2',\n            width: 150,\n            render: (data, values) => {\n                return (\n                    <Select defaultValue={data} style={{ width: 200 }}\n                            onChange={(val) => handleChangeCity(val, values)}>\n                        {cities.map(city => <Option value={city.code}>{city.name}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Создан',\n            width: 100,\n            dataIndex: 'createdAt',\n            key: 'createdAt'\n        },\n        {\n            key: 'operation',\n            fixed: 'right',\n            width: 100,\n            render: (event) => <>\n                <Button type=\"primary\" ghost size=\"small\" onClick={() => {\n                    setIsModalChangePasswordVisible(event)\n                }}>Изменить пароль</Button>\n                {/*<Button type=\"primary\" ghost size=\"small\" danger>Удалить</Button>*/}\n            </>,\n        }\n    ];\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Сотрудники\"\n                subTitle=\"Управление учётными записями и правами\"\n                extra={<Button onClick={showModal} type=\"primary\">Добавить сотрудника</Button>}\n            />\n            <br/>\n\n            <p>\n                <b>Роль сотрудника</b> <br/>\n                <i>Консультант</i>: может создавать формы в выбранных подразделениях <br/>\n                <i>Модератор</i>: как user + доступен раздел отчёты по его подразделениям <br/>\n                <i>Администратор</i>: абсолютный доступ КО ВСЕМУ, вкладка \"Админка\", управление пользователями\n            </p>\n\n            <Table size=\"small\" columns={columns} dataSource={users} scroll={{ x: 1500, y: 300 }}/>\n\n            <Modal title=\"Регистрация нового сотрудника\" visible={isModalVisible} onCancel={handleCancel}\n                   footer={false}>\n                <Register/>\n            </Modal>\n\n            <Modal title={`Изменение пароля сотрудника ${isModalChangePasswordVisible.appointment}`}\n                   visible={!!isModalChangePasswordVisible} onCancel={handleCancelChangePassword}\n                   footer={false}>\n                <ChangePassword setVisible={setIsModalChangePasswordVisible} values={isModalChangePasswordVisible}/>\n            </Modal>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from 'react-redux'\n\nimport AuthService from \"../../services/auth.service\";\nimport { fetchLoginForm } from \"../../redux/thunks/user.thunks\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Обязательно для заполнения\n            </div>\n        );\n    }\n};\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            fetchLoginForm({username: this.state.email, password: this.state.password}).then(\n                (e) => {\n                    if (e.roles.length) {\n                        this.props.history.push(\"/forms\");\n                        window.location.reload();\n                    }\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <img\n                    className=\"card-container__img\"\n                    src=\"https://year18.spid.center/img/illustration-footer.jpg\"\n                    alt=\"profile-img\"\n                />\n\n                <div className=\"card card-container\">\n                    {/*<img*/}\n                    {/*  src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"*/}\n                    {/*  alt=\"profile-img\"*/}\n                    {/*  className=\"profile-img-card\"*/}\n                    {/*/>*/}\n                    <h5 className=\"card-container__title\">Авторизация в CRM</h5>\n\n                    <Form\n                        onSubmit={ this.handleLogin }\n                        ref={ c => {\n                            this.form = c;\n                        } }\n                    >\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Сотрудник</label>\n                            <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={ this.state.email }\n                                onChange={ this.onChangeEmail }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Пароль</label>\n                            <Input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={ this.state.password }\n                                onChange={ this.onChangePassword }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button\n                                className=\"btn btn-primary btn-block\"\n                                disabled={ this.state.loading }\n                            >\n                                { this.state.loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\n                                ) }\n                                <span>Войти</span>\n                            </button>\n                        </div>\n\n                        { this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    { this.state.message }\n                                </div>\n                            </div>\n                        ) }\n                        <CheckButton\n                            style={ {display: \"none\"} }\n                            ref={ c => {\n                                this.checkBtn = c;\n                            } }\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport AllForms from \"./components/all-forms/all-forms\";\nimport TestingForm from \"./components/Forms/testing/TestingForm\";\n\nimport logoWhite from './images/logo-white.svg'\nimport logoBlack from './images/logo-black.svg'\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Forms/Login\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/Board-user\";\nimport BoardModerator from \"./components/Board-moderator\";\nimport AdminPanel from \"./components/Board-admin\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.logOut = this.logOut.bind(this);\n        console.log('process.versions.node', process.versions.node)\n        this.state = {\n            showModeratorBoard: false,\n            showAdminBoard: false,\n            currentUser: undefined,\n            readyToRedirect: null\n        };\n    }\n\n    componentDidMount() {\n        const userData = JSON.parse(localStorage.getItem('user'))\n        console.log('userData', userData)\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: AuthService.getCurrentUser(),\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.readyToRedirect !== null) {\n            this.setState({\n                readyToRedirect: null\n            })\n        }\n    }\n\n    logOut() {\n        AuthService.logout();\n    }\n\n    render() {\n        const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n        return (\n            <Router>\n                <div>\n                    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                        <div className=\"container-fluid\">\n                            <Link to={\"/\"} className=\"navbar-brand\">\n                                <div className=\"logo\" style={{ backgroundImage: `url(${logoWhite})` }}/>\n                            </Link>\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                                    data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                                {/*<li className=\"nav-item\">*/}\n                                {/*  <Link to={\"/home\"} className=\"nav-link\">*/}\n                                {/*    Домашняя*/}\n                                {/*  </Link>*/}\n                                {/*</li>*/}\n                                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n                                    {/*{currentUser && (*/}\n                                    {/*  <li className=\"nav-item\">*/}\n                                    {/*    <Link to={\"/user\"} className=\"nav-link\">*/}\n                                    {/*      Профиль*/}\n                                    {/*    </Link>*/}\n                                    {/*  </li>*/}\n                                    {/*)}*/}\n\n                                    {currentUser && (\n                                        <li className=\"nav-item\">\n                                            <Link to={\"/forms\"} className=\"nav-link\">\n                                                Опросы\n                                            </Link>\n                                        </li>\n                                    )}\n\n                                    {(showModeratorBoard || showAdminBoard) && (\n                                        <li className=\"nav-item\">\n                                            <Link to={\"/mod\"} className=\"nav-link\">\n                                                Отчёты\n                                            </Link>\n                                        </li>\n                                    )}\n\n                                    {showAdminBoard && (\n                                        <li className=\"nav-item\">\n                                            <Link to={\"/admin\"} className=\"nav-link\">\n                                                Админка\n                                            </Link>\n                                        </li>\n                                    )}\n\n                                    {currentUser ? (\n                                        <div className=\"navbar-nav ml-auto\">\n                                            <li className=\"nav-item\">\n                                                <Link to={\"/profile\"} className=\"nav-link\">{currentUser.appointment} ({currentUser.username})</Link>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <a href=\"/login\" className=\"nav-link\"\n                                                   onClick={this.logOut}>выйти</a>\n                                            </li>\n                                        </div>\n                                    ) : (\n                                        <div className=\"navbar-nav ml-auto\">\n                                            <li className=\"nav-item\">\n                                                <Link to={\"/login\"} className=\"nav-link\">\n                                                    войти\n                                                </Link>\n                                            </li>\n                                        </div>\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    </nav>\n\n                    {\n                        this.state.readyToRedirect\n                            ? <Redirect to={this.state.readyToRedirect}/>\n                            : null\n                    }\n\n                    <Switch>\n                        <Route exact path={[\"/\", \"/home\"]} component={Login}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/profile\" component={Profile}/>\n                        <Route exact path=\"/forms\" component={AllForms}/>\n                        <Route exact path=\"/testing\" component={TestingForm}/>\n                        <Route path=\"/user\" component={BoardUser}/>\n                        <Route path=\"/mod\" component={BoardModerator}/>\n                        <Route path=\"/admin\" component={AdminPanel}/>\n                    </Switch>\n                </div>\n\n                <div className=\"footer\">\n                    <div className=\"logo\" style={{ backgroundImage: `url(${logoBlack})` }}/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapState = state => ({\n    // allCounterNotRead: state.chat.allCounterNotRead\n})\n\nconst mapDispatch = dispatch => ({\n    // getUserChatsApi: id => dispatch(getUserChatsApi({ id })),\n})\n\nexport default withRouter(connect(mapState, mapDispatch)(App));\n","import React from \"react\";\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport test from './test.jpeg'\nimport styles from './slyles.module.scss'\n\nconst AllForms = () => {\n    console.log('test', )\n    return (\n        <div className={styles[\"all-forms\"]}>\n            <br/>\n            <h4>Формы и опросы</h4>\n\n            <NavLink to=\"/testing\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    <div className={styles.image} style={{backgroundImage: `url(${test})`}}/>\n                    <p className={styles.title}>Опрос тестируемых «СПИД.ЦЕНТР»</p>\n                </div>\n            </NavLink>\n\n            <br/>\n            Находятся в разработке\n\n            <NavLink disabled to=\"/groups\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    Группы поддержки\n                </div>\n            </NavLink>\n\n            <NavLink disabled to=\"/hot-line\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    Горячая линия «СПИД.ЦЕНТР»\n                </div>\n            </NavLink>\n\n        </div>\n    );\n};\n\nexport default AllForms;\n","module.exports = __webpack_public_path__ + \"static/media/test.10fd7227.jpeg\";","import React, { useState, useEffect } from \"react\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport MaskedInput from 'antd-mask-input'\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport moment from 'moment'\nimport {\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    Radio,\n    DatePicker,\n    Tabs,\n    Switch,\n    Select,\n    message,\n    Tag,\n    Alert\n} from 'antd';\nimport { ADMIN, MODERATOR, USER } from \"../../../constants/roles.constants\";\nimport useAuth from \"../../../hooks/useAuth\";\n// import { findByCode } from \"../../../actions/filter-testing\";\n// import { findTesting, testing } from \"../../../actions/forms\";\nimport { findByCode } from \"../../../redux/reducers/filter.reducer\";\nimport { findTesting, testing } from \"../../../redux/thunks/forms\";\nimport pride from './images/pride.jpeg'\nimport noPride from './images/no-pride.jpg'\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nconst TestingForm = ({ pastTests }) => {\n    const [expanded, setExpanded] = useState(true)\n    const [now, setNow] = useState(true)\n    const [submitting, setSubmitting] = useState(false)\n    const [successful, setSuccessful] = useState(false);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [form] = Form.useForm();\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    let initialValues = {}\n\n\n    useEffect(() => form.resetFields(), [form, initialValues, submitting]);\n\n    if (localStorage.getItem('TESTING_FORM')) {\n        initialValues = {\n            ...JSON.parse(localStorage.getItem('TESTING_FORM')),\n            ...initialValues\n        }\n    }\n\n    const resetForm = () => {\n        console.log('resetForm')\n        localStorage.removeItem(\"TESTING_FORM\")\n        initialValues = {}\n        message.success('Поля формы сброшены')\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFormLayoutChange = (values) => {\n\n        if (values[\"date\"] || values[\"time\"]) {\n            return\n        }\n\n        localStorage.setItem(\"TESTING_FORM\", JSON.stringify(form.getFieldsValue()))\n    };\n\n    const onFinish = async (values) => {\n        console.log('values', values)\n\n        const stateForm = new Object({\n            \"1_code\": values[\"1_code\"],\n            \"3_gender\": values[\"3_gender\"],\n            \"4_age\": values[\"4_age\"],\n            \"7_constant_sexual_partner\": values[\"7_constant_sexual_partner\"],\n            \"8_sex_using_a_condom\": values[\"8_sex_using_a_condom\"],\n            \"9_condom_for_sex_with_a_permanent\": values[\"9_condom_for_sex_with_a_permanent\"],\n            \"10_condom_for_sex_with_a_club\": values[\"10_condom_for_sex_with_a_club\"],\n            \"11_condom_for_last_sex\": values[\"11_condom_for_last_sex\"],\n            \"12_using_condom\": values[\"12_using_condom\"] ? values[\"12_using_condom\"].toString() : null,\n            \"14_now_there_is_a_condom\": values[\"14_now_there_is_a_condom\"],\n            \"15_with_whom_sex\": values[\"15_with_whom_sex\"] ? values[\"15_with_whom_sex\"].toString() : null,\n            \"17_drugs_for_sex\": values[\"17_drugs_for_sex\"],\n            \"18_drugs_or_money_in_exchange_for_sex\": values[\"18_drugs_or_money_in_exchange_for_sex\"],\n            \"19_sexually_transmitted_diseases\": values[\"19_sexually_transmitted_diseases\"],\n            \"20_med_sexually_transmitted_diseases\": values[\"20_med_sexually_transmitted_diseases\"],\n            \"22_diagnosed_with_syphilis\": values[\"22_diagnosed_with_syphilis\"],\n            \"23_hiv_tested\": values[\"23_hiv_tested\"],\n            \"24_how_often_hiv_tested\": values[\"24_how_often_hiv_tested\"],\n            \"25_do_you_know_your_hiv_status\": values[\"25_do_you_know_your_hiv_status\"],\n            \"26_you_are_a_citizen_of_russia\": values[\"26_you_are_a_citizen_of_russia\"],\n            \"28_you_education\": values[\"28_you_education\"],\n            \"29_the_nature_of_your_work\": values[\"29_the_nature_of_your_work\"],\n            \"30_marital_status\": values[\"30_marital_status\"],\n            \"31_you_are_a_listen_PrEP\": values[\"31_you_are_a_listen_PrEP\"],\n            \"32_you_are_a_interest_PrEP\": values[\"32_you_are_a_interest_PrEP\"],\n            \"33_you_are_a_used_PrEP\": values[\"33_you_are_a_used_PrEP\"],\n            \"35_you_have_started_taking_prep\": values[\"35_you_have_started_taking_prep\"],\n            \"36_hiv_test_result\": values[\"36_hiv_test_result\"],\n            \"37_hepatitis_test_result\": values[\"37_hepatitis_test_result\"],\n            \"38_syphilis_test_result\": values[\"38_syphilis_test_result\"],\n            \"39_consulting_on_regular_testing_provided\": values[\"39_consulting_on_regular_testing_provided\"] ? values[\"39_consulting_on_regular_testing_provided\"][0] : null,\n            \"40_prevention_counseling_provided\": values[\"40_prevention_counseling_provided\"] ? values[\"40_prevention_counseling_provided\"][0] : null,\n            \"41_provided_counseling_on_receiving_treatment_for_hiv\": values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"] ? values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"][0] : null,\n            \"42_consultant\": user.username,\n            \"45_consultant_comment\": values[\"45_consultant_comment\"],\n            \"46_city\": user.city,\n            \"47_type_form\": expanded ? \"expanded\" : \"short\",\n        })\n\n        const createOtherFields = () => {\n\n            // \"2_how_did_you_know\": [...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"]],\n            if (values[\"2_1_how_did_you_know\"]?.length && values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"]].toString()\n            } else if (values[\"2_1_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = values[\"2_1_how_did_you_know\"].toString()\n            } else if (values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [values[\"2_2_how_did_you_know\"]].toString()\n            } else {\n                stateForm[\"2_how_did_you_know\"] = null\n            }\n\n            // \"5_first_sex\": [...values[\"5_1_first_sex\"], values[\"5_2_first_sex\"]],\n            if (values[\"5_2_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_2_first_sex\"][0]\n            } else if (values[\"5_1_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_1_first_sex\"]\n            } else {\n                stateForm[\"5_first_sex\"] = null\n            }\n\n            // \"6_sexual_partners_from_6_months\": [...values[\"6_1_sexual_partners_from_6_months\"], values[\"6_2_sexual_partners_from_6_months\"]],\n            if (values[\"6_2_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_2_sexual_partners_from_6_months\"][0]\n            } else if (values[\"6_1_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_1_sexual_partners_from_6_months\"]\n            } else {\n                stateForm[\"6_sexual_partners_from_6_months\"] = null\n            }\n\n            // \"13_no_using_condom\": [...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"]],\n            if (values[\"13_1_no_using_condom\"]?.length && values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"]].toString()\n            } else if (values[\"13_1_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = values[\"13_1_no_using_condom\"].toString()\n            } else if (values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [values[\"13_2_no_using_condom\"]].toString()\n            } else {\n                stateForm[\"13_no_using_condom\"] = null\n            }\n\n            // \"16_used_drugs\": [...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"]],\n            if (values[\"16_1_used_drugs\"]?.length && values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"]].toString()\n            } else if (values[\"16_1_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = values[\"16_1_used_drugs\"].toString()\n            } else if (values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [values[\"16_2_used_drugs\"]].toString()\n            } else {\n                stateForm[\"16_used_drugs\"] = null\n            }\n\n            // \"21_used_drugs\": [...values[\"21_1_used_drugs\"], values[\"21_2_used_drugs\"]],\n            if (values[\"21_1_used_drugs\"]?.length && values[\"21_2_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = [...values[\"21_1_used_drugs\"], values[\"21_2_used_drugs\"]].toString()\n            } else if (values[\"21_1_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = values[\"21_1_used_drugs\"].toString()\n            } else if (values[\"21_2_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = [values[\"21_2_used_drugs\"]].toString()\n            } else {\n                stateForm[\"21_used_drugs\"] = null\n            }\n\n            // \"27_registration_on_the_territory\": [...values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"]],\n            if (values[\"27_1_registration_on_the_territory\"]?.length && values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"]].toString()\n            } else if (values[\"27_1_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = values[\"27_1_registration_on_the_territory\"].toString()\n            } else if (values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [values[\"27_2_registration_on_the_territory\"]].toString()\n            } else {\n                stateForm[\"27_registration_on_the_territory\"] = null\n            }\n\n            // \"34_for_prep_you_use\": [...values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"]],\n            if (values[\"34_1_for_prep_you_use\"]?.length && values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"]].toString()\n            } else if (values[\"34_1_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = values[\"34_1_for_prep_you_use\"].toString()\n            } else if (values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [values[\"34_2_for_prep_you_use\"]].toString()\n            } else {\n                stateForm[\"34_for_prep_you_use\"] = null\n            }\n\n            if (values[\"date\"]) {\n                stateForm[\"43_date\"] = values[\"date\"].format(\"M/D/YYYY HH:mm:ss\")\n            } else {\n                stateForm[\"43_date\"] = moment().format(\"M/D/YYYY HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n\n        setSubmitting(true)\n        dispatch(testing(fields))\n            .then(() => {\n                setSubmitting(false)\n                setSuccessful(true);\n                localStorage.removeItem(\"TESTING_FORM\")\n                form.resetFields()\n                history.push('/forms')\n                message.success('Форма успешно сохранена 👌')\n            })\n            .catch(() => {\n                setSuccessful(false);\n            });\n    }\n\n    function callback(key) {\n        setExpanded(key === \"1\")\n\n        form.setFieldsValue({\n            \"47_type_form\": key\n        });\n\n\n        console.log('expanded', expanded)\n    }\n\n    function CodeInput(props) {\n        return <>\n            <MaskedInput\n                className={styles.code}\n                mask=\"W/WW/WW/WW.WW.WWWW\"\n                placeholder=\"П/ИИ/ММ/ДД.ДД.ДДДД\"\n                isRevealingMask={true}\n                size=\"18\"\n                {...props}\n                formatCharacters={{\n                    'W': {\n                        validate() {\n                            return true\n                        },\n                        transform(char) {\n                            return char.toUpperCase()\n                        }\n                    }\n                }}\n            />\n\n            <Input\n                {...props}\n                onChange={onChangeCode}/>\n        </>\n    }\n\n    const optionsWithDisabled = [\n        { label: 'Аутрич в клубах', value: 'Аутрич в клубах' },\n        { label: 'Экраны в клубах', value: 'Экраны в клубах' },\n        { label: 'Соцсети/сайт фонда', value: 'Соцсети/сайт фонда' },\n        { label: 'Хорнет', value: 'Хорнет' },\n        { label: 'Телеграм', value: 'Телеграм' },\n        { label: 'Знакомые', value: 'Знакомые' },\n        { label: 'Контекстная реклама в Гугле', value: 'Контекстная реклама в Гугле' },\n        { label: 'Видео-реклама в Инстаграм', value: 'Видео-реклама в Инстаграм' },\n        { label: 'Поисковые системы', value: 'Поисковые системы' },\n        { label: 'Тестировался здесь ранее', value: 'Тестировался здесь ранее' },\n    ];\n\n    const onChangeCode = (event) => {\n        const value = event.target.value\n        form.setFieldsValue({\n            \"1_code\": value\n        });\n        const valueClean = value.replace(/[. /_]/g, '')\n        if (valueClean.length === 13) {\n            dispatch(findTesting({\n                code: valueClean\n            })).then((data) => {\n                dispatch(findByCode(data.data))\n                form.setFieldsValue({\n                    \"1_code\": value\n                });\n            })\n        }\n    }\n\n    return (\n        <div className={styles.container}>\n\n            <div className={styles.resetForm} onClick={resetForm}>Сбросить поля</div>\n\n            <div className={styles.image}\n                 style={expanded ? { backgroundImage: `url(${pride})` } : { backgroundImage: `url(${noPride})` }}\n            />\n\n            <div className={styles.titleContainer}>\n                <div className={styles.line}/>\n                <h1 className={styles.h1}>Опрос тестируемых «СПИД.ЦЕНТР»</h1>\n                <p className={styles.required}>* Обязательные поля</p>\n                <h5>Сохранить от имени: <a href=\"/login\"><b>{user.appointment}</b></a> ({user.city})</h5>\n            </div>\n\n            <Form\n                layout={'vertical'}\n                form={form}\n                initialValues={initialValues}\n                onValuesChange={onFormLayoutChange}\n                onFinish={onFinish}\n            >\n\n                <div className={styles.tabs}>\n                    <Tabs size=\"large\" defaultActiveKey={expanded} onChange={callback}>\n                        <TabPane tab=\"Расширенный\" key=\"1\"/>\n                        <TabPane tab=\"Сокращенный\" key=\"0\"/>\n                    </Tabs>\n                </div>\n\n                <div>\n                    <Form.Item name=\"1_code\"\n                               label=\"Уникальный идентификационный код (УИК) респондента (пол, 2 буквы имени, 2 буквы имени матери, дата рождения):\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Поле обязательно для заполнения',\n                                   },\n                               ]}\n                    >\n                        <CodeInput/>\n                    </Form.Item>\n\n                    {pastTests && <div>\n                        {pastTests.map(i => i[\"45_consultant_comment\"] &&\n                            <Alert message={i[\"45_consultant_comment\"]} type=\"info\" showIcon description={\n                                <div>{moment(i[\"43_date\"]).format('DD.MM.YYYY HH:mm')} {i[\"42_consultant\"] &&\n                                <span>({i[\"42_consultant\"]})</span>}</div>}/>)}\n                        {pastTests.length > 0 && <br/>}\n                        {pastTests.length > 0 ? [...pastTests].sort(function (a, b) {\n                                if (b[\"43_date\"] < a[\"43_date\"]) {\n                                    return -1;\n                                }\n                                if (b[\"43_date\"] > a[\"43_date\"]) {\n                                    return 1;\n                                }\n                                return -1;\n                            }).map(i =>\n                                <Tag>{moment(i[\"43_date\"], 'MM/DD/YYYY HH:mm:ss').format('DD.MM.YYYY HH:mm')}</Tag>)\n                            : <i style={{ color: \"gray\" }}>тестирований с этим кодом не найдено</i>\n                        }\n                    </div>}\n\n                </div>\n\n                {expanded && <div>\n                    <Form.Item name=\"2_1_how_did_you_know\" label=\"Откуда вы узнали о тестировании?\">\n                        <Checkbox.Group>\n                            {optionsWithDisabled.map(option => <Checkbox\n                                value={option.value}>{option.label}</Checkbox>)}\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"2_2_how_did_you_know\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"3_gender\" label=\"Ваш пол?\">\n                    <Radio.Group>\n                        <Radio value=\"Male\">Мужчина</Radio>\n                        <Radio value=\"Famale\">Женщина</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"4_age\" label=\"Ваш возраст?\">\n                    <Radio.Group>\n                        <Radio value=\"18-19 лет\">18-19 лет</Radio>\n                        <Radio value=\"20-29 лет\">20-29 лет</Radio>\n                        <Radio value=\"30-39 лет\">30-39 лет</Radio>\n                        <Radio value=\"40-49 лет\">40-49 лет</Radio>\n                        <Radio value=\"50 и старше\">50 и старше</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"5_1_first_sex\" label=\"В каком возрасте у вас был первый сексуальный контакт?\">\n                        <Input placeholder=\"Возраст\"/>\n                    </Form.Item>\n                    <Form.Item name=\"5_2_first_sex\" label=\"Не было\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Не было\"/>\n                        </Checkbox.Group>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <div>\n                    <Form.Item name=\"6_1_sexual_partners_from_6_months\"\n                               label=\"Были ли у вас сексуальные партнеры за последние 6 месяцев (если да, укажите число)?\">\n                        <Input placeholder=\"Укажите число партнеров\"/>\n                    </Form.Item>\n                    <Form.Item name=\"6_2_sexual_partners_from_6_months\" label=\"Нет\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Нет\"/>\n                        </Checkbox.Group>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"7_constant_sexual_partner\"\n                                        label=\"Есть ли у вас постоянный сексуальный партнер?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"8_sex_using_a_condom\"\n                                        label=\"Как часто вы занимались сексом в последние 6 месяцев, используя презерватив?\">\n                    <Radio.Group>\n                        <Radio value=\"Всегда / почти всегда\">Всегда / почти всегда</Radio>\n                        <Radio value=\"В большинстве случаев\">В большинстве случаев</Radio>\n                        <Radio value=\"Примерно в половине случаев\">Примерно в половине случаев</Radio>\n                        <Radio value=\"В меньшинстве случаев\">В меньшинстве случаев</Radio>\n                        <Radio value=\"Никогда\">Никогда</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"9_condom_for_sex_with_a_permanent\"\n                                        label=\"Используете ли вы презерватив при сексе с постоянным партнером?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"10_condom_for_sex_with_a_club\"\n                                        label=\"Используете ли вы презерватив при сексе со случайными партнерами?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"11_condom_for_last_sex\"\n                                        label=\"Вы пользовались презервативом во время последнего секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item name=\"12_using_condom\"\n                                        label=\"Используете ли вы презервативы при (возможны несколько вариантов):\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Вагинальном сексе\">Вагинальном сексе</Checkbox>\n                        <Checkbox value=\"Оральном сексе\">Оральном сексе</Checkbox>\n                        <Checkbox value=\"Анальном сексе\">Анальном сексе</Checkbox>\n                        <Checkbox value=\"Не использую\">Не использую</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"13_1_no_using_condom\"\n                               label=\"Почему вы не использовали презерватив со своим последним сексуальным партнером(возможны несколько вариантов)?\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Я использовал его\">Я использовал его</Checkbox>\n                            <Checkbox value=\"У меня его не было\">У меня его не было</Checkbox>\n                            <Checkbox value=\"Я был в алкогольном/наркотическом опьянении\">Я был в\n                                алкогольном/наркотическом\n                                опьянении</Checkbox>\n                            <Checkbox value=\"Они слишком дорогие\">Они слишком дорогие</Checkbox>\n                            <Checkbox value=\"Партнер не хотел пользоваться презервативом\">Партнер не хотел пользоваться\n                                презервативом</Checkbox>\n                            <Checkbox value=\"Мы были готовы зачать ребенка\">Мы были готовы зачать ребенка</Checkbox>\n                            <Checkbox value=\"Я не люблю пользоваться презервативами\">Я не люблю пользоваться\n                                презервативами</Checkbox>\n                            <Checkbox value=\"Мне кажется, в этом не было необходимости\">Мне кажется, в этом не было\n                                необходимости</Checkbox>\n                            <Checkbox value=\"Я доверяю своему партнеру\">Я доверяю своему партнеру</Checkbox>\n                            <Checkbox value=\"Я просто не думал об этом\">Я просто не думал об этом</Checkbox>\n                            <Checkbox value=\"Я использую PrEP\">Я использую PrEP</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"13_2_no_using_condom\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"14_now_there_is_a_condom\"\n                                        label=\"У тебя сейчас есть презерватив с собой?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded &&\n                <Form.Item name=\"15_with_whom_sex\" label=\"С кем у вас были половые контакты последние 6 месяцев?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Мужчины\">Мужчины</Checkbox>\n                        <Checkbox value=\"Женщины\">Женщины</Checkbox>\n                        <Checkbox value=\"Трансгендеры\">Трансгендеры</Checkbox>\n                        <Checkbox value=\"Не было\">Не было</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"16_1_used_drugs\"\n                               label=\"Вы употребляли наркотики в последние 12 месяцев (если да, то какие)?\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Не употреблял\">Не употреблял</Checkbox>\n                            <Checkbox value=\"Героин\">Героин</Checkbox>\n                            <Checkbox value=\"Кокаин\">Кокаин</Checkbox>\n                            <Checkbox value=\"Марихуана\">Марихуана</Checkbox>\n                            <Checkbox value=\"МДМА (экстази)\">МДМА (экстази)</Checkbox>\n                            <Checkbox value=\"Мефедрон\">Мефедрон</Checkbox>\n                            <Checkbox value=\"Амфетамин\">Амфетамин</Checkbox>\n                            <Checkbox value=\"Метамфетамин\">Метамфетамин</Checkbox>\n                            <Checkbox value=\"Бутират\">Бутират</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"16_2_used_drugs\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"17_drugs_for_sex\"\n                                        label=\"Используете ли вы наркотики для секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"18_drugs_or_money_in_exchange_for_sex\"\n                                        label=\"Приходилось ли вам получать или давать деньги или наркотики в обмен на сексуальные услуги в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, я давал\">Да, я давал</Radio>\n                        <Radio value=\"Да, я получал\">Да, я получал</Radio>\n                        <Radio value=\"И то и другое\">И то и другое</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"19_sexually_transmitted_diseases\"\n                                        label=\"Были ли у вас заболевания, передающиеся половым путем, за последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"20_med_sexually_transmitted_diseases\"\n                                        label=\"Обращались ли вы за медицинской консультацией по поводу ИППП в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"21_1_used_drugs\"\n                               label=\"Диагностировали у вас есть хронические формы гепатита? (если да, укажите форму: A, B, C, D, E)\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Нет\">Нет</Checkbox>\n                            <Checkbox value=\"Я не знаю об этой болезни\">Я не знаю об этой болезни</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"21_2_used_drugs\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"22_diagnosed_with_syphilis\"\n                                        label=\"Был ли у вас ранее диагностирован сифилис?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"23_hiv_tested\"\n                                        label=\"Вы когда-нибудь проходили тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"24_how_often_hiv_tested\"\n                                        label=\"Как часто вы проходите тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Раз в 3 месяца\">Раз в 3 месяца</Radio>\n                        <Radio value=\"Раз в 6 месяцев\">Раз в 6 месяцев</Radio>\n                        <Radio value=\"Раз в 12 месяцев\">Раз в 12 месяцев</Radio>\n                        <Radio value=\"Менее одного раза в 12 месяцев\">Менее одного раза в 12 месяцев</Radio>\n                        <Radio value=\"Первый раз\">Первый раз</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"25_do_you_know_your_hiv_status\"\n                                        label=\"Знаете ли вы свой ВИЧ-статус?\">\n                    <Radio.Group>\n                        <Radio value=\"Я ВИЧ-положительный\">Я ВИЧ-положительный</Radio>\n                        <Radio value=\"Я ВИЧ-отрицательный\">Я ВИЧ-отрицательный</Radio>\n                        <Radio value=\"Я не знаю свой ВИЧ-статус\">Я не знаю свой ВИЧ-статус</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"26_you_are_a_citizen_of_russia\"\n                                        label=\"Вы гражданин России?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"27_1_registration_on_the_territory\"\n                               label=\"У вас есть регистрация на территории Московской области? (если есть регистрация другого региона, укажите, какого)\">\n                        <Radio.Group>\n                            <Radio value=\"Постоянная регистрация\">Постоянная регистрация</Radio>\n                            <Radio value=\"Временная регистрация\">Временная регистрация</Radio>\n                            <Radio value=\"Нет регистрации\">Нет регистрации</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item name=\"27_2_registration_on_the_territory\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"28_you_education\"\n                                        label=\"Ваше образование?\">\n                    <Radio.Group>\n                        <Radio value=\"Не получил базового среднего образования (не закончил 8-9 классы школы)\">Не\n                            получил базового\n                            среднего образования (не закончил 8-9 классы школы)</Radio>\n                        <Radio\n                            value=\"Неполное среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)\">Неполное\n                            среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)</Radio>\n                        <Radio\n                            value=\"Общее среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)\">Общее\n                            среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)</Radio>\n                        <Radio\n                            value=\"Среднее специальное (окончил техникум / колледж / колледж со средним специальным образованием)\">Среднее\n                            специальное (окончил техникум / колледж / колледж со средним специальным\n                            образованием)</Radio>\n                        <Radio value=\"Неполное высшее образование (закончил 2-4 года университета)\">Неполное высшее\n                            образование\n                            (закончил 2-4 года университета)</Radio>\n                        <Radio value=\"Высшее (получил диплом университета)\">Высшее (получил диплом университета)</Radio>\n                        <Radio value=\"Академическая степень (кандидат наук, доктор наук)\">Академическая степень\n                            (кандидат наук,\n                            доктор наук)</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"29_the_nature_of_your_work\"\n                                        label=\"Какое из следующих определений лучше всего описывает характер вашей работы на данный момент?\">\n                    <Radio.Group>\n                        <Radio value=\"Полная занятость\">Полная занятость</Radio>\n                        <Radio value=\"Частичная/неполная занятость\">Частичная/неполная занятость</Radio>\n                        <Radio\n                            value=\"Полная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Полная\n                            занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности</Radio>\n                        <Radio\n                            value=\"Случайный заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Случайный\n                            заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной\n                            деятельности</Radio>\n                        <Radio value=\"Безработный (ищу работу)\">Безработный (ищу работу)</Radio>\n                        <Radio value=\"Я не работаю и не ищу работу\">Я не работаю и не ищу работу</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"30_marital_status\"\n                                        label=\"Ваше семейное положение?\">\n                    <Radio.Group>\n                        <Radio value=\"Никогда не был женат\">Никогда не был женат</Radio>\n                        <Radio value=\"Я живу вместе с партнером, но отношения не зарегистрированы\">Я живу вместе с\n                            партнером, но\n                            отношения не зарегистрированы</Radio>\n                        <Radio value=\"Женат/замужем\">Женат/замужем</Radio>\n                        <Radio value=\"Женат/замужем, живу отдельно от партнера\">Женат/замужем, живу отдельно от\n                            партнера</Radio>\n                        <Radio value=\"В разводе живу отдельно от партнера\">В разводе живу отдельно от партнера</Radio>\n                        <Radio value=\"В разводе, но живу с партнером\">В разводе, но живу с партнером</Radio>\n                        <Radio value=\"Вдовец/вдова\">Вдовец/вдова</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"31_you_are_a_listen_PrEP\"\n                                        label=\"Вы уже слышали о доконтактной профилактике (PrEP) до этого?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"32_you_are_a_interest_PrEP\"\n                                        label=\"Вы были бы заинтересованы в использовании PrEP?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"33_you_are_a_used_PrEP\"\n                                        label=\"Вы когда-нибудь уже использовали доконтактную профилактику (PrEP)?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <div>\n                    <Form.Item name=\"34_1_for_prep_you_use\"\n                               label=\"Для PrEP вы используете:\">\n                        <Radio.Group>\n                            <Radio value=\"Truvada\">Truvada</Radio>\n                            <Radio value=\"Дженерики Truvada\">Дженерики Truvada</Radio>\n                            <Radio value=\"Двухкомпонентную схему (тенофавир и ламивудин/эмтрицитабин)\">Двухкомпонентную\n                                схему\n                                (тенофавир и ламивудин/эмтрицитабин)</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item name=\"34_2_for_prep_you_use\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n\n                {expanded && <Form.Item required name=\"35_you_have_started_taking_prep\"\n                                        label=\"Вы начали прием PrEP:\">\n                    <Radio.Group>\n                        <Radio value=\"После прохождения теста на ВИЧ и консультации с врачом\">После прохождения теста на\n                            ВИЧ и\n                            консультации с врачом</Radio>\n                        <Radio value=\"После теста на ВИЧ\">После теста на ВИЧ</Radio>\n                        <Radio value=\"Без каких-либо тестов и консультаций\">Без каких-либо тестов и консультаций</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                <Form.Item required name=\"36_hiv_test_result\"\n                           label=\"Результат теста на ВИЧ:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n\n                {expanded && <Form.Item required name=\"37_hepatitis_test_result\"\n                                        label=\"Результат теста на Гепатит С:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"38_syphilis_test_result\"\n                                        label=\"Результат теста на Сифилис:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                <Form.Item name=\"39_consulting_on_regular_testing_provided\"\n                           label=\"Оказано консультирование по регулярному тестированию\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"40_prevention_counseling_provided\" label=\"Оказано консультирование по профилактике\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"41_provided_counseling_on_receiving_treatment_for_hiv\"\n                           label=\"Оказано консультирование по получению лечения для ВИЧ+\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <div>\n                    <Switch checked={now} onChange={() => setNow(!now)}/>&nbsp;&nbsp;&nbsp;<label htmlFor=\"\">Сохраняю\n                    во\n                    время\n                    тестирования (текущее время)</label>\n                </div>\n\n                {\n                    !now && <>\n                        <Form.Item rules={[\n                            {\n                                required: true,\n                                message: 'Поле обязательно для заполнения',\n                            },\n                        ]} name=\"date\" label={`Дата и Время`}>\n                            <DatePicker showTime format={'DD.MM.YYYY HH:mm'}/>\n                        </Form.Item>\n\n                    </>\n                }\n\n                <Form.Item name=\"45_consultant_comment\" label={`Комментарий консультанта (${user.appointment}, филиал ${user.city})`}>\n                    <Input.TextArea placeholder=\"Комментарий\"/>\n                </Form.Item>\n\n                {submitting ? \"Loading...\" : <Form.Item>\n                    <Button htmlType=\"submit\" type=\"primary\">Сохранить опрос</Button>\n                </Form.Item>}\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default useAuth(connect(mapStateToProps, mapDispatchToProps)(TestingForm), USER);\n","module.exports = __webpack_public_path__ + \"static/media/pride.b8f79617.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/no-pride.0bdbc73e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.bff383bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.cae10ea2.svg\";","import React from \"react\";\nimport {USER} from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport Header from \"./Header/Header\";\nimport Default from \"./Layouts/Default\";\n\nconst Profile = () => {\n\n    const currentUser = JSON.parse(localStorage.getItem('user'))\n\n    return (\n        <div>\n            <Header>\n                <h2>Настройки</h2>\n            </Header>\n            <Default>\n                <p><strong>Email</strong>: {currentUser.email}</p>\n                <p> Сменить email</p>\n                <p> Сменить пароль</p>\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(Profile, USER);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"styles_Header__2KoFd\"};","import React from \"react\";\nimport useAuth from \"../hooks/useAuth\";\nimport {USER} from \"../constants/roles.constants\";\nimport Default from \"./Layouts/Default\";\nimport Header from \"./Header/Header\";\n\nconst AdminPanel = () => {\n    return (<div>\n            <Header>\n                <h2>User page (uploaded video and upload)</h2>\n            </Header>\n            <Default>\n                Content\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(AdminPanel, USER)","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { MODERATOR } from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport UserService from \"../services/user.service\";\nimport TestingReport from \"./reports/testing/TestingReport\";\nimport { UserManagement } from \"./admin/user-management\";\n\nconst { Content, Sider } = Layout;\nconst BoardModerator = () => {\n    const [tab, setTab] = useState(\"1\");\n\n    const setActiveTab = (e) => {\n        setTab(e.key)\n    }\n\n    const setComponent = (tab) => {\n        switch (tab) {\n            case \"1\":\n                return <TestingReport/>\n            case \"2\":\n                return \"Индивидуальная формулировка выборки показателей отчета (добавлять/удалять стату с хитрой совмещенной выборкой)\"\n            default:\n                return \"\"\n        }\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <Menu onSelect={setActiveTab} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[tab]}>\n                    {/*<Menu.Item key=\"1\" icon={<VideoCameraOutlined/>}>*/}\n                    {/*    Диаграммы*/}\n                    {/*</Menu.Item>*/}\n                    <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                        Тестируемые\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" >\n                        Индивидуальный отч.\n                    </Menu.Item>\n                    {/*<Menu.Item key=\"4\" icon={<UserOutlined/>}>*/}\n                    {/*    nav 4*/}\n                    {/*</Menu.Item>*/}\n                </Menu>\n            </Sider>\n            <Layout>\n                {/*<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}/>*/}\n                <Content style={{ margin: '24px 16px 0' }}>\n                    {setComponent(tab)}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nexport default useAuth(BoardModerator, MODERATOR);","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { ADMIN } from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport UserService from \"../services/user.service\";\nimport TestingReport from \"./reports/testing/TestingReport\";\nimport { UserManagement } from \"./admin/user-management\";\n\nconst { Content, Sider } = Layout;\nconst BoardAdmin = () => {\n    const [tab, setTab] = useState(\"1\");\n\n    const setActiveTab = (e) => {\n        setTab(e.key)\n    }\n\n    const setComponent = (tab) => {\n       switch (tab) {\n           case \"1\":\n               return <UserManagement/>\n           case \"2\":\n               return \"создание сущностей, редактирование, удаление, вход в ситему, просмотр отчета и т.д.\"\n           default:\n               return \"\"\n       }\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <Menu onSelect={setActiveTab} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[tab]}>\n                    <Menu.Item key=\"1\" >\n                       Сотрудники\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<UserOutlined/>}>\n                        Журнал действий\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout>\n                {/*<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}/>*/}\n                <Content style={{ margin: '24px 16px 0' }}>\n                    {setComponent(tab)}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nexport default useAuth(BoardAdmin, ADMIN);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createSlice} from '@reduxjs/toolkit'\nimport {START} from \"../../constants/others.constants\";\n\nconst APP_REDUCER_NAME = 'app'\n\nconst appSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: {\n        loaded: false,\n        create: {\n            files: [],\n            metro: [],\n            typeOfApplicant: null\n        },\n        user: null\n    },\n    reducers: {\n        setLoadedFiles(state, action) {\n            state.create.files = [\n                ...state.create.files,\n                ...action.payload\n            ]\n        },\n        resetFiles(state, payload) {\n            state.create.files = []\n        },\n        setMetroStation(state, action) {\n            state.create.metro = action.payload\n        },\n        setLoading(state, action) {\n            state.loaded = action.payload !== START\n        },\n        setOneUserData(state, action) {\n            state.user = action.payload\n            state.loaded = true\n        }\n    }\n})\n\nexport const {\n    setLoadedFiles,\n    resetFiles,\n    setMetroStation,\n    setLoading,\n    setOneUserData\n} = appSlice.actions\n\nexport default appSlice.reducer\n","import {combineReducers} from 'redux'\nimport user from './reducers/user.reducer'\nimport app from './reducers/app.reducer'\n// import video from './reducers/video.reducer'\nimport filter from './reducers/filter.reducer'\n\nexport default combineReducers({\n    app,\n    user,\n    // video,\n    filter\n});\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport rootReducer from './reducer'\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger'\n// And use redux-batch as an example of adding enhancers\nimport {reduxBatch} from '@manaflair/redux-batch'\n\nconst middleware = [...getDefaultMiddleware(), logger]\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers: [reduxBatch]\n})\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport {YMInitializer} from 'react-yandex-metrika';\nimport * as Sentry from '@sentry/browser';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\nif (process.env.NODE_ENV === 'production') {\n    Sentry.init({dsn: \"https://80ec2091533941ef80154e3220bae060@o392602.ingest.sentry.io/5240421\"});\n}\n\nReactDOM.render(\n    <React.Fragment>\n        {process.env.NODE_ENV === 'production'\n            ? <YMInitializer accounts={[62759980]} options={{clickmap: true, webvisor: true}} version=\"2\"/>\n            : null}\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.Fragment>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","export const ADMIN = 'admin'\nexport const MODERATOR = 'mod'\nexport const USER = 'user'","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        return {'x-access-token': user.accessToken};\n    } else {\n        return {};\n    }\n}\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_ROLE = \"FETCH_ROLE\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const TESTING_SET_DRUG_USED = \"TESTING_SET_DRUG_USED\"\nexport const TESTING_SET_SEX_WORKED = \"TESTING_SET_SEX_WORKED\"\nexport const TESTING_SET_PREP_USED = \"TESTING_SET_PREP_USED\"\nexport const TESTING_SET_RANGE_PERIOD = \"TESTING_SET_RANGE_PERIOD\"\nexport const TESTING_CITY = \"TESTING_CITY\"\nexport const TESTING_FIND_BY_CODE = \"TESTING_FIND_BY_CODE\";\n\nexport const DIAGRAM_FAIL = \"DIAGRAM_FAIL\";\nexport const DIAGRAM_SUCCESS = \"DIAGRAM_SUCCESS\";\n","import axios from \"axios\";\nimport baseUrl from \"./../baseurl\";\n\nconst host = baseUrl()\nconst API_URL = `${host}/api/auth/`;\n\nclass AuthService {\n  // login(email, password) {\n  //   return axios\n  //     .post(API_URL + \"signin\", {\n  //       email,\n  //       password\n  //     })\n  //     .then(response => {\n  //       if (response.data.accessToken) {\n  //         localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //       }\n  //\n  //       return response.data;\n  //     });\n  // }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(values) {\n    return axios.post(API_URL + \"signup\", {\n      username: values.username,\n      appointment: values.appointment,\n      password: values.password,\n      city: values.city\n    });\n  }\n\n  changePassword(values) {\n    return axios.post(API_URL + \"change-password\", {\n      username: values.username,\n      password: values.password,\n    });\n  }\n\n  changeCity(values) {\n    return axios.post(API_URL + \"change-city\", {\n      username: values.username,\n      city: values.city,\n    });\n  }\n\n  changeRole(values) {\n    return axios.post(API_URL + \"change-role\", {\n      userId: values.userId,\n      roleId: values.roleId,\n    });\n  }\n\n  changeSubdivisions(values) {\n    return axios.post(API_URL + \"change-subdivision\", {\n      userId: values.userId,\n      subdivisionsId: values.subdivisionsId,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import { createSlice } from '@reduxjs/toolkit'\nimport { START } from \"../../constants/others.constants\";\n\nconst APP_REDUCER_NAME = 'filter'\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: {\n        usedDrugs: false,\n        usedPrep: false,\n        sexWorked: false,\n        rangePeriod: null,\n        city: null,\n        findByCode: null,\n        searchOfCode: null,\n        formType: null\n    },\n    reducers: {\n        findByCode(state, action) {\n            state.findByCode = action.payload\n        },\n        setTestingDrugUsed(state, action) {\n            state.usedDrugs = action.payload\n        },\n        setTestingPrepUsed(state, action) {\n            state.usedPrep = action.payload\n        },\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        setTestingSexWorked(state, action) {\n            state.sexWorked = action.payload\n        },\n        setSearchOfCode(state, action) {\n            state.searchOfCode = action.payload\n        },\n        setFormType(state, action) {\n            state.formType = action.payload\n        },\n    }\n})\n\nexport const {\n    findByCode,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked,\n    setRangePeriod,\n    setTestingCity,\n    setSearchOfCode,\n    setFormType\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","import baseUrl from \"../baseurl\";\n\nconst host = baseUrl()\n\nconst API_URL = `${host}/api`;\n\nexport const API_FETCH_LOAD_FILES = `${API_URL}/upload`\n\nexport const API_VIDEO_FIRST_LIST = `${API_URL}/video/first-list`\nexport const API_FETCH_OFFSET_VIDOES = `${API_URL}/video/offset`\nexport const API_FETCH_UP_VIDEO_COUNT = `${API_URL}/video/count`\nexport const API_FETCH_VOTE_VIDEO = `${API_URL}/video/vote`\nexport const API_UPLOAD_VIDEO = `${API_URL}/upload/video`\nexport const API_CREATE_VIDEO = `${API_URL}/video/create`\n\nexport const API_AUTH_SIGNIN = `${API_URL}/auth/signin`\nexport const API_ALL_USERS = `${API_URL}/user/all-users-data`\nexport const API_ALL_ROLES = `${API_URL}/user/all-roles-data`\n\nexport const API_ROLES = `${API_URL}/roles`\nexport const API_SUBDIVISIONS = `${API_URL}/subdivisions`","const baseUrl = () => {\n    switch (process.env.NODE_ENV) {\n        case \"development\": return 'http://localhost:5101'\n        default: return 'https://reports.spid.center'\n    }\n}\n\nexport default baseUrl;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nexport const WelcomeCard = props => {\n    const classes = useStyles();\n    return (\n        <Link to={`/video/${props.video.folder}`}>\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <CardMedia\n                        className={classes.media}\n                        image={`http://localhost:5001/public/videos/${props.video.folder}/preview.jpg`}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {props.video.title} – {props.video.id}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Link>\n    );\n}\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { WelcomeCard } from \"./WelcomeCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nexport const WelcomeGrid = props => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {props.videos.map((video, index) => <Grid key={video.folder + index} item xs={6} sm={3}>\n                    <WelcomeCard video={video}/>\n                </Grid>)}\n            </Grid>\n        </div>\n    );\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst VIDEO_REDUCER_NAME = 'video'\n\nconst videoSlice = createSlice({\n    name: VIDEO_REDUCER_NAME,\n    initialState: {\n        videos: null,\n        count: null,\n        loading: false,\n        single: null\n    },\n    reducers: {\n        setVideos(state, action) {\n            state.videos = action.payload.videos\n        },\n        setFirstVideos(state, action) {\n            state.videos = action.payload.videos\n            state.count = action.payload.count\n            state.loading = false\n        },\n        isLoading(state, action) {\n            state.loading = action.payload\n        },\n        setSingleVideo(state, action) {\n            state.single = action.payload\n            state.loading = false\n        }\n    }\n})\n\nexport const {\n    setVideos,\n    setFirstVideos,\n    isLoading,\n    setSingleVideo\n} = videoSlice.actions\n\nexport default videoSlice.reducer\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux'\nimport { WelcomeGrid } from './WelcomeGrid'\nimport { Pagination } from \"antd\";\nimport { fetchFirstToStore, fetchOffsetToStore } from \"../../redux/thunks/video.thunks\";\n\nconst Welcome = props => {\n\n    useEffect(() => {\n        if (!props.loading && !props.videos) {\n            props.fetchFirst()\n        }\n    }, [props])\n\n    const onChangePagination = (page, pageSize) => {\n        props.fetchOffset({\n            offset: page - 1,\n            limit: pageSize\n        })\n    }\n\n    return (\n        props.videos ? <>\n            <WelcomeGrid videos={props.videos}/>\n            <Pagination\n                onChange={onChangePagination}\n                total={props.count}\n                showTotal={(total, range) => `${range[0]}-${range[1]} из ${total} видео`}\n                defaultPageSize={10}\n                defaultCurrent={1}\n            />\n        </> : null\n    );\n}\n\nconst mapStateToProps = state => ({\n    videos: state.video.videos,\n    count: state.video.count,\n    loading: state.video.loading\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchFirst: () => dispatch(fetchFirstToStore()),\n    fetchOffset: (data) => dispatch(fetchOffsetToStore(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome)","import axios from 'axios'\nimport {\n    API_CREATE_VIDEO,\n    API_FETCH_OFFSET_VIDOES,\n    API_FETCH_UP_VIDEO_COUNT,\n    API_VIDEO_FIRST_LIST,\n    API_FETCH_VOTE_VIDEO\n} from \"../../constants/api.constants\";\nimport authHeader from \"../../services/auth-header\";\nimport { setVideos, setFirstVideos, isLoading, setSingleVideo } from \"../reducers/video.reducer\";\n\nexport const createVideoThunks = data => async () => {\n    const response = await axios.post(API_CREATE_VIDEO, data, { headers: authHeader() })\n    return response.data;\n}\n\nexport const fetchFirstToStore = () => async dispatch => {\n    dispatch(isLoading(true));\n    const response = await axios.post(API_VIDEO_FIRST_LIST)\n    return dispatch(setFirstVideos(response.data));\n}\n\nexport const fetchOffsetToStore = data => async dispatch => {\n    const response = await axios.post(API_FETCH_OFFSET_VIDOES, data)\n    return dispatch(setVideos(response.data));\n}\n\nexport const fetchUpVideoCount = data => async dispatch => {\n    dispatch(isLoading(true));\n    const response = await axios.post(API_FETCH_UP_VIDEO_COUNT, data)\n    dispatch(setSingleVideo(response.data))\n\n}\n\nexport const fetchVoteVideo = data => async dispatch => {\n    const response = await axios.post(API_FETCH_VOTE_VIDEO, data)\n    console.log(data)\n    return dispatch(setVideos(response.data.video))\n}","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport { ADMIN, MODERATOR, USER } from \"../constants/roles.constants\";\nimport { connect } from \"react-redux\";\nimport { setRole } from \"../redux/thunks/user.thunks\";\nimport Welcome from \"../components/Welcome\";\n\nexport default function useAuth(WrappedComponent, role) {\n    class Authenticate extends React.Component {\n\n        getUser = () => JSON.parse(localStorage.getItem('user'));\n\n        componentDidMount() {\n            switch (role) {\n                case ADMIN:\n                    return UserService.getAdminBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: ADMIN\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case MODERATOR:\n                    return UserService.getModeratorBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: MODERATOR\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case USER:\n                    return UserService.getUserBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: USER\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                default:\n                    this.props.setRole({\n                        isAuthenticated: false,\n                        role: 'Role not found'\n                    })\n            }\n        }\n\n        render() {\n            return (\n                this.props.isAuthenticated !== null ? this.props.isAuthenticated ?\n                    <WrappedComponent {...this.props} /> : <Redirect to={'/'}/> : null\n            );\n        }\n    }\n\n    const mapState = state => ({\n        isAuthenticated: state.user.isAuthenticated,\n        role: state.user.role\n    })\n\n    const mapDuspatch = dispatch => ({\n        setRole: e => dispatch(setRole(e))\n    })\n\n    return connect(mapState, mapDuspatch)(Authenticate)\n}\n\n"],"sourceRoot":""}