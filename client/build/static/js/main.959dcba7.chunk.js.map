{"version":3,"sources":["components/all-forms/slyles.module.scss","components/diagrams/styles.module.scss","components/reports/testing/styles.module.scss","components/filters/styles.module.scss","components/all-forms/test.jpeg","components/Forms/testing/images/pride.jpeg","components/Forms/testing/images/no-pride.jpg","images/logo-white.svg","images/logo-black.svg","components/Header/styles.module.scss","components/all-forms/all-forms.js","services/auth-header.js","baseurl.js","services/user.service.js","redux/reducers/user.reducer.js","constants/api.constants.js","redux/thunks/user.thunks.js","components/Welcome/WelcomeCard.jsx","components/Welcome/WelcomeGrid.jsx","redux/reducers/video.reducer.js","components/Welcome/index.jsx","redux/thunks/video.thunks.js","hooks/useAuth.js","constants/roles.constants.js","constants/others.constants.js","redux/reducers/filter.reducer.js","services/form.service.js","redux/thunks/forms.js","redux/thunks/types.js","components/Forms/testing/TestingForm.jsx","services/auth.service.js","components/Forms/Login.jsx","components/Header/Header.jsx","components/Layouts/Default.jsx","components/Profile.jsx","components/Board-user.jsx","services/diagram.service.js","components/diagrams/pie.js","components/diagrams/bar.js","components/filters/filters.js","components/reports/testing/TestingReport.jsx","redux/thunks/diagrams.js","components/Forms/Register.jsx","components/admin/user-management/index.jsx","components/Board-moderator.jsx","components/Board-admin.jsx","App.jsx","serviceWorker.js","redux/reducers/app.reducer.js","redux/reducer.js","redux/store.js","index.js","components/Forms/testing/styles.module.scss"],"names":["module","exports","AllForms","console","log","className","styles","to","style","textDecoration","card","image","backgroundImage","test","title","disabled","authHeader","user","JSON","parse","localStorage","getItem","accessToken","baseUrl","host","API_URL","axios","get","headers","catch","userSlice","createSlice","name","initialState","userData","isAuthenticated","role","reducers","fetchRole","state","action","payload","actions","API_VIDEO_FIRST_LIST","API_FETCH_OFFSET_VIDOES","API_AUTH_SIGNIN","API_ALL_USERS","API_ALL_ROLES","API_ROLES","API_SUBDIVISIONS","fetchLoginForm","a","username","password","post","then","response","data","setItem","stringify","appointment","city","id","roles","findAllUsers","findAllRoles","findRoles","findSubdivisions","useStyles","makeStyles","root","maxWidth","media","height","WelcomeCard","props","classes","video","folder","Card","CardActionArea","CardMedia","CardContent","Typography","variant","color","component","theme","createStyles","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","WelcomeGrid","Grid","container","videos","map","index","key","item","xs","sm","videoSlice","count","loading","single","setVideos","setFirstVideos","isLoading","setSingleVideo","connect","dispatch","fetchFirst","fetchOffset","fetchOffsetToStore","useEffect","onChange","page","pageSize","offset","limit","total","showTotal","range","defaultPageSize","defaultCurrent","useAuth","WrappedComponent","Authenticate","getUser","UserService","getAdminBoard","setRole","getModeratorBoard","getUserBoard","this","React","Component","e","filterSlice","usedDrugs","usedPrep","sexWorked","rangePeriod","findByCode","searchOfCode","formType","setTestingDrugUsed","setTestingPrepUsed","setRangePeriod","setTestingCity","setTestingSexWorked","setSearchOfCode","setFormType","baseurl","fields","filters","testing","FormService","type","message","Promise","resolve","error","toString","reject","findTesting","TabPane","Select","Option","Tabs","pastTests","filter","code","useState","expanded","setExpanded","now","setNow","submitting","setSubmitting","setSuccessful","useDispatch","history","useHistory","Form","useForm","form","initialValues","resetFields","onFinish","values","stateForm","Object","createOtherFields","length","format","moment","removeItem","push","success","CodeInput","mask","placeholder","isRevealingMask","size","formatCharacters","validate","transform","char","toUpperCase","onChangeCode","event","value","target","setFieldsValue","valueClean","replace","resetForm","onClick","window","location","reload","pride","noPride","titleContainer","line","h1","required","href","layout","onValuesChange","getFieldsValue","tabs","defaultActiveKey","tab","Item","label","rules","i","showIcon","description","sort","b","Group","option","checked","htmlFor","showTime","TextArea","htmlType","Login","handleLogin","bind","onChangeEmail","onChangePassword","email","setState","preventDefault","validateAll","checkBtn","context","_errors","resMessage","src","alt","onSubmit","ref","c","validations","display","Header","children","Default","currentUser","Chart","register","registerables","createData","keyValue","multiplicity","hash","v","valueParse","parseInt","match","Math","ceil","createMultiplicityValue","obj","forEach","res","keys","assign","find","labels","datasets","backgroundColor","datalabels","anchor","plugins","ChartDataLabels","options","dataset","borderColor","borderRadius","borderWidth","dataIndex","formatter","ctx","sum","reduce","previousValue","currentValue","toFixed","font","weight","legend","position","aspectRatio","cutoutPercentage","elements","fill","point","hoverRadius","radius","PieDiagram","chartContainer","useRef","chartInstance","setChartInstance","autoUpdate","setAutoUpdate","setMultiplicity","updateDataset","useCallback","update","current","newChartInstance","showSelectorWithRounding","Button","arrayType","rounding","itemsArrayType","split","aa","trim","includes","round","floor","singleValuesLabels","indexAxis","responsive","scaleShowValues","scales","y","ticks","autoSkip","fontSize","max","stepSize","top","left","right","bottom","align","BarDiagram","setRounding","Search","Input","RangePicker","DatePicker","periodType","setDrugUsed","used","setPrepUsed","setSexWorked","period","setCity","firstLine","locale","groups","width","defaultValue","onClear","optionFilterProp","filterOption","input","toLowerCase","indexOf","secondLine","onSearch","allowClear","enterButton","Panel","Collapse","TestingReport","selectorFiltersTesting","useSelector","setTesting","columnsForm","setColumnsForm","rangePeriodStart","rangePeriodEnd","searchByCode","DiagramService","findDiagram","columns","column","order","comments","undefined","subTitle","header","dataSource","bordered","scroll","x","tableLayout","pagination","Register","remember","AuthService","onFinishFailed","errorInfo","autoComplete","Password","UserManagement","users","setUsers","setRoles","subdivisions","setSubdivisions","isModalVisible","setIsModalVisible","cities","dataUsers","dataRoles","roleId","userId","subdivisionId","handleChangeRole","fixed","render","mode","subdivision","ghost","danger","extra","visible","onCancel","footer","Content","Layout","Sider","setTab","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","onSelect","defaultSelectedKeys","icon","UserOutlined","margin","setComponent","App","logOut","showModeratorBoard","showAdminBoard","readyToRedirect","getCurrentUser","prevProps","prevState","snapshot","logout","logoWhite","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","exact","path","Profile","TestingForm","BoardUser","BoardModerator","AdminPanel","logoBlack","withRouter","Boolean","hostname","appSlice","loaded","create","files","metro","typeOfApplicant","setLoadedFiles","resetFiles","setMetroStation","setLoading","setOneUserData","combineReducers","app","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","enhancers","reduxBatch","Sentry","dsn","ReactDOM","Fragment","accounts","clickmap","webvisor","version","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.959dcba7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-forms\":\"slyles_all-forms__1Uiq4\",\"link\":\"slyles_link__35xrf\",\"card\":\"slyles_card__1pu6e\",\"title\":\"slyles_title__3zA94\",\"image\":\"slyles_image__1ACh0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3BziL\",\"pie\":\"styles_pie__2SD_O\",\"title\":\"styles_title___y4nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__jZ6X4\",\"tabs\":\"styles_tabs__2Mm4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"styles_filters__1HMjR\",\"firstLine\":\"styles_firstLine__wavmH\",\"secondLine\":\"styles_secondLine__1vFlW\",\"groups\":\"styles_groups__Orx8P\"};","module.exports = __webpack_public_path__ + \"static/media/test.10fd7227.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pride.b8f79617.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/no-pride.0bdbc73e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.bff383bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.cae10ea2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"styles_Header__2KoFd\"};","import React from \"react\";\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport test from './test.jpeg'\nimport styles from './slyles.module.scss'\n\nconst AllForms = () => {\n    console.log('test', )\n    return (\n        <div className={styles[\"all-forms\"]}>\n            <br/>\n            <h4>Формы и опросы</h4>\n\n            <NavLink to=\"/testing\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    <div className={styles.image} style={{backgroundImage: `url(${test})`}}/>\n                    <p className={styles.title}>Опрос тестируемых «СПИД.ЦЕНТР»</p>\n                </div>\n            </NavLink>\n\n            <br/>\n            Находятся в разработке\n\n            <NavLink disabled to=\"/groups\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    Группы поддержки\n                </div>\n            </NavLink>\n\n            <NavLink disabled to=\"/hot-line\" style={{ textDecoration: 'none' }}>\n                <div className={styles.card}>\n                    Горячая линия «СПИД.ЦЕНТР»\n                </div>\n            </NavLink>\n\n        </div>\n    );\n};\n\nexport default AllForms;\n","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        return {'x-access-token': user.accessToken};\n    } else {\n        return {};\n    }\n}\n","const baseUrl = () => {\n    switch (process.env.NODE_ENV) {\n        case \"development\": return 'http://localhost:5101'\n        default: return 'https://reports.spid.center'\n    }\n}\n\nexport default baseUrl;","import axios from 'axios';\nimport authHeader from './auth-header';\nimport baseUrl from '../baseurl';\n\nconst host = baseUrl()\n\nconst API_URL = `${host}/api/test/`;\n\nclass UserService {\n    getPublicContent() {\n        return axios.get(API_URL + 'all');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL + 'user', {headers: authHeader()});\n    }\n\n    getModeratorBoard() {\n        return axios.get(API_URL + 'mod', {headers: authHeader()})\n            .catch(() => {\n                return axios.get(API_URL + 'admin', {headers: authHeader()});\n            });\n    }\n\n    getAdminBoard() {\n        return axios.get(API_URL + 'admin', {headers: authHeader()});\n    }\n}\n\nexport default new UserService();\n","import {createSlice} from '@reduxjs/toolkit'\n\nconst TODOS_REDUCER_NAME = 'user'\n\nconst userSlice = createSlice({\n    name: TODOS_REDUCER_NAME,\n    initialState: {\n        userData: null,\n        isAuthenticated: null,\n        role: null\n    },\n    reducers: {\n        fetchRole(state, action) {\n            state.userData = action.payload.userData\n            state.isAuthenticated = action.payload.isAuthenticated\n            state.role = action.payload.role\n        },\n    }\n})\n\nexport const {\n    fetchRole,\n} = userSlice.actions\n\nexport default userSlice.reducer\n","import baseUrl from \"../baseurl\";\n\nconst host = baseUrl()\n\nconst API_URL = `${host}/api`;\n\nexport const API_FETCH_LOAD_FILES = `${API_URL}/upload`\n\nexport const API_VIDEO_FIRST_LIST = `${API_URL}/video/first-list`\nexport const API_FETCH_OFFSET_VIDOES = `${API_URL}/video/offset`\nexport const API_FETCH_UP_VIDEO_COUNT = `${API_URL}/video/count`\nexport const API_FETCH_VOTE_VIDEO = `${API_URL}/video/vote`\nexport const API_UPLOAD_VIDEO = `${API_URL}/upload/video`\nexport const API_CREATE_VIDEO = `${API_URL}/video/create`\n\nexport const API_AUTH_SIGNIN = `${API_URL}/auth/signin`\nexport const API_ALL_USERS = `${API_URL}/user/all-users-data`\nexport const API_ALL_ROLES = `${API_URL}/user/all-roles-data`\n\nexport const API_ROLES = `${API_URL}/roles`\nexport const API_SUBDIVISIONS = `${API_URL}/subdivisions`","import { fetchRole } from \"../reducers/user.reducer\";\nimport axios from \"axios\";\nimport { API_AUTH_SIGNIN, API_ALL_USERS, API_ALL_ROLES, API_ROLES, API_SUBDIVISIONS } from \"../../constants/api.constants\";\nimport authHeader from \"../../services/auth-header\";\n\nexport const setRole = data => async dispatch => {\n    dispatch(fetchRole(data))\n}\n\nexport const fetchLoginForm = async ({ username, password }) => {\n\n    return axios.post(API_AUTH_SIGNIN, { username, password })\n        .then(response => {\n            if (response.data.accessToken) {\n\n                localStorage.setItem(\"user\", JSON.stringify({\n                    accessToken: response.data.accessToken,\n                    appointment: response.data.appointment,\n                    city: response.data.city,\n                    id: response.data.id,\n                    roles: response.data.roles,\n                    username: response.data.username\n                }));\n\n                return response.data;\n            }\n        });\n}\n\nexport const findAllUsers = async () => {\n    return axios.post(API_ALL_USERS, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findAllRoles = async () => {\n    return axios.post(API_ALL_ROLES, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findRoles = async () => {\n    return axios.post(API_ROLES, {}, { headers: authHeader() }).then(response => response)\n}\n\nexport const findSubdivisions = async () => {\n    return axios.post(API_SUBDIVISIONS, {}, { headers: authHeader() }).then(response => response)\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nexport const WelcomeCard = props => {\n    const classes = useStyles();\n    return (\n        <Link to={`/video/${props.video.folder}`}>\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <CardMedia\n                        className={classes.media}\n                        image={`http://localhost:5001/public/videos/${props.video.folder}/preview.jpg`}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {props.video.title} – {props.video.id}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Link>\n    );\n}\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { WelcomeCard } from \"./WelcomeCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nexport const WelcomeGrid = props => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {props.videos.map((video, index) => <Grid key={video.folder + index} item xs={6} sm={3}>\n                    <WelcomeCard video={video}/>\n                </Grid>)}\n            </Grid>\n        </div>\n    );\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst VIDEO_REDUCER_NAME = 'video'\n\nconst videoSlice = createSlice({\n    name: VIDEO_REDUCER_NAME,\n    initialState: {\n        videos: null,\n        count: null,\n        loading: false,\n        single: null\n    },\n    reducers: {\n        setVideos(state, action) {\n            state.videos = action.payload.videos\n        },\n        setFirstVideos(state, action) {\n            state.videos = action.payload.videos\n            state.count = action.payload.count\n            state.loading = false\n        },\n        isLoading(state, action) {\n            state.loading = action.payload\n        },\n        setSingleVideo(state, action) {\n            state.single = action.payload\n            state.loading = false\n        }\n    }\n})\n\nexport const {\n    setVideos,\n    setFirstVideos,\n    isLoading,\n    setSingleVideo\n} = videoSlice.actions\n\nexport default videoSlice.reducer\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux'\nimport { WelcomeGrid } from './WelcomeGrid'\nimport { Pagination } from \"antd\";\nimport { fetchFirstToStore, fetchOffsetToStore } from \"../../redux/thunks/video.thunks\";\n\nconst Welcome = props => {\n\n    useEffect(() => {\n        if (!props.loading && !props.videos) {\n            props.fetchFirst()\n        }\n    }, [props])\n\n    const onChangePagination = (page, pageSize) => {\n        props.fetchOffset({\n            offset: page - 1,\n            limit: pageSize\n        })\n    }\n\n    return (\n        props.videos ? <>\n            <WelcomeGrid videos={props.videos}/>\n            <Pagination\n                onChange={onChangePagination}\n                total={props.count}\n                showTotal={(total, range) => `${range[0]}-${range[1]} из ${total} видео`}\n                defaultPageSize={10}\n                defaultCurrent={1}\n            />\n        </> : null\n    );\n}\n\nconst mapStateToProps = state => ({\n    videos: state.video.videos,\n    count: state.video.count,\n    loading: state.video.loading\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchFirst: () => dispatch(fetchFirstToStore()),\n    fetchOffset: (data) => dispatch(fetchOffsetToStore(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome)","import axios from 'axios'\nimport {\n    API_CREATE_VIDEO,\n    API_FETCH_OFFSET_VIDOES,\n    API_FETCH_UP_VIDEO_COUNT,\n    API_VIDEO_FIRST_LIST,\n    API_FETCH_VOTE_VIDEO\n} from \"../../constants/api.constants\";\nimport authHeader from \"../../services/auth-header\";\nimport { setVideos, setFirstVideos, isLoading, setSingleVideo } from \"../reducers/video.reducer\";\n\nexport const createVideoThunks = data => async () => {\n    const response = await axios.post(API_CREATE_VIDEO, data, { headers: authHeader() })\n    return response.data;\n}\n\nexport const fetchFirstToStore = () => async dispatch => {\n    dispatch(isLoading(true));\n    const response = await axios.post(API_VIDEO_FIRST_LIST)\n    return dispatch(setFirstVideos(response.data));\n}\n\nexport const fetchOffsetToStore = data => async dispatch => {\n    const response = await axios.post(API_FETCH_OFFSET_VIDOES, data)\n    return dispatch(setVideos(response.data));\n}\n\nexport const fetchUpVideoCount = data => async dispatch => {\n    dispatch(isLoading(true));\n    const response = await axios.post(API_FETCH_UP_VIDEO_COUNT, data)\n    dispatch(setSingleVideo(response.data))\n\n}\n\nexport const fetchVoteVideo = data => async dispatch => {\n    const response = await axios.post(API_FETCH_VOTE_VIDEO, data)\n    console.log(data)\n    return dispatch(setVideos(response.data.video))\n}","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport { ADMIN, MODERATOR, USER } from \"../constants/roles.constants\";\nimport { connect } from \"react-redux\";\nimport { setRole } from \"../redux/thunks/user.thunks\";\nimport Welcome from \"../components/Welcome\";\n\nexport default function useAuth(WrappedComponent, role) {\n    class Authenticate extends React.Component {\n\n        getUser = () => JSON.parse(localStorage.getItem('user'));\n\n        componentDidMount() {\n            switch (role) {\n                case ADMIN:\n                    return UserService.getAdminBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: ADMIN\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case MODERATOR:\n                    return UserService.getModeratorBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: MODERATOR\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                case USER:\n                    return UserService.getUserBoard().then(() => {\n                            this.props.setRole({\n                                userData: this.getUser(),\n                                isAuthenticated: true,\n                                role: USER\n                            })\n                        }\n                    ).catch(() => {\n                        this.props.setRole({\n                            isAuthenticated: false,\n                            role: null\n                        })\n                    });\n                default:\n                    this.props.setRole({\n                        isAuthenticated: false,\n                        role: 'Role not found'\n                    })\n            }\n        }\n\n        render() {\n            return (\n                this.props.isAuthenticated !== null ? this.props.isAuthenticated ?\n                    <WrappedComponent {...this.props} /> : <Redirect to={'/'}/> : null\n            );\n        }\n    }\n\n    const mapState = state => ({\n        isAuthenticated: state.user.isAuthenticated,\n        role: state.user.role\n    })\n\n    const mapDuspatch = dispatch => ({\n        setRole: e => dispatch(setRole(e))\n    })\n\n    return connect(mapState, mapDuspatch)(Authenticate)\n}\n\n","export const ADMIN = 'admin'\nexport const MODERATOR = 'mod'\nexport const USER = 'user'","export const START = 'start'\nexport const FINISH = 'finish'","import { createSlice } from '@reduxjs/toolkit'\nimport { START } from \"../../constants/others.constants\";\n\nconst APP_REDUCER_NAME = 'filter'\n\nconst filterSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: {\n        usedDrugs: false,\n        usedPrep: false,\n        sexWorked: false,\n        rangePeriod: null,\n        city: null,\n        findByCode: null,\n        searchOfCode: null,\n        formType: null\n    },\n    reducers: {\n        findByCode(state, action) {\n            state.findByCode = action.payload\n        },\n        setTestingDrugUsed(state, action) {\n            state.usedDrugs = action.payload\n        },\n        setTestingPrepUsed(state, action) {\n            state.usedPrep = action.payload\n        },\n        setRangePeriod(state, action) {\n            state.rangePeriod = action.payload\n        },\n        setTestingCity(state, action) {\n            state.city = action.payload\n        },\n        setTestingSexWorked(state, action) {\n            state.sexWorked = action.payload\n        },\n        setSearchOfCode(state, action) {\n            state.searchOfCode = action.payload\n        },\n        setFormType(state, action) {\n            state.formType = action.payload\n        },\n    }\n})\n\nexport const {\n    findByCode,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked,\n    setRangePeriod,\n    setTestingCity,\n    setSearchOfCode,\n    setFormType\n} = filterSlice.actions\n\nexport default filterSlice.reducer\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/form/`;\n\nconst testing = (fields) => {\n    return axios.post(API_URL + \"testing\", {\n        ...fields,\n    }, { headers: authHeader() });\n};\n\nconst findTesting = (filters = {}) => {\n    return axios.post(API_URL + \"find/testing\", filters, { headers: authHeader() });\n};\n\nexport default {\n    testing,\n    findTesting\n};\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    SET_MESSAGE,\n} from \"./types\";\nimport FormService from \"./../../services/form.service\";\n\nexport const testing = (fields) => (dispatch) => {\n    return FormService.testing(fields).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve();\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const findTesting = (filters) => (dispatch) => {\n    return FormService.findTesting(filters).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_ROLE = \"FETCH_ROLE\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const TESTING_SET_DRUG_USED = \"TESTING_SET_DRUG_USED\"\nexport const TESTING_SET_SEX_WORKED = \"TESTING_SET_SEX_WORKED\"\nexport const TESTING_SET_PREP_USED = \"TESTING_SET_PREP_USED\"\nexport const TESTING_SET_RANGE_PERIOD = \"TESTING_SET_RANGE_PERIOD\"\nexport const TESTING_CITY = \"TESTING_CITY\"\nexport const TESTING_FIND_BY_CODE = \"TESTING_FIND_BY_CODE\";\n\nexport const DIAGRAM_FAIL = \"DIAGRAM_FAIL\";\nexport const DIAGRAM_SUCCESS = \"DIAGRAM_SUCCESS\";\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport MaskedInput from 'antd-mask-input'\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport moment from 'moment'\nimport {\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    Radio,\n    DatePicker,\n    Tabs,\n    Switch,\n    Select,\n    message,\n    Tag,\n    Alert\n} from 'antd';\nimport { ADMIN, MODERATOR, USER } from \"../../../constants/roles.constants\";\nimport useAuth from \"../../../hooks/useAuth\";\n// import { findByCode } from \"../../../actions/filter-testing\";\n// import { findTesting, testing } from \"../../../actions/forms\";\nimport { findByCode } from \"../../../redux/reducers/filter.reducer\";\nimport { findTesting, testing } from \"../../../redux/thunks/forms\";\nimport pride from './images/pride.jpeg'\nimport noPride from './images/no-pride.jpg'\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nconst TestingForm = ({ pastTests }) => {\n    const [expanded, setExpanded] = useState(true)\n    const [now, setNow] = useState(true)\n    const [submitting, setSubmitting] = useState(false)\n    const [successful, setSuccessful] = useState(false);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [form] = Form.useForm();\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    let initialValues = {}\n\n\n    useEffect(() => form.resetFields(), [form, initialValues, submitting]);\n\n    if (localStorage.getItem('TESTING_FORM')) {\n        initialValues = {\n            ...JSON.parse(localStorage.getItem('TESTING_FORM')),\n            ...initialValues\n        }\n    }\n\n    const resetForm = () => {\n        console.log('resetForm')\n        localStorage.removeItem(\"TESTING_FORM\")\n        initialValues = {}\n        message.success('Поля формы сброшены')\n        window.location.reload();\n        return form.resetFields()\n    }\n\n    const onFormLayoutChange = (values) => {\n\n        if (values[\"date\"] || values[\"time\"]) {\n            return\n        }\n\n        localStorage.setItem(\"TESTING_FORM\", JSON.stringify(form.getFieldsValue()))\n    };\n\n    const onFinish = async (values) => {\n        console.log('values', values)\n\n        const stateForm = new Object({\n            \"1_code\": values[\"1_code\"],\n            \"3_gender\": values[\"3_gender\"],\n            \"4_age\": values[\"4_age\"],\n            \"7_constant_sexual_partner\": values[\"7_constant_sexual_partner\"],\n            \"8_sex_using_a_condom\": values[\"8_sex_using_a_condom\"],\n            \"9_condom_for_sex_with_a_permanent\": values[\"9_condom_for_sex_with_a_permanent\"],\n            \"10_condom_for_sex_with_a_club\": values[\"10_condom_for_sex_with_a_club\"],\n            \"11_condom_for_last_sex\": values[\"11_condom_for_last_sex\"],\n            \"12_using_condom\": values[\"12_using_condom\"] ? values[\"12_using_condom\"].toString() : null,\n            \"14_now_there_is_a_condom\": values[\"14_now_there_is_a_condom\"],\n            \"15_with_whom_sex\": values[\"15_with_whom_sex\"] ? values[\"15_with_whom_sex\"].toString() : null,\n            \"17_drugs_for_sex\": values[\"17_drugs_for_sex\"],\n            \"18_drugs_or_money_in_exchange_for_sex\": values[\"18_drugs_or_money_in_exchange_for_sex\"],\n            \"19_sexually_transmitted_diseases\": values[\"19_sexually_transmitted_diseases\"],\n            \"20_med_sexually_transmitted_diseases\": values[\"20_med_sexually_transmitted_diseases\"],\n            \"22_diagnosed_with_syphilis\": values[\"22_diagnosed_with_syphilis\"],\n            \"23_hiv_tested\": values[\"23_hiv_tested\"],\n            \"24_how_often_hiv_tested\": values[\"24_how_often_hiv_tested\"],\n            \"25_do_you_know_your_hiv_status\": values[\"25_do_you_know_your_hiv_status\"],\n            \"26_you_are_a_citizen_of_russia\": values[\"26_you_are_a_citizen_of_russia\"],\n            \"28_you_education\": values[\"28_you_education\"],\n            \"29_the_nature_of_your_work\": values[\"29_the_nature_of_your_work\"],\n            \"30_marital_status\": values[\"30_marital_status\"],\n            \"31_you_are_a_listen_PrEP\": values[\"31_you_are_a_listen_PrEP\"],\n            \"32_you_are_a_interest_PrEP\": values[\"32_you_are_a_interest_PrEP\"],\n            \"33_you_are_a_used_PrEP\": values[\"33_you_are_a_used_PrEP\"],\n            \"35_you_have_started_taking_prep\": values[\"35_you_have_started_taking_prep\"],\n            \"36_hiv_test_result\": values[\"36_hiv_test_result\"],\n            \"37_hepatitis_test_result\": values[\"37_hepatitis_test_result\"],\n            \"38_syphilis_test_result\": values[\"38_syphilis_test_result\"],\n            \"39_consulting_on_regular_testing_provided\": values[\"39_consulting_on_regular_testing_provided\"] ? values[\"39_consulting_on_regular_testing_provided\"][0] : null,\n            \"40_prevention_counseling_provided\": values[\"40_prevention_counseling_provided\"] ? values[\"40_prevention_counseling_provided\"][0] : null,\n            \"41_provided_counseling_on_receiving_treatment_for_hiv\": values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"] ? values[\"41_provided_counseling_on_receiving_treatment_for_hiv\"][0] : null,\n            \"42_consultant\": user.username,\n            \"45_consultant_comment\": values[\"45_consultant_comment\"],\n            \"46_city\": user.city,\n            \"47_type_form\": expanded ? \"expanded\" : \"short\",\n        })\n\n        const createOtherFields = () => {\n\n            // \"2_how_did_you_know\": [...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"]],\n            if (values[\"2_1_how_did_you_know\"]?.length && values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [...values[\"2_1_how_did_you_know\"], values[\"2_2_how_did_you_know\"]].toString()\n            } else if (values[\"2_1_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = values[\"2_1_how_did_you_know\"].toString()\n            } else if (values[\"2_2_how_did_you_know\"]?.length) {\n                stateForm[\"2_how_did_you_know\"] = [values[\"2_2_how_did_you_know\"]].toString()\n            } else {\n                stateForm[\"2_how_did_you_know\"] = null\n            }\n\n            // \"5_first_sex\": [...values[\"5_1_first_sex\"], values[\"5_2_first_sex\"]],\n            if (values[\"5_2_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_2_first_sex\"][0]\n            } else if (values[\"5_1_first_sex\"]?.length) {\n                stateForm[\"5_first_sex\"] = values[\"5_1_first_sex\"]\n            } else {\n                stateForm[\"5_first_sex\"] = null\n            }\n\n            // \"6_sexual_partners_from_6_months\": [...values[\"6_1_sexual_partners_from_6_months\"], values[\"6_2_sexual_partners_from_6_months\"]],\n            if (values[\"6_2_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_2_sexual_partners_from_6_months\"][0]\n            } else if (values[\"6_1_sexual_partners_from_6_months\"]?.length) {\n                stateForm[\"6_sexual_partners_from_6_months\"] = values[\"6_1_sexual_partners_from_6_months\"]\n            } else {\n                stateForm[\"6_sexual_partners_from_6_months\"] = null\n            }\n\n            // \"13_no_using_condom\": [...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"]],\n            if (values[\"13_1_no_using_condom\"]?.length && values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [...values[\"13_1_no_using_condom\"], values[\"13_2_no_using_condom\"]].toString()\n            } else if (values[\"13_1_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = values[\"13_1_no_using_condom\"].toString()\n            } else if (values[\"13_2_no_using_condom\"]?.length) {\n                stateForm[\"13_no_using_condom\"] = [values[\"13_2_no_using_condom\"]].toString()\n            } else {\n                stateForm[\"13_no_using_condom\"] = null\n            }\n\n            // \"16_used_drugs\": [...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"]],\n            if (values[\"16_1_used_drugs\"]?.length && values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [...values[\"16_1_used_drugs\"], values[\"16_2_used_drugs\"]].toString()\n            } else if (values[\"16_1_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = values[\"16_1_used_drugs\"].toString()\n            } else if (values[\"16_2_used_drugs\"]?.length) {\n                stateForm[\"16_used_drugs\"] = [values[\"16_2_used_drugs\"]].toString()\n            } else {\n                stateForm[\"16_used_drugs\"] = null\n            }\n\n            // \"21_used_drugs\": [...values[\"21_1_used_drugs\"], values[\"21_2_used_drugs\"]],\n            if (values[\"21_1_used_drugs\"]?.length && values[\"21_2_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = [...values[\"21_1_used_drugs\"], values[\"21_2_used_drugs\"]].toString()\n            } else if (values[\"21_1_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = values[\"21_1_used_drugs\"].toString()\n            } else if (values[\"21_2_used_drugs\"]?.length) {\n                stateForm[\"21_used_drugs\"] = [values[\"21_2_used_drugs\"]].toString()\n            } else {\n                stateForm[\"21_used_drugs\"] = null\n            }\n\n            // \"27_registration_on_the_territory\": [...values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"]],\n            if (values[\"27_1_registration_on_the_territory\"]?.length && values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [values[\"27_1_registration_on_the_territory\"], values[\"27_2_registration_on_the_territory\"]].toString()\n            } else if (values[\"27_1_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = values[\"27_1_registration_on_the_territory\"].toString()\n            } else if (values[\"27_2_registration_on_the_territory\"]?.length) {\n                stateForm[\"27_registration_on_the_territory\"] = [values[\"27_2_registration_on_the_territory\"]].toString()\n            } else {\n                stateForm[\"27_registration_on_the_territory\"] = null\n            }\n\n            // \"34_for_prep_you_use\": [...values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"]],\n            if (values[\"34_1_for_prep_you_use\"]?.length && values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [values[\"34_1_for_prep_you_use\"], values[\"34_2_for_prep_you_use\"]].toString()\n            } else if (values[\"34_1_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = values[\"34_1_for_prep_you_use\"].toString()\n            } else if (values[\"34_2_for_prep_you_use\"]?.length) {\n                stateForm[\"34_for_prep_you_use\"] = [values[\"34_2_for_prep_you_use\"]].toString()\n            } else {\n                stateForm[\"34_for_prep_you_use\"] = null\n            }\n\n            if (values[\"date\"]) {\n                stateForm[\"43_date\"] = values[\"date\"].format(\"M/D/YYYY HH:mm:ss\")\n            } else {\n                stateForm[\"43_date\"] = moment().format(\"M/D/YYYY HH:mm:ss\")\n            }\n\n            return stateForm\n        }\n\n        const fields = await createOtherFields()\n\n        setSubmitting(true)\n        dispatch(testing(fields))\n            .then(() => {\n                setSubmitting(false)\n                setSuccessful(true);\n                localStorage.removeItem(\"TESTING_FORM\")\n                form.resetFields()\n                history.push('/forms')\n                message.success('Форма успешно сохранена 👌')\n            })\n            .catch(() => {\n                setSuccessful(false);\n            });\n    }\n\n    function callback(key) {\n        setExpanded(key === \"1\")\n\n        form.setFieldsValue({\n            \"47_type_form\": key\n        });\n\n\n        console.log('expanded', expanded)\n    }\n\n    function CodeInput(props) {\n        return <>\n            <MaskedInput\n                className={styles.code}\n                mask=\"W/WW/WW/WW.WW.WWWW\"\n                placeholder=\"П/ИИ/ММ/ДД.ДД.ДДДД\"\n                isRevealingMask={true}\n                size=\"18\"\n                {...props}\n                formatCharacters={{\n                    'W': {\n                        validate() {\n                            return true\n                        },\n                        transform(char) {\n                            return char.toUpperCase()\n                        }\n                    }\n                }}\n            />\n\n            <Input\n                {...props}\n                onChange={onChangeCode}/>\n        </>\n    }\n\n    const optionsWithDisabled = [\n        { label: 'Аутрич в клубах', value: 'Аутрич в клубах' },\n        { label: 'Экраны в клубах', value: 'Экраны в клубах' },\n        { label: 'Соцсети/сайт фонда', value: 'Соцсети/сайт фонда' },\n        { label: 'Хорнет', value: 'Хорнет' },\n        { label: 'Телеграм', value: 'Телеграм' },\n        { label: 'Знакомые', value: 'Знакомые' },\n        { label: 'Контекстная реклама в Гугле', value: 'Контекстная реклама в Гугле' },\n        { label: 'Видео-реклама в Инстаграм', value: 'Видео-реклама в Инстаграм' },\n        { label: 'Поисковые системы', value: 'Поисковые системы' },\n        { label: 'Тестировался здесь ранее', value: 'Тестировался здесь ранее' },\n    ];\n\n    const onChangeCode = (event) => {\n        const value = event.target.value\n        form.setFieldsValue({\n            \"1_code\": value\n        });\n        const valueClean = value.replace(/[. /_]/g, '')\n        if (valueClean.length === 13) {\n            dispatch(findTesting({\n                code: valueClean\n            })).then((data) => {\n                dispatch(findByCode(data.data))\n                form.setFieldsValue({\n                    \"1_code\": value\n                });\n            })\n        }\n    }\n\n    return (\n        <div className={styles.container}>\n\n            <div className={styles.resetForm} onClick={resetForm}>Сбросить поля</div>\n\n            <div className={styles.image}\n                 style={expanded ? { backgroundImage: `url(${pride})` } : { backgroundImage: `url(${noPride})` }}\n            />\n\n            <div className={styles.titleContainer}>\n                <div className={styles.line}/>\n                <h1 className={styles.h1}>Опрос тестируемых «СПИД.ЦЕНТР»</h1>\n                <p className={styles.required}>* Обязательные поля</p>\n                <h5>Сохранить от имени: <a href=\"/login\"><b>{user.appointment}</b></a> ({user.city})</h5>\n            </div>\n\n            <Form\n                layout={'vertical'}\n                form={form}\n                initialValues={initialValues}\n                onValuesChange={onFormLayoutChange}\n                onFinish={onFinish}\n            >\n\n                <div className={styles.tabs}>\n                    <Tabs size=\"large\" defaultActiveKey={expanded} onChange={callback}>\n                        <TabPane tab=\"Расширенный\" key=\"1\"/>\n                        <TabPane tab=\"Сокращенный\" key=\"0\"/>\n                    </Tabs>\n                </div>\n\n                <div>\n                    <Form.Item name=\"1_code\"\n                               label=\"Уникальный идентификационный код (УИК) респондента (пол, 2 буквы имени, 2 буквы имени матери, дата рождения):\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Поле обязательно для заполнения',\n                                   },\n                               ]}\n                    >\n                        <CodeInput/>\n                    </Form.Item>\n\n                    {pastTests && <div>\n                        {pastTests.map(i => i[\"45_consultant_comment\"] &&\n                            <Alert message={i[\"45_consultant_comment\"]} type=\"info\" showIcon description={\n                                <div>{moment(i[\"43_date\"]).format('DD.MM.YYYY HH:mm')} {i[\"42_consultant\"] &&\n                                <span>({i[\"42_consultant\"]})</span>}</div>}/>)}\n                        {pastTests.length > 0 && <br/>}\n                        {pastTests.length > 0 ? [...pastTests].sort(function (a, b) {\n                                if (b[\"43_date\"] < a[\"43_date\"]) {\n                                    return -1;\n                                }\n                                if (b[\"43_date\"] > a[\"43_date\"]) {\n                                    return 1;\n                                }\n                                return -1;\n                            }).map(i =>\n                                <Tag>{moment(i[\"43_date\"], 'MM/DD/YYYY HH:mm:ss').format('DD.MM.YYYY HH:mm')}</Tag>)\n                            : <i style={{ color: \"gray\" }}>тестирований с этим кодом не найдено</i>\n                        }\n                    </div>}\n\n                </div>\n\n                {expanded && <div>\n                    <Form.Item name=\"2_1_how_did_you_know\" label=\"Откуда вы узнали о тестировании?\">\n                        <Checkbox.Group>\n                            {optionsWithDisabled.map(option => <Checkbox\n                                value={option.value}>{option.label}</Checkbox>)}\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"2_2_how_did_you_know\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"3_gender\" label=\"Ваш пол?\">\n                    <Radio.Group>\n                        <Radio value=\"Male\">Мужчина</Radio>\n                        <Radio value=\"Famale\">Женщина</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"4_age\" label=\"Ваш возраст?\">\n                    <Radio.Group>\n                        <Radio value=\"18-19 лет\">18-19 лет</Radio>\n                        <Radio value=\"20-29 лет\">20-29 лет</Radio>\n                        <Radio value=\"30-39 лет\">30-39 лет</Radio>\n                        <Radio value=\"40-49 лет\">40-49 лет</Radio>\n                        <Radio value=\"50 и старше\">50 и старше</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"5_1_first_sex\" label=\"В каком возрасте у вас был первый сексуальный контакт?\">\n                        <Input placeholder=\"Возраст\"/>\n                    </Form.Item>\n                    <Form.Item name=\"5_2_first_sex\" label=\"Не было\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Не было\"/>\n                        </Checkbox.Group>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <div>\n                    <Form.Item name=\"6_1_sexual_partners_from_6_months\"\n                               label=\"Были ли у вас сексуальные партнеры за последние 6 месяцев (если да, укажите число)?\">\n                        <Input placeholder=\"Укажите число партнеров\"/>\n                    </Form.Item>\n                    <Form.Item name=\"6_2_sexual_partners_from_6_months\" label=\"Нет\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Нет\"/>\n                        </Checkbox.Group>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"7_constant_sexual_partner\"\n                                        label=\"Есть ли у вас постоянный сексуальный партнер?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"8_sex_using_a_condom\"\n                                        label=\"Как часто вы занимались сексом в последние 6 месяцев, используя презерватив?\">\n                    <Radio.Group>\n                        <Radio value=\"Всегда / почти всегда\">Всегда / почти всегда</Radio>\n                        <Radio value=\"В большинстве случаев\">В большинстве случаев</Radio>\n                        <Radio value=\"Примерно в половине случаев\">Примерно в половине случаев</Radio>\n                        <Radio value=\"В меньшинстве случаев\">В меньшинстве случаев</Radio>\n                        <Radio value=\"Никогда\">Никогда</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"9_condom_for_sex_with_a_permanent\"\n                                        label=\"Используете ли вы презерватив при сексе с постоянным партнером?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"10_condom_for_sex_with_a_club\"\n                                        label=\"Используете ли вы презерватив при сексе со случайными партнерами?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"11_condom_for_last_sex\"\n                                        label=\"Вы пользовались презервативом во время последнего секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item name=\"12_using_condom\"\n                                        label=\"Используете ли вы презервативы при (возможны несколько вариантов):\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Вагинальном сексе\">Вагинальном сексе</Checkbox>\n                        <Checkbox value=\"Оральном сексе\">Оральном сексе</Checkbox>\n                        <Checkbox value=\"Анальном сексе\">Анальном сексе</Checkbox>\n                        <Checkbox value=\"Не использую\">Не использую</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"13_1_no_using_condom\"\n                               label=\"Почему вы не использовали презерватив со своим последним сексуальным партнером(возможны несколько вариантов)?\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Я использовал его\">Я использовал его</Checkbox>\n                            <Checkbox value=\"У меня его не было\">У меня его не было</Checkbox>\n                            <Checkbox value=\"Я был в алкогольном/наркотическом опьянении\">Я был в\n                                алкогольном/наркотическом\n                                опьянении</Checkbox>\n                            <Checkbox value=\"Они слишком дорогие\">Они слишком дорогие</Checkbox>\n                            <Checkbox value=\"Партнер не хотел пользоваться презервативом\">Партнер не хотел пользоваться\n                                презервативом</Checkbox>\n                            <Checkbox value=\"Мы были готовы зачать ребенка\">Мы были готовы зачать ребенка</Checkbox>\n                            <Checkbox value=\"Я не люблю пользоваться презервативами\">Я не люблю пользоваться\n                                презервативами</Checkbox>\n                            <Checkbox value=\"Мне кажется, в этом не было необходимости\">Мне кажется, в этом не было\n                                необходимости</Checkbox>\n                            <Checkbox value=\"Я доверяю своему партнеру\">Я доверяю своему партнеру</Checkbox>\n                            <Checkbox value=\"Я просто не думал об этом\">Я просто не думал об этом</Checkbox>\n                            <Checkbox value=\"Я использую PrEP\">Я использую PrEP</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"13_2_no_using_condom\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"14_now_there_is_a_condom\"\n                                        label=\"У тебя сейчас есть презерватив с собой?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded &&\n                <Form.Item name=\"15_with_whom_sex\" label=\"С кем у вас были половые контакты последние 6 месяцев?\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Мужчины\">Мужчины</Checkbox>\n                        <Checkbox value=\"Женщины\">Женщины</Checkbox>\n                        <Checkbox value=\"Трансгендеры\">Трансгендеры</Checkbox>\n                        <Checkbox value=\"Не было\">Не было</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"16_1_used_drugs\"\n                               label=\"Вы употребляли наркотики в последние 12 месяцев (если да, то какие)?\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Не употреблял\">Не употреблял</Checkbox>\n                            <Checkbox value=\"Героин\">Героин</Checkbox>\n                            <Checkbox value=\"Кокаин\">Кокаин</Checkbox>\n                            <Checkbox value=\"Марихуана\">Марихуана</Checkbox>\n                            <Checkbox value=\"МДМА (экстази)\">МДМА (экстази)</Checkbox>\n                            <Checkbox value=\"Мефедрон\">Мефедрон</Checkbox>\n                            <Checkbox value=\"Амфетамин\">Амфетамин</Checkbox>\n                            <Checkbox value=\"Метамфетамин\">Метамфетамин</Checkbox>\n                            <Checkbox value=\"Бутират\">Бутират</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"16_2_used_drugs\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"17_drugs_for_sex\"\n                                        label=\"Используете ли вы наркотики для секса?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"18_drugs_or_money_in_exchange_for_sex\"\n                                        label=\"Приходилось ли вам получать или давать деньги или наркотики в обмен на сексуальные услуги в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, я давал\">Да, я давал</Radio>\n                        <Radio value=\"Да, я получал\">Да, я получал</Radio>\n                        <Radio value=\"И то и другое\">И то и другое</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"19_sexually_transmitted_diseases\"\n                                        label=\"Были ли у вас заболевания, передающиеся половым путем, за последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"20_med_sexually_transmitted_diseases\"\n                                        label=\"Обращались ли вы за медицинской консультацией по поводу ИППП в последние 12 месяцев?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"21_1_used_drugs\"\n                               label=\"Диагностировали у вас есть хронические формы гепатита? (если да, укажите форму: A, B, C, D, E)\">\n                        <Checkbox.Group>\n                            <Checkbox value=\"Нет\">Нет</Checkbox>\n                            <Checkbox value=\"Я не знаю об этой болезни\">Я не знаю об этой болезни</Checkbox>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item name=\"21_2_used_drugs\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"22_diagnosed_with_syphilis\"\n                                        label=\"Был ли у вас ранее диагностирован сифилис?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"23_hiv_tested\"\n                                        label=\"Вы когда-нибудь проходили тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"24_how_often_hiv_tested\"\n                                        label=\"Как часто вы проходите тестирование на ВИЧ?\">\n                    <Radio.Group>\n                        <Radio value=\"Раз в 3 месяца\">Раз в 3 месяца</Radio>\n                        <Radio value=\"Раз в 6 месяцев\">Раз в 6 месяцев</Radio>\n                        <Radio value=\"Раз в 12 месяцев\">Раз в 12 месяцев</Radio>\n                        <Radio value=\"Менее одного раза в 12 месяцев\">Менее одного раза в 12 месяцев</Radio>\n                        <Radio value=\"Первый раз\">Первый раз</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"25_do_you_know_your_hiv_status\"\n                                        label=\"Знаете ли вы свой ВИЧ-статус?\">\n                    <Radio.Group>\n                        <Radio value=\"Я ВИЧ-положительный\">Я ВИЧ-положительный</Radio>\n                        <Radio value=\"Я ВИЧ-отрицательный\">Я ВИЧ-отрицательный</Radio>\n                        <Radio value=\"Я не знаю свой ВИЧ-статус\">Я не знаю свой ВИЧ-статус</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"26_you_are_a_citizen_of_russia\"\n                                        label=\"Вы гражданин России?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <div>\n                    <Form.Item name=\"27_1_registration_on_the_territory\"\n                               label=\"У вас есть регистрация на территории Московской области? (если есть регистрация другого региона, укажите, какого)\">\n                        <Radio.Group>\n                            <Radio value=\"Постоянная регистрация\">Постоянная регистрация</Radio>\n                            <Radio value=\"Временная регистрация\">Временная регистрация</Radio>\n                            <Radio value=\"Нет регистрации\">Нет регистрации</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item name=\"27_2_registration_on_the_territory\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n                {expanded && <Form.Item required name=\"28_you_education\"\n                                        label=\"Ваше образование?\">\n                    <Radio.Group>\n                        <Radio value=\"Не получил базового среднего образования (не закончил 8-9 классы школы)\">Не\n                            получил базового\n                            среднего образования (не закончил 8-9 классы школы)</Radio>\n                        <Radio\n                            value=\"Неполное среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)\">Неполное\n                            среднее (закончил 8-9 классы школы или ПТУ / колледжа на базе 8-9 классов)</Radio>\n                        <Radio\n                            value=\"Общее среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)\">Общее\n                            среднее (закончил 10-11 классы школы или ПТУ / колледжа на базе 10-11 классов)</Radio>\n                        <Radio\n                            value=\"Среднее специальное (окончил техникум / колледж / колледж со средним специальным образованием)\">Среднее\n                            специальное (окончил техникум / колледж / колледж со средним специальным\n                            образованием)</Radio>\n                        <Radio value=\"Неполное высшее образование (закончил 2-4 года университета)\">Неполное высшее\n                            образование\n                            (закончил 2-4 года университета)</Radio>\n                        <Radio value=\"Высшее (получил диплом университета)\">Высшее (получил диплом университета)</Radio>\n                        <Radio value=\"Академическая степень (кандидат наук, доктор наук)\">Академическая степень\n                            (кандидат наук,\n                            доктор наук)</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"29_the_nature_of_your_work\"\n                                        label=\"Какое из следующих определений лучше всего описывает характер вашей работы на данный момент?\">\n                    <Radio.Group>\n                        <Radio value=\"Полная занятость\">Полная занятость</Radio>\n                        <Radio value=\"Частичная/неполная занятость\">Частичная/неполная занятость</Radio>\n                        <Radio\n                            value=\"Полная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Полная\n                            занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности</Radio>\n                        <Radio\n                            value=\"Случайный заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной деятельности\">Случайный\n                            заработок, неполная занятость в собственном бизнесе или в приносящей доход индивидуальной\n                            деятельности</Radio>\n                        <Radio value=\"Безработный (ищу работу)\">Безработный (ищу работу)</Radio>\n                        <Radio value=\"Я не работаю и не ищу работу\">Я не работаю и не ищу работу</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"30_marital_status\"\n                                        label=\"Ваше семейное положение?\">\n                    <Radio.Group>\n                        <Radio value=\"Никогда не был женат\">Никогда не был женат</Radio>\n                        <Radio value=\"Я живу вместе с партнером, но отношения не зарегистрированы\">Я живу вместе с\n                            партнером, но\n                            отношения не зарегистрированы</Radio>\n                        <Radio value=\"Женат/замужем\">Женат/замужем</Radio>\n                        <Radio value=\"Женат/замужем, живу отдельно от партнера\">Женат/замужем, живу отдельно от\n                            партнера</Radio>\n                        <Radio value=\"В разводе живу отдельно от партнера\">В разводе живу отдельно от партнера</Radio>\n                        <Radio value=\"В разводе, но живу с партнером\">В разводе, но живу с партнером</Radio>\n                        <Radio value=\"Вдовец/вдова\">Вдовец/вдова</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"31_you_are_a_listen_PrEP\"\n                                        label=\"Вы уже слышали о доконтактной профилактике (PrEP) до этого?\">\n                    <Radio.Group>\n                        <Radio value=\"Да\">Да</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <Form.Item required name=\"32_you_are_a_interest_PrEP\"\n                                        label=\"Вы были бы заинтересованы в использовании PrEP?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"33_you_are_a_used_PrEP\"\n                                        label=\"Вы когда-нибудь уже использовали доконтактную профилактику (PrEP)?\">\n                    <Radio.Group>\n                        <Radio value=\"Да, на ежедневной основе\">Да, на ежедневной основе</Radio>\n                        <Radio value=\"Да, по требованию (например, только до и после секса без презерватива)\">Да, по\n                            требованию\n                            (например, только до и после секса без презерватива)</Radio>\n                        <Radio value=\"Нет\">Нет</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                {expanded && <div>\n                    <Form.Item name=\"34_1_for_prep_you_use\"\n                               label=\"Для PrEP вы используете:\">\n                        <Radio.Group>\n                            <Radio value=\"Truvada\">Truvada</Radio>\n                            <Radio value=\"Дженерики Truvada\">Дженерики Truvada</Radio>\n                            <Radio value=\"Двухкомпонентную схему (тенофавир и ламивудин/эмтрицитабин)\">Двухкомпонентную\n                                схему\n                                (тенофавир и ламивудин/эмтрицитабин)</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item name=\"34_2_for_prep_you_use\">\n                        <Input placeholder=\"Другое\"/>\n                    </Form.Item>\n                </div>}\n\n\n                {expanded && <Form.Item required name=\"35_you_have_started_taking_prep\"\n                                        label=\"Вы начали прием PrEP:\">\n                    <Radio.Group>\n                        <Radio value=\"После прохождения теста на ВИЧ и консультации с врачом\">После прохождения теста на\n                            ВИЧ и\n                            консультации с врачом</Radio>\n                        <Radio value=\"После теста на ВИЧ\">После теста на ВИЧ</Radio>\n                        <Radio value=\"Без каких-либо тестов и консультаций\">Без каких-либо тестов и консультаций</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                <Form.Item required name=\"36_hiv_test_result\"\n                           label=\"Результат теста на ВИЧ:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n\n                {expanded && <Form.Item required name=\"37_hepatitis_test_result\"\n                                        label=\"Результат теста на Гепатит С:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n                {expanded && <Form.Item required name=\"38_syphilis_test_result\"\n                                        label=\"Результат теста на Сифилис:\">\n                    <Radio.Group>\n                        <Radio value=\"Положительный\">Положительный</Radio>\n                        <Radio value=\"Отрицательный\">Отрицательный</Radio>\n                    </Radio.Group>\n                </Form.Item>}\n\n\n                <Form.Item name=\"39_consulting_on_regular_testing_provided\"\n                           label=\"Оказано консультирование по регулярному тестированию\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"40_prevention_counseling_provided\" label=\"Оказано консультирование по профилактике\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"41_provided_counseling_on_receiving_treatment_for_hiv\"\n                           label=\"Оказано консультирование по получению лечения для ВИЧ+\">\n                    <Checkbox.Group>\n                        <Checkbox value=\"Да\">Да</Checkbox>\n                    </Checkbox.Group>\n                </Form.Item>\n\n                <div>\n                    <Switch checked={now} onChange={() => setNow(!now)}/>&nbsp;&nbsp;&nbsp;<label htmlFor=\"\">Сохраняю\n                    во\n                    время\n                    тестирования (текущее время)</label>\n                </div>\n\n                {\n                    !now && <>\n                        <Form.Item rules={[\n                            {\n                                required: true,\n                                message: 'Поле обязательно для заполнения',\n                            },\n                        ]} name=\"date\" label={`Дата и Время`}>\n                            <DatePicker showTime format={'DD.MM.YYYY HH:mm'}/>\n                        </Form.Item>\n\n                    </>\n                }\n\n                <Form.Item name=\"45_consultant_comment\" label={`Комментарий консультанта (${user.appointment}, филиал ${user.city})`}>\n                    <Input.TextArea placeholder=\"Комментарий\"/>\n                </Form.Item>\n\n                {submitting ? \"Loading...\" : <Form.Item>\n                    <Button htmlType=\"submit\" type=\"primary\">Сохранить опрос</Button>\n                </Form.Item>}\n            </Form>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    pastTests: state.filter.findByCode\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    findByCode: (code) => dispatch(findByCode(code))\n})\n\nexport default useAuth(connect(mapStateToProps, mapDispatchToProps)(TestingForm), USER);\n","import axios from \"axios\";\nimport baseUrl from \"./../baseurl\";\n\nconst host = baseUrl()\nconst API_URL = `${host}/api/auth/`;\n\nclass AuthService {\n  // login(email, password) {\n  //   return axios\n  //     .post(API_URL + \"signin\", {\n  //       email,\n  //       password\n  //     })\n  //     .then(response => {\n  //       if (response.data.accessToken) {\n  //         localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //       }\n  //\n  //       return response.data;\n  //     });\n  // }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(values) {\n    return axios.post(API_URL + \"signup\", {\n      username: values.username,\n      appointment: values.appointment,\n      password: values.password,\n      city: values.city\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from 'react-redux'\n\nimport AuthService from \"../../services/auth.service\";\nimport { fetchLoginForm } from \"../../redux/thunks/user.thunks\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Обязательно для заполнения\n            </div>\n        );\n    }\n};\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            fetchLoginForm({username: this.state.email, password: this.state.password}).then(\n                (e) => {\n                    if (e.roles.length) {\n                        this.props.history.push(\"/forms\");\n                        window.location.reload();\n                    }\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <img\n                    className=\"card-container__img\"\n                    src=\"https://year18.spid.center/img/illustration-footer.jpg\"\n                    alt=\"profile-img\"\n                />\n\n                <div className=\"card card-container\">\n                    {/*<img*/}\n                    {/*  src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"*/}\n                    {/*  alt=\"profile-img\"*/}\n                    {/*  className=\"profile-img-card\"*/}\n                    {/*/>*/}\n                    <h5 className=\"card-container__title\">Авторизация в CRM</h5>\n\n                    <Form\n                        onSubmit={ this.handleLogin }\n                        ref={ c => {\n                            this.form = c;\n                        } }\n                    >\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Сотрудник</label>\n                            <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={ this.state.email }\n                                onChange={ this.onChangeEmail }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Пароль</label>\n                            <Input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={ this.state.password }\n                                onChange={ this.onChangePassword }\n                                validations={ [ required ] }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button\n                                className=\"btn btn-primary btn-block\"\n                                disabled={ this.state.loading }\n                            >\n                                { this.state.loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\n                                ) }\n                                <span>Войти</span>\n                            </button>\n                        </div>\n\n                        { this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    { this.state.message }\n                                </div>\n                            </div>\n                        ) }\n                        <CheckButton\n                            style={ {display: \"none\"} }\n                            ref={ c => {\n                                this.checkBtn = c;\n                            } }\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login","import React from 'react';\nimport classes from './styles.module.scss'\n\nconst Header = props => {\n    return (\n        <div className={classes.Header}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Default = props => {\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default Default;\n","import React from \"react\";\nimport {USER} from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport Header from \"./Header/Header\";\nimport Default from \"./Layouts/Default\";\n\nconst Profile = () => {\n\n    const currentUser = JSON.parse(localStorage.getItem('user'))\n\n    return (\n        <div>\n            <Header>\n                <h2>Настройки</h2>\n            </Header>\n            <Default>\n                <p><strong>Email</strong>: {currentUser.email}</p>\n                <p> Сменить email</p>\n                <p> Сменить пароль</p>\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(Profile, USER);","import React from \"react\";\nimport useAuth from \"../hooks/useAuth\";\nimport {USER} from \"../constants/roles.constants\";\nimport Default from \"./Layouts/Default\";\nimport Header from \"./Header/Header\";\n\nconst AdminPanel = () => {\n    return (<div>\n            <Header>\n                <h2>User page (uploaded video and upload)</h2>\n            </Header>\n            <Default>\n                Content\n            </Default>\n        </div>\n    );\n}\n\nexport default useAuth(AdminPanel, USER)","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport baseurl from \"../baseurl\";\n\nconst host = baseurl()\nconst API_URL = `${host}/api/diagrams`;\n\nconst findDiagram = (type = {}) => {\n    return axios.post(API_URL, type, { headers: authHeader() });\n};\n\nexport default {\n    findDiagram\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport styles from \"./styles.module.scss\";\nimport { Checkbox, Radio } from \"antd\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, multiplicity) => {\n\n    const createMultiplicityValue = (value) => {\n        const valueParse = value && parseInt(value.match(/\\d+/))\n        switch (multiplicity) {\n            case \"5\":\n                return (Math.ceil(valueParse / 5) * 5);\n            case \"10\":\n                return (Math.ceil(valueParse / 10) * 10);\n            default:\n                return value;\n        }\n    }\n\n    const hash = data.map(v => createMultiplicityValue(v[keyValue]))\n    const obj = {};\n\n    hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n    const res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n        .sort((a, b) => b[1] - a[1]);\n\n    const labels = res.map(i => i[0][keyValue])\n    const dataValues = res.map(i => i[1])\n\n    return {\n        type: 'doughnut',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ]\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            plugins: {\n                height: 400,\n                datalabels: {\n                    backgroundColor: function (context) {\n                        return context.dataset.backgroundColor;\n                    },\n                    borderColor: 'white',\n                    borderRadius: 25,\n                    borderWidth: 2,\n                    color: 'white',\n                    display: function (context) {\n                        var dataset = context.dataset;\n                        var count = dataset.data.length;\n                        var value = dataset.data[context.dataIndex];\n                        return value > count * 1.5;\n                    },\n                    formatter: function (value, ctx) {\n                        let sum = ctx.dataset.data.reduce((previousValue, currentValue) => previousValue + currentValue);\n                        // return `${(value * 100 / sum).toFixed(2) + \"%\"} \\n(${value})`;\n                        return `${(value * 100 / sum).toFixed(2) + \"%\"}`;\n                    },\n                    font: {\n                        weight: 'bold'\n                    },\n                    padding: 6,\n                },\n                legend: {\n                    position: 'left',\n                },\n            },\n\n            // Core options\n            aspectRatio: 6 / 2,\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst PieDiagram = ({ data, title, keyValue }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [multiplicity, setMultiplicity] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '5_first_sex':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetMultiplicity = (e) => {\n        setMultiplicity(e.target.value);\n    };\n\n    const updateDataset = useCallback(() => {\n        chartInstance.data = createData(data, keyValue, multiplicity).data\n        chartInstance.update();\n    });\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, multiplicity));\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer, chartInstance, data, keyValue, multiplicity]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n    }, [data, autoUpdate, multiplicity, chartInstance, updateDataset])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n\n            {showSelectorWithRounding() && <Radio.Group value={multiplicity} onChange={handleSetMultiplicity}>\n                <Radio.Button value=\"0\">Без группировки</Radio.Button>\n                <Radio.Button value=\"5\">+ до кратн. 5</Radio.Button>\n                <Radio.Button value=\"10\">+ до кратн. 10</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n        </div>\n    );\n};\n\nexport default PieDiagram;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport styles from \"./styles.module.scss\";\nimport { Checkbox, Radio, Tag } from \"antd\";\n\nChart.register(...registerables);\n\nconst createData = (data, keyValue, arrayType, type, rounding) => {\n\n    const createMultiplicityValue = (value) => {\n        const valueParse = value && parseInt(value.match(/\\d+/))\n\n        if (keyValue === '6_sexual_partners_from_6_months') {\n            switch (rounding) {\n                case \"0\":\n                    return (Math.round(valueParse / 5) * 5);\n                case \"1\":\n                    return (Math.ceil(valueParse / 5) * 5);\n                case \"-1\":\n                    return (Math.floor(valueParse / 5) * 5);\n            }\n        }\n        return value\n    }\n\n    let hash = []\n    let itemsArrayType = []\n    let res\n\n    let obj = {};\n\n    if (arrayType) {\n        hash = data.map(v => v[keyValue])\n        for (let i = 0; i <= hash.length; i++) {\n            if (hash[i]) {\n                const a = hash[i].split(\",\")\n                a.map(aa => itemsArrayType.push(aa.trim()))\n            }\n        }\n\n        itemsArrayType.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => {\n            if (c[keyValue] && c[keyValue].includes(v)) {\n                c[keyValue] = v\n                return c[keyValue].includes(v)\n            }\n        })), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n\n\n    } else {\n        hash = data.map(v => createMultiplicityValue(v[keyValue]))\n\n        hash.forEach(v => !obj[v] ? obj[v] = 1 : obj[v]++);\n        res = Object.keys(obj).map(v => [Object.assign({}, data.find(c => c[keyValue] == v)), obj[v]])\n            .sort((a, b) => b[1] - a[1]);\n    }\n\n    const labels = res.filter(i => i[1] > 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const singleValuesLabels = res.filter(i => i[1] === 1).map(i => {\n        return i[0][keyValue]\n    })\n\n    const dataValues = res.filter(i => i[1] > 1).map(i => i[1])\n\n    return {\n        type: 'bar',\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: \"# of Votes\",\n                    data: dataValues,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                    ],\n                    datalabels: {\n                        anchor: 'end'\n                    }\n                }\n            ],\n            singleValuesLabels: singleValuesLabels\n        },\n        plugins: [ChartDataLabels],\n        options: {\n            indexAxis: type ? \"x\" : \"y\",\n            responsive: true,\n            plugins: {\n                scaleShowValues: true,\n                scales: {\n                    y: type ? {} : {\n                        ticks: {\n                            autoSkip: false,\n                            fontSize: 10,\n                            max: 1003,\n                            stepSize: 1,\n                        },\n                        padding: { top: 30, left: 0, right: 0, bottom: 0 }\n                    },\n                },\n                height: 400,\n                legend: false,\n                // tooltip: { callbacks: { footer: footer } },\n                datalabels: {\n                    align: \"end\",\n                    offset: 10\n                }\n            },\n            cutoutPercentage: 32,\n            layout: {\n                padding: 32\n            },\n            elements: {\n                line: {\n                    fill: false\n                },\n                point: {\n                    hoverRadius: 7,\n                    radius: 5\n                }\n            },\n        }\n    };\n}\n\nconst BarDiagram = ({ data, title, keyValue, arrayType, type }) => {\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    const [autoUpdate, setAutoUpdate] = useState(true);\n    const [rounding, setRounding] = useState(\"0\");\n\n    const showSelectorWithRounding = () => {\n        switch (keyValue) {\n            case '6_sexual_partners_from_6_months':\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleSetRounding = (e) => {\n        setRounding(e.target.value);\n    };\n\n    const updateDataset = () => {\n        chartInstance.data = createData(data, keyValue, arrayType, type, rounding).data\n        chartInstance.update();\n    };\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current && data && !chartInstance) {\n            const newChartInstance = new Chart(chartContainer.current, createData(data, keyValue, arrayType, type, rounding));\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer, data]);\n\n    useEffect(() => {\n        chartInstance && autoUpdate && updateDataset();\n    }, [data, autoUpdate, rounding])\n\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.title}>{title}</h2>\n            {(keyValue === '6_sexual_partners_from_6_months') &&\n            <p>округление до ближайшего числа, кратного 5 (0 = 0, 1, 2, а 5 = 3, 4, 5, 6, 7)</p>}\n\n            {showSelectorWithRounding() && <Radio.Group value={rounding} onChange={handleSetRounding}>\n                <Radio.Button value=\"0\">округление до ближайшего</Radio.Button>\n                <Radio.Button value=\"1\">в бОльшую сторону</Radio.Button>\n                <Radio.Button value=\"-1\">в меньшую сторону</Radio.Button>\n            </Radio.Group>}\n            &nbsp;&nbsp;&nbsp;\n            <Checkbox checked={autoUpdate} onChange={() => setAutoUpdate(!autoUpdate)}>Обновлять с изменением\n                фильтра</Checkbox>\n            {!autoUpdate && <button onClick={updateDataset}>обновить</button>}\n\n            <canvas ref={chartContainer}/>\n            {chartInstance && chartInstance.data.singleValuesLabels.map(i => <Tag>1️⃣&nbsp;&nbsp;{i}</Tag>)}\n        </div>\n    );\n};\n\nexport default BarDiagram;\n","import React from 'react';\nimport { ConfigProvider, DatePicker, Checkbox, Select, Input } from 'antd';\nimport 'moment/locale/ru';\nimport locale from 'antd/lib/locale/ru_RU';\nimport { connect } from \"react-redux\";\nimport {\n    setSearchOfCode,\n    setRangePeriod, setTestingCity,\n    setTestingDrugUsed,\n    setTestingPrepUsed,\n    setTestingSexWorked,\n    setFormType\n} from \"../../redux/reducers/filter.reducer\";\nimport styles from './styles.module.scss'\n\nconst { Option } = Select;\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'DD.MM.YYYY HH:mm:ss';\n\nconst Filters = ({\n                     sexWorked,\n                     usedPrep,\n                     usedDrugs,\n                     periodType,\n                     formType,\n                     setFormType,\n                     setDrugUsed,\n                     setPrepUsed,\n                     setSexWorked,\n                     setRangePeriod,\n                     setCity,\n                     setSearchOfCode\n                 }) => {\n\n    const onChangeDrugUsed = () => {\n        setDrugUsed(!usedDrugs)\n    }\n    const onChangePrepUsed = () => {\n        setPrepUsed(!usedPrep)\n    }\n    const onChangeSexWorked = () => {\n        setSexWorked(!sexWorked)\n    }\n\n    const onChangeRangePeriod = (period) => {\n        setRangePeriod(period)\n    }\n\n    const onChangeCity = (city) => {\n        setCity(city)\n    }\n\n    const onChangeFormType = (type) => {\n        setFormType(type)\n    }\n\n    const onSearchOfCode = (value) => {\n        setSearchOfCode(value)\n    }\n\n    return (\n        <div className={styles.filters}>\n            <div className={styles.firstLine}>\n                {periodType !== \"all\" && <ConfigProvider locale={locale}>\n                    <RangePicker showTime onChange={onChangeRangePeriod} format={dateFormat}/>\n                </ConfigProvider>}\n                <div className={styles.groups}>\n                    <Checkbox onChange={onChangeDrugUsed}>Used drugs</Checkbox>\n                    <Checkbox onChange={onChangePrepUsed}>Used PrEP</Checkbox>\n                    <Checkbox onChange={onChangeSexWorked}>Sex workers</Checkbox>\n                </div>\n\n                <Select\n                    style={{ width: 200 }}\n                    placeholder=\"Фильтр по филиалу\"\n                    defaultValue=\"\"\n                    onClear={() => {\n                    }}\n                    optionFilterProp=\"children\"\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option value=\"\">Все филиалы</Option>\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"nn\">Нижний Новгород</Option>\n                    <Option value=\"spb\">Санкт-Петербург</Option>\n                </Select>\n\n                {/*накинуть фильтр по возрасту*/}\n            </div>\n\n            <div className={styles.secondLine}>\n\n                <Search\n                    placeholder=\"поиск анкет по коду\" onSearch={onSearchOfCode} allowClear style={{ width: 300 }}\n                    enterButton/>\n\n                <Select\n                    style={{ width: 200 }}\n                    placeholder=\"Тип опроса\"\n                    defaultValue={formType ? formType : \"\"}\n                    onChange={onChangeFormType}\n                >\n                    <Option value=\"\">Все типы опросов</Option>\n                    <Option value=\"expanded\">Расширенный опрос</Option>\n                    <Option value=\"short\">Сокращённый опрос</Option>\n                </Select>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    periodType: state.filter.periodType,\n    usedDrugs: state.filter.usedDrugs,\n    sexWorked: state.filter.sexWorked,\n    usedPrep: state.filter.usedPrep,\n    formType: state.filter.formType,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setDrugUsed: (used) => dispatch(setTestingDrugUsed(used)),\n    setPrepUsed: (used) => dispatch(setTestingPrepUsed(used)),\n    setSexWorked: (used) => dispatch(setTestingSexWorked(used)),\n    setRangePeriod: (period) => dispatch(setRangePeriod(period)),\n    setCity: (city) => dispatch(setTestingCity(city)),\n    setSearchOfCode: (code) => dispatch(setSearchOfCode(code)),\n    setFormType: (type) => dispatch(setFormType(type)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\n","import React, { useEffect, useState } from 'react';\nimport { Collapse, PageHeader, Table, Tabs } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { findDiagram } from \"../../../redux/thunks/diagrams\";\nimport { findTesting } from \"../../../redux/thunks/forms\";\nimport PieDiagram from \"../../diagrams/pie\";\nimport BarDiagram from \"../../diagrams/bar\";\nimport Filters from \"../../filters/filters\";\nimport styles from './styles.module.scss'\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nconst TestingReport = () => {\n    const dispatch = useDispatch();\n    const selectorFiltersTesting = useSelector((state) => state.filter);\n    const [testing, setTesting] = useState(null)\n    const [columnsForm, setColumnsForm] = useState(null)\n    const filters = {\n        rangePeriodStart: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[0].format('M/D/YYYY HH:mm:ss').toString(),\n        rangePeriodEnd: selectorFiltersTesting.rangePeriod && selectorFiltersTesting.rangePeriod[1].format('M/D/YYYY HH:mm:ss').toString(),\n        usedDrugs: selectorFiltersTesting.usedDrugs,\n        usedPrep: selectorFiltersTesting.usedPrep,\n        sexWorked: selectorFiltersTesting.sexWorked,\n        city: selectorFiltersTesting.city,\n        searchByCode: selectorFiltersTesting.searchOfCode,\n        formType: selectorFiltersTesting.formType\n    }\n\n    useEffect(() => {\n        dispatch(findTesting(filters)).then((data) => {\n            setTesting(data.data)\n        })\n\n        dispatch(findDiagram({ type: \"testing\" })).then((data) => {\n            setColumnsForm(data.data)\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectorFiltersTesting])\n\n    const columns = columnsForm && columnsForm.map(column => ({\n        title: column.title,\n        dataIndex: column.code,\n        key: column.code,\n        order: column.order,\n        width: 400,\n    }))\n        .sort((a, b) => a.order - b.order);\n\n    const comments = testing && testing.filter(i => ((i[\"45_consultant_comment\"] || i[\"42_consultant\"]) ? {\n        \"45_consultant_comment\": i[\"45_consultant_comment\"],\n        \"42_consultant\": i[\"42_consultant\"],\n        \"43_date\": i[\"43_date\"],\n    } : undefined))\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Опрос тестируемых\"\n                subTitle={testing?.length && <span>с учётом фильтров: <b>{testing?.length}</b></span>}\n            />\n            <Filters/>\n            <Tabs className={styles.tabs} defaultActiveKey=\"1\">\n                <TabPane tab=\"Статистика по вопросам\" key=\"1\">\n\n                    {columnsForm && columnsForm.map(column => {\n                        if (column.type === 'pie') {\n                            return <PieDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                data={testing}\n                            />\n                        } else if (column.type && column.type.includes(\"bar\")) {\n                            return <BarDiagram\n                                title={column.title}\n                                keyValue={column.code}\n                                type={column.type.includes(\"x\")}\n                                data={testing}\n                                arrayType={columnsForm.find(i => i.code === column.code)[\"arrayType\"]}\n                            />\n                        } else if (column.type === 'table') {\n                            return <Collapse>\n                                <Panel header=\"Поиск по комментарию\" key=\"1\">\n                                    <Table dataSource={\n                                        comments} columns={[\n                                        {\n                                            title: 'Комментарий консультанта',\n                                            dataIndex: '45_consultant_comment',\n                                            key: '45_consultant_comment',\n                                        },\n                                        {\n                                            title: 'Консультант',\n                                            dataIndex: '42_consultant',\n                                            key: '42_consultant',\n                                        },\n                                        {\n                                            title: 'Дата',\n                                            dataIndex: '43_date',\n                                            key: '43_date',\n                                        }\n                                    ]}/>\n                                </Panel>\n                            </Collapse>\n                        }\n\n                    })}\n                </TabPane>\n                <TabPane tab=\"В виде таблицы\" key=\"2\">\n                    <Table\n                        bordered\n                        layout=\"none\"\n                        size=\"small\"\n                        scroll={{ x: 'calc(6000px + 50%)', y: \"100%\" }}\n                        columns={columns}\n                        dataSource={testing}\n                        tableLayout=\"auto\"\n                        pagination\n                        top=\"none\"\n                        bottom=\"bottomRight\"\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default TestingReport;\n","import DiagramService from \"../../services/diagram.service\";\nimport { DIAGRAM_FAIL, DIAGRAM_SUCCESS, SET_MESSAGE } from \"./types\";\n\nexport const findDiagram = (filters) => (dispatch) => {\n    return DiagramService.findDiagram(filters).then(\n        (response) => {\n            dispatch({\n                type: DIAGRAM_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve(response);\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: DIAGRAM_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};","import React from \"react\";\nimport { Select, Form, Input, Button } from 'antd';\n\nimport AuthService from \"../../services/auth.service\";\n\nconst { Option } = Select;\n\nexport const Register = () => {\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        AuthService.register(values).then((data) => console.log('data AuthService register', data))\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form\n            name=\"basic\"\n            layout=\"vertical\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Полное имя (для форм и списков)\"\n                name=\"appointment\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Пароль\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input password!',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Город\"\n                name=\"city\"\n            >\n                <Select placeholder=\"Город\" defaultValue=\"moscow\">\n                    <Option value=\"moscow\">Москва</Option>\n                    <Option value=\"spb\">Санкт-Петербург</Option>\n                    <Option value=\"nn\">Нижний Новгород</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Добавить сотрудника\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { Modal, Table, Select, PageHeader } from \"antd\";\nimport { findAllRoles, findAllUsers, findRoles, findSubdivisions } from \"../../../redux/thunks/user.thunks\";\nimport { Button } from 'antd';\nimport styles from \"../../reports/testing/styles.module.scss\";\nimport { Register } from \"../../Forms/Register\";\n\nconst { Option } = Select;\n\nexport const UserManagement = () => {\n\n    const [users, setUsers] = useState(null)\n    const [roles, setRoles] = useState(null)\n    const [subdivisions, setSubdivisions] = useState(null)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const cities = [\n        {\n            name: 'Москва',\n            code: 'moscow'\n        },\n        {\n            name: 'Санкт-Петербург',\n            code: 'spb'\n        },\n        {\n            name: 'Нижний Новгород',\n            code: 'nn'\n        },\n    ]\n\n    useEffect(() => {\n\n        findRoles().then(roles => setRoles(roles.data))\n        findSubdivisions().then(subdivisions => setSubdivisions(subdivisions.data))\n\n        findAllUsers().then((dataUsers) => {\n            findAllRoles().then((dataRoles) => {\n\n                setUsers(dataUsers.data.map(user => ({\n                        ...user,\n                        roleId: dataRoles.data.find(role => user.id === role.userId).roleId,\n                        subdivisionId: dataRoles.data.find(role => user.id === role.userId).subdivisionId,\n                    })\n                ).sort((a,b) => b.roleId - a.roleId))\n            })\n        })\n    }, [])\n\n    console.log('users', users)\n    console.log('roles', roles)\n    console.log('subdivisions', subdivisions)\n\n    const handleChangeRole = (value) => {\n        console.log(`selected role ${value}`);\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const columns = [\n        {\n            title: 'Учётка (username)',\n            width: 100,\n            dataIndex: 'username',\n            key: 'username',\n            fixed: 'left',\n        },\n        {\n            title: 'Полное имя (в списках)',\n            width: 100,\n            dataIndex: 'appointment',\n            key: 'appointment'\n        },\n        {\n            title: 'Роль сотрудника',\n            dataIndex: 'roleId',\n            key: '2',\n            width: 150,\n            render: (data) => {\n                return (\n                    <Select defaultValue={data} style={{ width: 200 }} onChange={handleChangeRole}>\n                        {roles.map(role => <Option value={role.id}>{role.label}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Доступны подразделения',\n            dataIndex: 'subdivisionId',\n            key: '1',\n            width: 150,\n            render: (data) => {\n                return (\n                    subdivisions && <Select\n                        mode=\"multiple\"\n                        defaultValue={\n                            !!data ? data.split('.').map(i => subdivisions.find(value => value.id === +i).id) : undefined\n                        }\n                        style={{ width: 250 }}\n                        onChange={handleChangeRole}>\n                        {subdivisions.map(subdivision => <Option value={subdivision.id}>{subdivision.label}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Город',\n            dataIndex: 'city',\n            key: '2',\n            width: 150,\n            render: (data) => {\n                return (\n                    <Select defaultValue={data} style={{ width: 200 }} onChange={handleChangeRole}>\n                        {cities.map(city => <Option value={city.code}>{city.name}</Option>)}\n                    </Select>\n                )\n            }\n        },\n        {\n            title: 'Создан',\n            width: 100,\n            dataIndex: 'createdAt',\n            key: 'createdAt'\n        },\n        {\n            key: 'operation',\n            fixed: 'right',\n            width: 100,\n            render: () => <>\n                <Button type=\"primary\" ghost size=\"small\">Изменить пароль</Button>\n                <Button type=\"primary\" ghost size=\"small\" danger>Удалить</Button>\n            </>,\n        }\n    ];\n\n    return (\n        <div>\n            <PageHeader\n                className={styles.title}\n                title=\"Сотрудники\"\n                subTitle=\"Управление учётными записями и правами\"\n                extra={<Button onClick={showModal} type=\"primary\">Добавить сотрудника</Button>}\n            />\n            <br/>\n\n            <p>\n                <b>Роль сотрудника</b> <br/>\n                <i>Консультант</i>: может создавать формы в выбранных подразделениях <br/>\n                <i>Модератор</i>: как user + доступен раздел отчёты по его подразделениям <br/>\n                <i>Администратор</i>: абсолютный доступ КО ВСЕМУ, вкладка \"Админка\", управление пользователями\n            </p>\n\n            <Table size=\"small\" columns={columns} dataSource={users} scroll={{ x: 1500, y: 300 }}/>\n\n            <Modal title=\"Регистрация нового сотрудника\" visible={isModalVisible} onCancel={handleCancel}\n                   footer={false}>\n                <Register/>\n            </Modal>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { MODERATOR } from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport UserService from \"../services/user.service\";\nimport TestingReport from \"./reports/testing/TestingReport\";\nimport { UserManagement } from \"./admin/user-management\";\n\nconst { Content, Sider } = Layout;\nconst BoardModerator = () => {\n    const [tab, setTab] = useState(\"1\");\n\n    const setActiveTab = (e) => {\n        setTab(e.key)\n    }\n\n    const setComponent = (tab) => {\n        switch (tab) {\n            case \"1\":\n                return <TestingReport/>\n            case \"2\":\n                return \"Индивидуальная формулировка выборки показателей отчета (добавлять/удалять стату с хитрой совмещенной выборкой)\"\n            default:\n                return \"\"\n        }\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <Menu onSelect={setActiveTab} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[tab]}>\n                    {/*<Menu.Item key=\"1\" icon={<VideoCameraOutlined/>}>*/}\n                    {/*    Диаграммы*/}\n                    {/*</Menu.Item>*/}\n                    <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                        Тестируемые\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" >\n                        Индивидуальный отч.\n                    </Menu.Item>\n                    {/*<Menu.Item key=\"4\" icon={<UserOutlined/>}>*/}\n                    {/*    nav 4*/}\n                    {/*</Menu.Item>*/}\n                </Menu>\n            </Sider>\n            <Layout>\n                {/*<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}/>*/}\n                <Content style={{ margin: '24px 16px 0' }}>\n                    {setComponent(tab)}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nexport default useAuth(BoardModerator, MODERATOR);","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { ADMIN } from \"../constants/roles.constants\";\nimport useAuth from \"../hooks/useAuth\";\nimport UserService from \"../services/user.service\";\nimport TestingReport from \"./reports/testing/TestingReport\";\nimport { UserManagement } from \"./admin/user-management\";\n\nconst { Content, Sider } = Layout;\nconst BoardAdmin = () => {\n    const [tab, setTab] = useState(\"1\");\n\n    const setActiveTab = (e) => {\n        setTab(e.key)\n    }\n\n    const setComponent = (tab) => {\n       switch (tab) {\n           case \"1\":\n               return <UserManagement/>\n           case \"2\":\n               return \"создание сущностей, редактирование, удаление, вход в ситему, просмотр отчета и т.д.\"\n           default:\n               return \"\"\n       }\n    }\n\n    return (\n        <Layout>\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    console.log(collapsed, type);\n                }}\n            >\n                <Menu onSelect={setActiveTab} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[tab]}>\n                    <Menu.Item key=\"1\" >\n                       Сотрудники\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<UserOutlined/>}>\n                        Журнал действий\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout>\n                {/*<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}/>*/}\n                <Content style={{ margin: '24px 16px 0' }}>\n                    {setComponent(tab)}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nexport default useAuth(BoardAdmin, ADMIN);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport AllForms from \"./components/all-forms/all-forms\";\nimport TestingForm from \"./components/Forms/testing/TestingForm\";\n\nimport logoWhite from './images/logo-white.svg'\nimport logoBlack from './images/logo-black.svg'\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Forms/Login\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/Board-user\";\nimport BoardModerator from \"./components/Board-moderator\";\nimport AdminPanel from \"./components/Board-admin\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.logOut = this.logOut.bind(this);\n\n        this.state = {\n            showModeratorBoard: false,\n            showAdminBoard: false,\n            currentUser: undefined,\n            readyToRedirect: null\n        };\n    }\n\n    componentDidMount() {\n        const userData = JSON.parse(localStorage.getItem('user'))\n        console.log('userData', userData)\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: AuthService.getCurrentUser(),\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.readyToRedirect !== null) {\n            this.setState({\n                readyToRedirect: null\n            })\n        }\n    }\n\n    logOut() {\n        AuthService.logout();\n    }\n\n    render() {\n        const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n        return (\n            <Router>\n                <div>\n                    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                        <div className=\"container-fluid\">\n                            <Link to={\"/\"} className=\"navbar-brand\">\n                                <div className=\"logo\" style={{ backgroundImage: `url(${logoWhite})` }}/>\n                            </Link>\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                                    data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                                {/*<li className=\"nav-item\">*/}\n                                {/*  <Link to={\"/home\"} className=\"nav-link\">*/}\n                                {/*    Домашняя*/}\n                                {/*  </Link>*/}\n                                {/*</li>*/}\n                                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n                                    {/*{currentUser && (*/}\n                                    {/*  <li className=\"nav-item\">*/}\n                                    {/*    <Link to={\"/user\"} className=\"nav-link\">*/}\n                                    {/*      Профиль*/}\n                                    {/*    </Link>*/}\n                                    {/*  </li>*/}\n                                    {/*)}*/}\n\n                                    {currentUser && (\n                                        <li className=\"nav-item\">\n                                            <Link to={\"/forms\"} className=\"nav-link\">\n                                                Опросы\n                                            </Link>\n                                        </li>\n                                    )}\n\n                                    {(showModeratorBoard || showAdminBoard) && (\n                                        <li className=\"nav-item\">\n                                            <Link to={\"/mod\"} className=\"nav-link\">\n                                                Отчёты\n                                            </Link>\n                                        </li>\n                                    )}\n\n                                    {showAdminBoard && (\n                                        <li className=\"nav-item\">\n                                            <Link to={\"/admin\"} className=\"nav-link\">\n                                                Админка\n                                            </Link>\n                                        </li>\n                                    )}\n\n                                    {currentUser ? (\n                                        <div className=\"navbar-nav ml-auto\">\n                                            <li className=\"nav-item\">\n                                                <Link to={\"/profile\"} className=\"nav-link\">{currentUser.appointment} ({currentUser.username})</Link>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <a href=\"/login\" className=\"nav-link\"\n                                                   onClick={this.logOut}>выйти</a>\n                                            </li>\n                                        </div>\n                                    ) : (\n                                        <div className=\"navbar-nav ml-auto\">\n                                            <li className=\"nav-item\">\n                                                <Link to={\"/login\"} className=\"nav-link\">\n                                                    войти\n                                                </Link>\n                                            </li>\n                                        </div>\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    </nav>\n\n                    {\n                        this.state.readyToRedirect\n                            ? <Redirect to={this.state.readyToRedirect}/>\n                            : null\n                    }\n\n                    <Switch>\n                        <Route exact path={[\"/\", \"/home\"]} component={Login}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/profile\" component={Profile}/>\n                        <Route exact path=\"/forms\" component={AllForms}/>\n                        <Route exact path=\"/testing\" component={TestingForm}/>\n                        <Route path=\"/user\" component={BoardUser}/>\n                        <Route path=\"/mod\" component={BoardModerator}/>\n                        <Route path=\"/admin\" component={AdminPanel}/>\n                    </Switch>\n                </div>\n\n                <div className=\"footer\">\n                    <div className=\"logo\" style={{ backgroundImage: `url(${logoBlack})` }}/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapState = state => ({\n    // allCounterNotRead: state.chat.allCounterNotRead\n})\n\nconst mapDispatch = dispatch => ({\n    // getUserChatsApi: id => dispatch(getUserChatsApi({ id })),\n})\n\nexport default withRouter(connect(mapState, mapDispatch)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createSlice} from '@reduxjs/toolkit'\nimport {START} from \"../../constants/others.constants\";\n\nconst APP_REDUCER_NAME = 'app'\n\nconst appSlice = createSlice({\n    name: APP_REDUCER_NAME,\n    initialState: {\n        loaded: false,\n        create: {\n            files: [],\n            metro: [],\n            typeOfApplicant: null\n        },\n        user: null\n    },\n    reducers: {\n        setLoadedFiles(state, action) {\n            state.create.files = [\n                ...state.create.files,\n                ...action.payload\n            ]\n        },\n        resetFiles(state, payload) {\n            state.create.files = []\n        },\n        setMetroStation(state, action) {\n            state.create.metro = action.payload\n        },\n        setLoading(state, action) {\n            state.loaded = action.payload !== START\n        },\n        setOneUserData(state, action) {\n            state.user = action.payload\n            state.loaded = true\n        }\n    }\n})\n\nexport const {\n    setLoadedFiles,\n    resetFiles,\n    setMetroStation,\n    setLoading,\n    setOneUserData\n} = appSlice.actions\n\nexport default appSlice.reducer\n","import {combineReducers} from 'redux'\nimport user from './reducers/user.reducer'\nimport app from './reducers/app.reducer'\n// import video from './reducers/video.reducer'\nimport filter from './reducers/filter.reducer'\n\nexport default combineReducers({\n    app,\n    user,\n    // video,\n    filter\n});\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport rootReducer from './reducer'\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger'\n// And use redux-batch as an example of adding enhancers\nimport {reduxBatch} from '@manaflair/redux-batch'\n\nconst middleware = [...getDefaultMiddleware(), logger]\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers: [reduxBatch]\n})\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport {YMInitializer} from 'react-yandex-metrika';\nimport * as Sentry from '@sentry/browser';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\nif (process.env.NODE_ENV === 'production') {\n    Sentry.init({dsn: \"https://80ec2091533941ef80154e3220bae060@o392602.ingest.sentry.io/5240421\"});\n}\n\nReactDOM.render(\n    <React.Fragment>\n        {process.env.NODE_ENV === 'production'\n            ? <YMInitializer accounts={[62759980]} options={{clickmap: true, webvisor: true}} version=\"2\"/>\n            : null}\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.Fragment>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__38MaE\",\"tabs\":\"styles_tabs__1iaNG\",\"ant-tabs-tab\":\"styles_ant-tabs-tab__1fvBs\",\"ant-tabs-tab-active\":\"styles_ant-tabs-tab-active__2Yg96\",\"ant-tabs-tab-btn\":\"styles_ant-tabs-tab-btn__1Owmp\",\"image\":\"styles_image__2gr_S\",\"titleContainer\":\"styles_titleContainer__x5hAm\",\"required\":\"styles_required__3hjvh\",\"line\":\"styles_line__5_JyL\",\"h1\":\"styles_h1__UJ0BG\",\"resetForm\":\"styles_resetForm__kMHmu\",\"code\":\"styles_code__3q6xo\"};"],"sourceRoot":""}